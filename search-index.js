var searchIndex = new Map(JSON.parse('[\
["halo2",{"t":"","n":[],"q":[],"i":[],"f":"","D":"b","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["halo2_backend",{"t":"CCCCCCRRRTKKRKTRRTMMMMMNMMMMMMMNNMMHNNMNNMMKPPPKGKNNNNNNNNNNNNNNNNNNNNNNKKKKRRRRRRRKKFKNNMNNNNNNNNNNNNNHNNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMHNMNNNNNNNNNNNNNNNNMMNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNMNNNNNNNNNNNNNNNNMNNPPPGPPPPPFFPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNCNNNNNNNNNNNNNNNNNNNNNCNNNNNNOHHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNHHNKFGFFKKFRPRFFPKONNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNCNNNNMNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNFTKRRKRRKKRKRKTTRKNNNMMMNNMNNMMNMNNNMNMNMNNNNMNNNMMMMNMMMMMNNNNMNMCCCCFFINNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNCCCCFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFKRFFKKKKKNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNMNMMNNNNNNNNNNNNNNNNMNHHMNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNN","n":["arithmetic","helpers","multicore","plonk","poly","transcript","AffineExt","Base","Base","CURVE_ID","CurveAffine","CurveExt","CurveExt","Field","ONE","ScalarExt","ScalarExt","ZERO","a","a","b","b","coordinates","cube","double","endo","from_xy","hash_to_curve","invert","is_on_curve","is_on_curve","is_zero","is_zero_vartime","jacobian_coordinates","new_jacobian","parallelize","pow","pow_vartime","random","sqrt","sqrt_alt","sqrt_ratio","square","CurveRead","Processed","RawBytes","RawBytesUnchecked","SerdeCurveAffine","SerdeFormat","SerdePrimeField","borrow","borrow_mut","byte_length","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","read","read","read","to_owned","try_from","try_into","type_id","vzip","write","write","IndexedParallelIterator","IntoParallelIterator","IntoParallelRefIterator","IntoParallelRefMutIterator","Item","Item","Item","Item","Iter","Iter","Iter","ParallelIterator","ParallelSliceMut","Scope","TryFoldAndReduce","all","any","as_parallel_slice_mut","borrow","borrow_mut","by_exponential_blocks","by_uniform_blocks","chain","chunks","cloned","cmp","collect","collect_into_vec","collect_vec_list","copied","count","current_num_threads","deref","deref_mut","drive","drive_unindexed","drop","enumerate","eq","filter","filter_map","find_any","find_first","find_last","find_map_any","find_map_first","find_map_last","flat_map","flat_map_iter","flatten","flatten_iter","fmt","fold","fold_chunks","fold_chunks_with","fold_with","for_each","for_each_init","for_each_with","from","ge","gt","init","inspect","interleave","interleave_shortest","intersperse","into","into_par_iter","join","le","len","lt","map","map_init","map_with","max","max_by","max_by_key","min","min_by","min_by_key","ne","opt_len","panic_fuse","par_chunk_by_mut","par_chunks_exact_mut","par_chunks_mut","par_iter","par_iter_mut","par_rchunks_exact_mut","par_rchunks_mut","par_sort","par_sort_by","par_sort_by_cached_key","par_sort_by_key","par_sort_unstable","par_sort_unstable_by","par_sort_unstable_by_key","par_split_inclusive_mut","par_split_mut","partial_cmp","partition","partition_map","position_any","position_first","position_last","positions","product","reduce","reduce_with","rev","scope","skip","skip_any","skip_any_while","spawn","spawn_broadcast","step_by","sum","take","take_any","take_any_while","try_fold","try_fold_and_reduce","try_fold_with","try_for_each","try_for_each_init","try_for_each_with","try_from","try_into","try_reduce","try_reduce_with","type_id","unzip","unzip_into_vecs","update","vzip","while_some","with_max_len","with_min_len","with_producer","zip","zip_eq","BoundsFailure","ColumnNotInPermutation","ConstraintSystemFailure","Error","InstanceTooLarge","InvalidInstances","NotEnoughRowsAvailable","Opening","Other","PinnedVerificationKey","ProvingKey","Transcript","VerifyingKey","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fixed_commitments","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bytes","from_bytes","get_domain","get_vk","hash_into","init","init","init","init","into","into","into","into","keygen","not_enough_rows_available","pinned","prover","read","read","source","to_bytes","to_bytes","to_owned","to_owned","to_string","transcript_repr","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","verifier","vzip","vzip","vzip","vzip","write","write","current_k","keygen_pk","keygen_vk","Prover","ProverSingle","borrow","borrow","borrow_mut","borrow_mut","commit_phase","commit_phase","create_proof","create_proof","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","init","init","into","into","new","new","new_with_engine","new_with_engine","phases","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","BatchVerifier","add_proof","borrow","borrow_mut","default","deref","deref_mut","drop","finalize","fmt","from","init","into","new","try_from","try_into","type_id","verify_proof","verify_proof_single","vzip","Basis","Coeff","Error","EvaluationDomain","ExtendedLagrangeCoeff","Guard","LagrangeBasis","LagrangeCoeff","MSMAccumulator","OpeningError","Output","PinnedEvaluationDomain","Polynomial","SamplingError","VerificationStrategy","_marker","add","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","coeff_from_vec","coeff_to_extended","commitment","constant_extended","constant_lagrange","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","divide_by_vanishing_poly","drop","drop","drop","drop","drop","drop","drop","empty_coeff","empty_extended","empty_lagrange","extended_k","extended_len","extended_to_coeff","finalize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_extended_omega","get_omega","get_omega_inv","get_quotient_poly_degree","index","index","index","index_mut","index_mut","index_mut","init","init","init","init","init","init","init","into","into","into","into","into","into","into","ipa","iter","iter_mut","k","kzg","l_i_range","lagrange_from_vec","lagrange_to_coeff","mul","new","new","new_empty","new_lagrange_from_vec","num_coeffs","pinned","process","rotate","rotate_extended","rotate_omega","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","values","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Blind","COMMIT_INSTANCE","CommitmentScheme","Curve","Guard","MSM","MSM","MSMAccumulator","Params","ParamsProver","ParamsProver","ParamsVerifier","ParamsVerifier","Prover","QUERY_INSTANCE","QUERY_INSTANCE","Scalar","Verifier","add","add_assign","add_assign","add_msm","append_term","bases","borrow","borrow_mut","check","clone","clone_into","commit","commit_lagrange","create_proof","create_proof_with_engine","default","deref","deref_mut","downsize","drop","empty_msm","eq","eval","fmt","from","init","into","k","mul","mul_assign","mul_assign","n","new","new","new","new","new_params","read","read_params","scalars","scale","to_owned","try_from","try_into","type_id","verify_proof","vzip","write","commitment","msm","multiopen","strategy","IPACommitmentScheme","ParamsIPA","ParamsVerifierIPA","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","commit","commit_lagrange","create_proof_with_engine","deref","deref","deref_mut","deref_mut","downsize","drop","drop","empty_msm","fmt","fmt","from","from","init","init","into","into","k","n","new","new_params","read","read_params","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","verify_proof","vzip","vzip","write","MSMIPA","add_constant_term","add_msm","add_msm","add_to_g_scalars","add_to_u_scalar","add_to_w_scalar","append_term","bases","borrow","borrow_mut","check","clone","clone_into","deref","deref_mut","drop","eval","fmt","from","init","into","new","scalars","scale","to_owned","try_from","try_into","type_id","vzip","ProverIPA","VerifierIPA","borrow","borrow","borrow_mut","borrow_mut","create_proof_with_engine","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","init","init","into","into","new","new","try_from","try_from","try_into","try_into","type_id","type_id","verify_proof","vzip","vzip","Accumulator","AccumulatorStrategy","GuardIPA","SingleStrategy","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compute_g","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","finalize","finalize","fmt","fmt","fmt","fmt","from","from","from","from","g","init","init","init","init","into","into","into","into","new","new","process","process","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","u_packed","use_challenges","use_g","vzip","vzip","vzip","vzip","commitment","msm","multiopen","strategy","KZGCommitmentScheme","ParamsKZG","ParamsVerifierKZG","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","commit","commit_lagrange","commit_lagrange","deref","deref","deref","deref_mut","deref_mut","deref_mut","downsize","downsize","drop","drop","drop","empty_msm","empty_msm","fmt","fmt","fmt","from","from","from","from_parts","init","init","init","into","into","into","k","k","n","n","new","new_params","read","read","read_custom","read_custom","read_params","setup","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verifier_params","vzip","vzip","vzip","write","write","write_custom","write_custom","DualMSM","MSMKZG","add_msm","add_msm","append_term","bases","borrow","borrow","borrow_mut","borrow_mut","check","check","clone","clone","clone_into","clone_into","combine_with_base","default","default","deref","deref","deref_mut","deref_mut","drop","drop","eval","fmt","fmt","from","from","init","init","into","into","new","new","scalars","scale","scale","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ProverGWC","ProverSHPLONK","VerifierGWC","VerifierSHPLONK","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","create_proof_with_engine","create_proof_with_engine","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","new","new","new","new","new","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","verify_proof","verify_proof","vzip","vzip","vzip","vzip","AccumulatorStrategy","GuardKZG","SingleStrategy","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","finalize","finalize","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","new","new","new","new","process","process","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with","Blake2bRead","Blake2bWrite","Challenge255","ChallengeScalar","EncodedChallenge","Input","Keccak256Read","Keccak256Write","Transcript","TranscriptRead","TranscriptReadBuffer","TranscriptWrite","TranscriptWriterBuffer","as_challenge_scalar","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","common_point","common_point","common_point","common_point","common_point","common_scalar","common_scalar","common_scalar","common_scalar","common_scalar","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","finalize","finalize","finalize","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_scalar","get_scalar","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","new","new","read_n_points","read_n_scalars","read_point","read_point","read_point","read_scalar","read_scalar","read_scalar","squeeze_challenge","squeeze_challenge","squeeze_challenge","squeeze_challenge","squeeze_challenge","squeeze_challenge_scalar","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","write_point","write_point","write_point","write_scalar","write_scalar","write_scalar"],"q":[[0,"halo2_backend"],[6,"halo2_backend::arithmetic"],[43,"halo2_backend::helpers"],[72,"halo2_backend::multicore"],[216,"halo2_backend::plonk"],[309,"halo2_backend::plonk::Error"],[310,"halo2_backend::plonk::keygen"],[312,"halo2_backend::plonk::prover"],[349,"halo2_backend::plonk::verifier"],[369,"halo2_backend::poly"],[539,"halo2_backend::poly::commitment"],[605,"halo2_backend::poly::ipa"],[609,"halo2_backend::poly::ipa::commitment"],[654,"halo2_backend::poly::ipa::msm"],[684,"halo2_backend::poly::ipa::multiopen"],[716,"halo2_backend::poly::ipa::strategy"],[789,"halo2_backend::poly::kzg"],[793,"halo2_backend::poly::kzg::commitment"],[866,"halo2_backend::poly::kzg::msm"],[915,"halo2_backend::poly::kzg::multiopen"],[980,"halo2_backend::poly::kzg::strategy"],[1040,"halo2_backend::transcript"],[1195,"pasta_curves::arithmetic::curves"],[1196,"subtle"],[1197,"ff"],[1198,"core::cmp"],[1199,"core::ops::arith"],[1200,"core::ops::function"],[1201,"alloc::boxed"],[1202,"core::marker"],[1203,"core::clone"],[1204,"core::convert"],[1205,"rand_core"],[1206,"core::fmt"],[1207,"std::io::error"],[1208,"std::io"],[1209,"core::result"],[1210,"core::any"],[1211,"rayon::iter"],[1212,"rayon::slice"],[1213,"rayon::iter::blocks"],[1214,"rayon::iter::chain"],[1215,"rayon::iter::chunks"],[1216,"rayon::iter::cloned"],[1217,"alloc::vec"],[1218,"alloc::collections::linked_list"],[1219,"rayon::iter::copied"],[1220,"rayon::iter::plumbing"],[1221,"rayon::iter::enumerate"],[1222,"rayon::iter::filter"],[1223,"rayon::iter::filter_map"],[1224,"core::option"],[1225,"rayon::iter::flat_map"],[1226,"rayon::iter::flat_map_iter"],[1227,"core::iter::traits::collect"],[1228,"rayon::iter::flatten"],[1229,"rayon::iter::flatten_iter"],[1230,"rayon_core::scope"],[1231,"rayon::iter::fold"],[1232,"rayon::iter::fold_chunks"],[1233,"rayon::iter::fold_chunks_with"],[1234,"rayon::iter::inspect"],[1235,"rayon::iter::interleave"],[1236,"rayon::iter::interleave_shortest"],[1237,"rayon::iter::intersperse"],[1238,"rayon::iter::map"],[1239,"rayon::iter::map_with"],[1240,"rayon::iter::panic_fuse"],[1241,"rayon::slice::chunk_by"],[1242,"rayon::slice::chunks"],[1243,"rayon::slice::rchunks"],[1244,"core::default"],[1245,"either"],[1246,"rayon::iter::positions"],[1247,"core::iter::traits::accum"],[1248,"rayon::iter::rev"],[1249,"rayon::iter::skip"],[1250,"rayon::iter::skip_any"],[1251,"rayon::iter::skip_any_while"],[1252,"rayon_core::broadcast"],[1253,"rayon::iter::step_by"],[1254,"rayon::iter::take"],[1255,"rayon::iter::take_any"],[1256,"rayon::iter::take_any_while"],[1257,"rayon::iter::try_fold"],[1258,"rayon::iter::private"],[1259,"halo2_middleware::multicore"],[1260,"rayon::iter::update"],[1261,"rayon::iter::while_some"],[1262,"rayon::iter::len"],[1263,"rayon::iter::zip"],[1264,"rayon::iter::zip_eq"],[1265,"halo2_backend::plonk::error"],[1266,"halo2_backend::poly::domain"],[1267,"core::error"],[1268,"alloc::string"],[1269,"halo2_middleware::circuit"],[1270,"std::collections::hash::map"],[1271,"halo2_middleware::zal::traits"],[1272,"halo2_middleware::zal::impls"],[1273,"halo2_backend::plonk::verifier::batch"],[1274,"halo2_backend::poly::strategy"],[1275,"core::ops::range"],[1276,"core::iter::traits::iterator"],[1277,"halo2_middleware::poly"],[1278,"halo2_backend::poly::ipa::multiopen::prover"],[1279,"halo2_backend::poly::ipa::multiopen::verifier"],[1280,"pairing"],[1281,"halo2_backend::poly::kzg::multiopen::gwc::prover"],[1282,"halo2_backend::poly::kzg::multiopen::shplonk::prover"],[1283,"halo2_backend::poly::kzg::multiopen::gwc::verifier"],[1284,"halo2_backend::poly::kzg::multiopen::shplonk::verifier"],[1285,"halo2_middleware"],[1286,"rayon_core"],[1287,"rayon_core::join"],[1288,"halo2_backend::poly::ipa::commitment::prover"],[1289,"halo2_backend::poly::ipa::commitment::verifier"]],"i":[0,0,0,0,0,0,11,11,4,11,0,0,4,0,12,11,4,12,11,4,11,4,4,12,12,11,4,11,12,11,4,12,12,11,11,0,12,12,12,12,12,12,12,0,31,31,31,0,0,0,31,31,37,31,31,31,31,31,31,31,31,31,34,37,38,31,31,31,31,31,37,38,0,0,0,0,49,87,88,43,49,87,88,0,0,0,0,43,43,44,68,68,45,45,43,45,43,45,43,45,43,43,43,0,68,68,45,43,68,45,45,43,43,43,43,43,43,43,43,43,43,43,43,68,43,45,45,43,43,43,43,68,45,45,68,43,45,45,43,68,49,0,45,45,45,43,43,43,43,43,43,43,43,43,45,43,43,44,44,44,87,88,44,44,44,44,44,44,44,44,44,44,44,45,43,43,45,45,45,45,43,43,43,45,0,45,43,43,68,68,45,43,45,43,43,43,110,43,43,43,43,68,68,43,43,68,43,45,43,68,43,45,45,45,45,45,121,121,121,0,121,121,121,121,121,0,0,121,0,121,119,123,120,121,119,123,120,119,120,119,120,121,119,123,120,121,119,123,120,121,119,123,120,119,121,121,119,123,120,121,121,119,123,120,119,120,119,120,119,121,119,123,120,121,119,123,120,0,121,119,0,119,120,121,119,120,119,120,121,119,121,119,123,120,121,119,123,120,121,119,123,120,0,121,119,123,120,119,120,202,0,0,0,0,134,140,134,140,134,140,134,140,134,140,134,140,134,140,134,140,134,140,134,140,134,140,134,140,134,140,140,134,140,134,140,134,140,134,140,0,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,0,0,143,0,0,0,0,0,0,0,0,168,154,146,0,0,154,0,148,148,126,153,154,150,151,152,148,126,153,154,150,151,152,148,126,150,151,152,148,126,150,151,152,148,126,126,0,126,126,126,153,154,150,151,152,148,148,126,153,154,150,151,152,148,148,126,126,153,154,150,151,152,148,126,126,126,126,126,126,146,126,153,154,150,151,152,148,126,153,154,150,151,152,148,126,126,126,126,148,148,148,148,148,148,126,153,154,150,151,152,148,126,153,154,150,151,152,148,0,148,148,126,0,126,126,126,148,146,126,148,148,148,126,146,148,126,126,148,148,126,150,151,152,148,126,153,154,150,151,152,148,126,153,154,150,151,152,148,126,153,154,150,151,152,148,148,126,153,154,150,151,152,148,0,164,0,136,145,0,164,145,0,0,136,0,136,0,137,145,136,0,160,160,160,161,161,161,160,160,161,160,160,162,133,137,137,160,160,160,133,160,164,160,161,160,160,160,160,133,160,160,160,133,162,137,145,160,136,133,136,161,161,160,160,160,160,145,160,133,0,0,0,0,0,0,0,169,171,169,171,169,169,169,169,0,169,171,169,171,169,169,171,169,169,171,169,171,169,171,169,171,169,169,169,171,169,171,169,169,171,169,171,169,171,0,169,171,169,0,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,0,0,173,174,173,174,173,173,174,173,174,173,174,173,174,173,174,173,174,173,174,173,174,173,174,173,174,173,174,174,173,174,0,0,0,0,172,175,176,177,172,175,176,177,172,175,172,175,172,172,175,176,177,172,175,176,177,172,175,176,177,176,177,172,175,176,177,172,175,176,177,175,172,175,176,177,172,175,176,177,176,177,176,177,172,175,172,175,176,177,172,175,176,177,172,175,176,177,175,172,172,172,175,176,177,0,0,0,0,0,0,0,178,180,182,178,180,182,178,180,178,180,178,178,180,178,180,182,178,180,182,178,180,178,180,182,178,180,178,180,182,178,180,182,178,178,180,182,178,180,182,178,180,178,180,178,182,178,180,178,180,182,178,178,180,178,180,182,178,180,182,178,180,182,178,178,180,182,178,180,178,180,0,0,181,183,181,181,181,183,181,183,181,183,181,183,181,183,181,181,183,181,183,181,183,181,183,181,181,183,181,183,181,183,181,183,181,183,181,181,183,181,183,181,183,181,183,181,183,181,183,0,0,0,0,185,187,186,188,185,187,186,188,185,186,185,187,186,188,185,187,186,188,185,187,186,188,185,187,186,188,185,187,186,188,185,187,186,188,185,187,186,188,185,187,186,186,188,185,187,186,188,185,187,186,188,185,187,186,188,187,188,185,187,186,188,0,0,0,189,190,191,189,190,191,189,190,191,189,190,191,189,190,191,189,190,191,189,190,191,190,191,189,190,191,189,190,191,189,190,191,189,190,191,190,190,191,191,190,191,189,190,191,189,190,191,189,190,191,189,190,191,189,190,191,190,0,0,0,0,0,127,0,0,0,0,0,0,0,127,194,195,196,197,193,198,194,195,196,197,193,198,194,195,196,197,193,198,194,195,196,197,193,198,128,194,195,196,197,128,194,195,196,197,194,195,196,197,193,193,198,198,194,195,196,197,193,198,194,195,196,197,193,198,199,196,197,194,195,196,197,193,198,194,195,196,197,193,198,127,198,200,199,194,194,195,195,196,196,197,197,193,198,194,195,196,197,193,198,127,198,0,0,147,194,195,147,194,195,128,194,195,196,197,128,194,195,196,197,193,198,194,195,196,197,193,198,194,195,196,197,193,198,194,195,196,197,193,198,194,195,196,197,193,198,138,196,197,138,196,197],"f":"``````````````````{{}c{}}000{{{j{{h{}{{b{c}}{d{e}}{f{g}}}}}}}{{n{{l{{h{}{{b{c}}{d{e}}{f{g}}}}}}}}}{A`Ab}{A`Ab}{{Af{}{{Ad{}}{b{}}}}}}{{{j{Ah}}}Ah}0{{{j{{Af{}{{b{c}}{d{e}}{Ad{g}}}}}}}{{Af{}{{b{c}}{d{e}}{Ad{g}}}}}A`A`{{h{}{{f{}}{b{}}{Aj{}}{Aj{}}}}{Al{c}}{Al{c}}}}{{cc}{{n{{h{}{{b{e}}{d{c}}{f{g}}}}}}}{A`Ab}{A`Ab}{{Af{}{{Ad{}}{b{}}}}}}{{{j{An}}}{{Bb{B`}}}}{{{j{Ah}}}{{n{Ah}}}}{{{j{{Af{}{{b{c}}{d{e}}{Ad{g}}}}}}}BdA`A`{{h{}{{f{}}{b{}}{Aj{}}{Aj{}}}}{Al{c}}{Al{c}}}}{{{j{{h{}{{b{c}}{d{e}}{f{g}}}}}}}Bd{A`Ab}{A`Ab}{{Af{}{{Ad{}}{b{}}}}}}{{{j{Ah}}}Bd}{{{j{Ah}}}Bf}{{{j{{Af{}{{b{c}}{d{e}}{Ad{g}}}}}}}{{Bh{eee}}}A`A`{{h{}{{f{}}{b{}}{Aj{}}{Aj{}}}}{Al{c}}{Al{c}}}}{{ccc}{{n{{Af{}{{b{e}}{d{c}}{Ad{g}}}}}}}A`A`{{h{}{{f{}}{b{}}{Aj{}}{Aj{}}}}{Al{e}}{Al{e}}}}{{{j{Bj{Bl{c}}}}e}BnC`{{B`{{j{Bj{Bl{c}}}}Cb}}C`CdCf}}{{{j{Ah}}c}Ah{{Cj{{Bl{Ch}}}}}}0{cAhCl}9{{{j{Ah}}}{{Bh{BdAh}}}}{{{j{Ah}}{j{Ah}}}{{Bh{BdAh}}}}?```````{{{j{c}}}{{j{e}}}{}{}}{{{j{Bjc}}}{{j{Bje}}}{}{}}{CnCb}{{{j{Cn}}}Cn}{{{j{c}}{j{Bje}}}Bn{}{}}{Cb{{j{c}}}{}}{Cb{{j{Bjc}}}{}}{CbBn}{{{j{Cn}}{j{BjD`}}}Db}{cc{}}{{}Cb}{ce{}{}}{{{j{Bjc}}}{{Df{Dd}}}Dh}{{{j{Bjc}}Cn}{{Df{Dj}}}Dh}{{{j{Bjc}}Cn}{{Df{Dl}}}Dh}{{{j{c}}}e{}{}}{c{{Dn{e}}}{}{}}0{{{j{c}}}E`{}}6{{{j{Dj}}{j{Bjc}}Cn}{{Df{Bn}}}Eb}{{{j{Dl}}{j{Bjc}}Cn}{{Df{Bn}}}Eb}```````````````{{{Ef{}{{Ed{c}}}}e}BfC`{{B`{c}{{Aj{Bf}}}}CdC`}}0{{{j{BjEh}}}{{j{Bj{Bl{c}}}}}C`}{{{j{c}}}{{j{e}}}{}{}}{{{j{Bjc}}}{{j{Bje}}}{}{}}{Ej{{El{Ej}}}}{{EjCb}{{En{Ej}}}}{{{Ef{}{{Ed{c}}}}e}{{F`{{Ef{}{{Ed{c}}}}}}}C`{{Fb{}{{Ed{c}}}}}}{{EjCb}{{Fd{Ej}}}}{{{Ef{}{{Ed{c}}}}}{{Ff{{Ef{}{{Ed{c}}}}}}}C`}{{Eje}Fh{}{{Fb{}{{Ed{c}}}}}}{{{Ef{}{{Ed{c}}}}}eC`{{Fj{c}}}}{{Ej{j{Bj{Fl{c}}}}}Bn{}}{{{Ef{}{{Ed{c}}}}}{{Fn{{Fl{c}}}}}C`}{{{Ef{}{{Ed{c}}}}}{{G`{{Ef{}{{Ed{c}}}}}}}C`}{{{Ef{}{{Ed{c}}}}}CbC`}{{}Cb}{Cb{{j{c}}}{}}{Cb{{j{Bjc}}}{}}{{Eje}{}{}{{Gb{c}}}}{{{Ef{}{{Ed{c}}}}e}{}C`{{Gd{c}}}}{CbBn}{Ej{{Gf{Ej}}}}{{Ejc}BfFb}{{{Ef{}{{Ed{c}}}}e}{{Gh{{Ef{}{{Ed{c}}}}e}}}C`{{B`{{j{c}}}{{Aj{Bf}}}}CdC`}}{{{Ef{}{{Ed{c}}}}g}{{Gj{{Ef{}{{Ed{c}}}}g}}}C`C`{{B`{c}{{Aj{{Gl{e}}}}}}CdC`}}{{{Ef{}{{Ed{c}}}}e}{{Gl{c}}}C`{{B`{{j{c}}}{{Aj{Bf}}}}CdC`}}00{{{Ef{}{{Ed{c}}}}g}{{Gl{e}}}C`C`{{B`{c}{{Aj{{Gl{e}}}}}}CdC`}}00{{{Ef{}{{Ed{c}}}}g}{{Gn{{Ef{}{{Ed{c}}}}g}}}C`Fb{{B`{c}{{Aj{e}}}}CdC`}}{{{Ef{}{{Ed{c}}}}g}{{H`{{Ef{}{{Ed{c}}}}g}}}C`Hb{{B`{c}{{Aj{e}}}}CdC`}}{{{Ef{}{{Ed{c}}}}}{{Hd{{Ef{}{{Ed{c}}}}}}}C`}{{{Ef{}{{Ed{c}}}}}{{Hf{{Ef{}{{Ed{c}}}}}}}C`}{{{j{Hh}}{j{BjD`}}}{{Dn{BnHj}}}}{{{Ef{}{{Ed{c}}}}gi}{{Hl{{Ef{}{{Ed{c}}}}gi}}}C`C`{{B`{}{{Aj{e}}}}CdC`}{{B`{ec}{{Aj{e}}}}CdC`}}{{EjCbei}{{Hn{Ejei}}}C`{{B`{}{{Aj{c}}}}C`Cd}{}{{B`{cg}{{Aj{c}}}}C`Cd}}{{EjCbcg}{{I`{Ejcg}}}{C`Cf}{}{{B`{ce}{{Aj{c}}}}C`Cd}}{{{Ef{}{{Ed{c}}}}eg}{{Ib{{Ef{}{{Ed{c}}}}eg}}}C`{C`Cf}{{B`{ec}{{Aj{e}}}}CdC`}}{{{Ef{}{{Ed{c}}}}e}BnC`{{B`{c}}CdC`}}{{{Ef{}{{Ed{c}}}}gi}BnC`{}{{B`{}{{Aj{e}}}}CdC`}{{B`{{j{Bje}}c}}CdC`}}{{{Ef{}{{Ed{c}}}}eg}BnC`{C`Cf}{{B`{{j{Bje}}c}}CdC`}}{cc{}}{{Ejc}BfFb}0{{}Cb}{{{Ef{}{{Ed{c}}}}e}{{Id{{Ef{}{{Ed{c}}}}e}}}C`{{B`{{j{c}}}}CdC`}}{{Eje}{{If{Ej}}}{}{{Fb{}{{Ed{c}}}}}}{{Eje}{{Ih{Ej}}}{}{{Fb{}{{Ed{c}}}}}}{{{Ef{}{{Ed{c}}}}c}{{Ij{{Ef{}{{Ed{c}}}}}}}C`}{ce{}{}}{{{Fb{}{{Il{c}}{Ed{e}}}}}c{{Ef{}{{Ed{e}}}}}C`}{{ei}{{Bh{cg}}}C`{{In{}{{Aj{c}}}}C`}C`{{In{}{{Aj{g}}}}C`}}8{{{j{Ej}}}Cb}9{{{Ef{}{{Ed{c}}}}g}{{J`{{Ef{}{{Ed{c}}}}g}}}C`C`{{B`{c}{{Aj{e}}}}CdC`}}{{{Ef{}{{Ed{c}}}}gk}{{Jb{{Ef{}{{Ed{c}}}}gk}}}C`{}{{B`{}{{Aj{e}}}}CdC`}C`{{B`{{j{Bje}}c}{{Aj{i}}}}CdC`}}{{{Ef{}{{Ed{c}}}}ei}{{Jd{{Ef{}{{Ed{c}}}}ei}}}C`{C`Cf}C`{{B`{{j{Bje}}c}{{Aj{g}}}}CdC`}}{{{Ef{}{{Ed{c}}}}}{{Gl{c}}}C`}{{{Ef{}{{Ed{c}}}}e}{{Gl{c}}}C`{CdC`{B`{{j{c}}{j{c}}}{{Aj{Fh}}}}}}{{{Ef{}{{Ed{c}}}}g}{{Gl{c}}}C`{AbC`}{CdC`{B`{{j{c}}}{{Aj{e}}}}}}210?{{{j{{Ef{}{{Ed{c}}}}}}}{{Gl{Cb}}}C`}{{{Ef{}{{Ed{c}}}}}{{Jf{{Ef{}{{Ed{c}}}}}}}C`}{{{j{BjEh}}e}{{Jh{ce}}}C`{{B`{{j{c}}{j{c}}}{{Aj{Bf}}}}C`Cd}}{{{j{BjEh}}Cb}{{Jj{c}}}C`}{{{j{BjEh}}Cb}{{Jl{c}}}C`}{{{j{{Jn{}{{Il{c}}{Ed{e}}}}}}}c{{Ef{}{{Ed{e}}}}}C`}{{{j{Bj{K`{}{{Il{c}}{Ed{e}}}}}}}c{{Ef{}{{Ed{e}}}}}C`}{{{j{BjEh}}Cb}{{Kb{c}}}C`}{{{j{BjEh}}Cb}{{Kd{c}}}C`}{{{j{BjEh}}}Bn}{{{j{BjEh}}e}BnC`{{B`{{j{c}}{j{c}}}{{Aj{Fh}}}}Cd}}{{{j{BjEh}}g}BnC`{AbC`}{{B`{{j{c}}}{{Aj{e}}}}Cd}}{{{j{BjEh}}g}BnC`Ab{{B`{{j{c}}}{{Aj{e}}}}Cd}}320{{{j{BjEh}}e}{{Kf{ce}}}C`{{B`{{j{c}}}{{Aj{Bf}}}}CdC`}}{{{j{BjEh}}e}{{Kh{ce}}}C`{{B`{{j{c}}}{{Aj{Bf}}}}CdC`}}{{Ejc}{{Gl{Fh}}}Fb}{{{Ef{}{{Ed{c}}}}e}{{Bh{gi}}}C`{{B`{{j{c}}}{{Aj{Bf}}}}CdC`}{KjC`{Kl{c}}}{KjC`{Kl{c}}}}{{{Ef{}{{Ed{c}}}}i}{{Bh{km}}}C`C`C`{{B`{c}{{Aj{{Kn{eg}}}}}}CdC`}{KjC`{Kl{e}}}{KjC`{Kl{g}}}}{{Eje}{{Gl{Cb}}}{}{{B`{c}{{Aj{Bf}}}}CdC`}}00{{Eje}{{L`{Eje}}}{}{{B`{c}{{Aj{Bf}}}}CdC`}}{{{Ef{}{{Ed{c}}}}}eC`{C`{Lb{c}}Lb}}{{{Ef{}{{Ed{c}}}}eg}cC`{{B`{}{{Aj{c}}}}CdC`}{{B`{cc}{{Aj{c}}}}CdC`}}{{{Ef{}{{Ed{c}}}}e}{{Gl{c}}}C`{{B`{cc}{{Aj{c}}}}CdC`}}{Ej{{Ld{Ej}}}}{ecC`{{In{{j{Hh}}}{{Aj{c}}}}C`}}{{EjCb}{{Lf{Ej}}}}{{{Ef{}{{Ed{c}}}}Cb}{{Lh{{Ef{}{{Ed{c}}}}}}}C`}{{{Ef{}{{Ed{c}}}}e}{{Lj{{Ef{}{{Ed{c}}}}e}}}C`{{B`{{j{c}}}{{Aj{Bf}}}}CdC`}}{{{j{Hh}}c}Bn{{In{{j{Hh}}}}C`}}{{{j{Hh}}c}Bn{{B`{{j{Hh}}Ll}}C`Cd}}{{EjCb}{{Ln{Ej}}}}{{{Ef{}{{Ed{c}}}}}eC`{C`{M`{c}}M`}}{{EjCb}{{Mb{Ej}}}}{{{Ef{}{{Ed{c}}}}Cb}{{Md{{Ef{}{{Ed{c}}}}}}}C`}{{{Ef{}{{Ed{c}}}}e}{{Mf{{Ef{}{{Ed{c}}}}e}}}C`{{B`{{j{c}}}{{Aj{Bf}}}}CdC`}}{{{Ef{}{{Ed{c}}}}gk}{{Mh{{Ef{}{{Ed{c}}}}igk}}}C`{}{{B`{}{{Aj{e}}}}CdC`}{{Mj{}{{Aj{e}}}}C`}{{B`{ec}{{Aj{i}}}}CdC`}}{{Mlei}{{Dn{cg}}}{}{{B`{}{{Aj{c}}}}C`Cd}{}{{B`{c{Dn{cg}}}{{Aj{{Dn{cg}}}}}}C`Cd}}{{{Ef{}{{Ed{c}}}}ei}{{Mn{{Ef{}{{Ed{c}}}}gi}}}C`{CfC`}{{Mj{}{{Aj{e}}}}C`}{{B`{ec}{{Aj{g}}}}CdC`}}{{{Ef{}{{Ed{c}}}}g}eC`{{Mj{}{{Aj{Bn}}}}C`}{{B`{c}{{Aj{e}}}}CdC`}}{{{Ef{}{{Ed{c}}}}gk}iC`{}{{B`{}{{Aj{e}}}}CdC`}{{Mj{}{{Aj{Bn}}}}C`}{{B`{{j{Bje}}c}{{Aj{i}}}}CdC`}}{{{Ef{}{{Ed{c}}}}ei}gC`{C`Cf}{{Mj{}{{Aj{Bn}}}}C`}{{B`{{j{Bje}}c}{{Aj{g}}}}CdC`}}{c{{Dn{e}}}{}{}}0{{{Ef{}{{Ed{c}}}}gi}cC`{}{{B`{}{{Aj{e}}}}CdC`}{{B`{ee}{{Aj{c}}}}CdC`}}{{{Ef{}{{Ed{c}}}}g}{{Gl{c}}}C`{}{{B`{ee}{{Aj{c}}}}CdC`}}{{{j{c}}}E`{}}{{{Ef{}{{Ed{c}}}}}{{Bh{gk}}}C`C`{KjC`{Kl{e}}}C`{KjC`{Kl{i}}}}{{Ej{j{Bj{Fl{c}}}}{j{Bj{Fl{e}}}}}BnC`C`}{{{Ef{}{{Ed{c}}}}e}{{N`{{Ef{}{{Ed{c}}}}e}}}C`{{B`{{j{Bjc}}}}CdC`}}{ce{}{}}{{{Ef{}{{Ed{c}}}}}{{Nb{{Ef{}{{Ed{c}}}}}}}C`}{{EjCb}{{Nd{Ej}}}}{{EjCb}{{Nf{Ej}}}}{{Eje}{}{}{{Nh{c}}}}{{Ejc}{{Nj{Ej}}}Fb}{{Ejc}{{Nl{Ej}}}Fb}`````````````{{{j{c}}}{{j{e}}}{}{}}000{{{j{Bjc}}}{{j{Bje}}}{}{}}000{{{j{{Nn{c}}}}}{{Nn{c}}}{Cfh}}{{{j{{O`{c}}}}}{{O`{c}}}{Cfh}}{{{j{c}}{j{Bje}}}Bn{}{}}0{Cb{{j{c}}}{}}000{Cb{{j{Bjc}}}{}}000{CbBn}000{{{j{{Nn{c}}}}}{{j{{Fl{c}}}}}h}{{{j{Ob}}{j{BjD`}}}Db}0{{{j{{Nn{c}}}}{j{BjD`}}}Db{Odh}}{{{j{{Of{c}}}}{j{BjD`}}}Db{Odh}}{{{j{{O`{c}}}}{j{BjD`}}}Db{Odh}}{OhOb}{cc{}}000``{{{j{{Nn{c}}}}}{{j{Ol}}}h}{{{j{{O`{c}}}}}{{j{{Nn{c}}}}}h}{{{j{{Nn{c}}}}{j{Bjg}}}{{Df{Bn}}}h{{On{c}}}{{A@`{ce}}}}{{}Cb}000{ce{}{}}000`{A@bOb}{{{j{{Nn{c}}}}}{{Of{c}}}h}```{{{j{Ob}}}{{Gl{{j{A@d}}}}}}{{{j{{Nn{c}}}}Cn}{{Fl{Oj}}}Dj}{{{j{{O`{c}}}}Cn}{{Fl{Oj}}}Dj}{{{j{c}}}e{}{}}0{{{j{c}}}A@f{}}{{{j{{Nn{c}}}}}{}h}{c{{Dn{e}}}{}{}}0000000{{{j{c}}}E`{}}000`::::{{{j{{Nn{c}}}}{j{Bje}}Cn}{{Df{Bn}}}DjEb}{{{j{{O`{c}}}}{j{Bje}}Cn}{{Df{Bn}}}DjEb}`{{{j{e}}{Nn{c}}{j{A@h}}}{{Dn{{O`{c}}Ob}}}h{{A@j{c}}}}{{{j{e}}{j{A@h}}}{{Dn{{Nn{c}}Ob}}}h{{A@j{c}}}}``{{{j{c}}}{{j{e}}}{}{}}0{{{j{Bjc}}}{{j{Bje}}}{}{}}0{{{j{Bj{A@l{cegikm}}}}Oj{Fl{{Gl{Fl}}}}}{{Dn{{A@n{Cb}}Ob}}}AA`{{AAb{c}}}OnCl{{AAd{g}}}AAf}{{{j{Bj{AAh{cegikm}}}}Oj{Fl{{Fl{{Gl{Fl}}}}}}}{{Dn{{A@n{Cb}}Ob}}}AA`{{AAb{c}}}OnCl{{AAd{g}}}AAf}{{{A@l{cegikm}}}{{Dn{BnOb}}}AA`{{AAb{c}}}OnCl{{AAd{g}}}AAf}{{{AAh{cegikm}}}{{Dn{BnOb}}}AA`{{AAb{c}}}OnCl{{AAd{g}}}AAf}{Cb{{j{c}}}{}}0{Cb{{j{Bjc}}}{}}0{CbBn}0{{{j{{A@l{cegikm}}}}{j{BjD`}}}Db{OdAA`}{Od{AAb{c}}}{OdOn}{OdCl}{Od{AAd{g}}}{OdAAf}}{{{j{{AAh{cegikm}}}}{j{BjD`}}}Db{OdAA`}{Od{AAb{c}}}{OdOn}{OdCl}{Od{AAd{g}}}{OdAAf}}{cc{}}0{{}Cb}0{ce{}{}}0{{j{j{O`}}{j{{Bl{{j{Bl}}}}}}c{j{Bjg}}}{{Dn{{A@l{ikecgAAj}}Ob}}}ClOn{{AAd{e}}}AA`{{AAb{i}}}}{{j{j{O`}}{j{{Bl{{j{{Bl{{j{Bl}}}}}}}}}}c{j{Bjg}}}{{Dn{{AAh{ikecgAAj}}Ob}}}ClOn{{AAd{e}}}AA`{{AAb{i}}}}{{{AAl{c}}j{j{O`}}{j{{Bl{{j{Bl}}}}}}e{j{Bji}}}{{Dn{{A@l{kmgeic}}Ob}}}AAfClOn{{AAd{g}}}AA`{{AAb{k}}}}{{{AAl{c}}j{j{O`}}{j{{Bl{{j{{Bl{{j{Bl}}}}}}}}}}e{j{Bji}}}{{Dn{{AAh{kmgeic}}Ob}}}AAfClOn{{AAd{g}}}AA`{{AAb{k}}}}{{{j{{AAh{cegikm}}}}}{{j{{Bl{Oj}}}}}AA`{{AAb{c}}}OnCl{{AAd{g}}}AAf}{c{{Dn{e}}}{}{}}000{{{j{c}}}E`{}}077`{{{j{Bj{AAn{c}}}}{Fl{{Fl{Fl}}}}{Fl{Oj}}}Bnh}{{{j{c}}}{{j{e}}}{}{}}{{{j{Bjc}}}{{j{Bje}}}{}{}}{{}{{AAn{c}}}{Kjh}}{Cb{{j{c}}}{}}{Cb{{j{Bjc}}}{}}{CbBn}{{{AAn{c}}{j{{AB`{c}}}}{j{{Nn{c}}}}}Bfh}{{{j{{AAn{c}}}}{j{BjD`}}}Db{Odh}}{cc{}}{{}Cb}{ce{}{}}{{}{{AAn{c}}}h}>>={{j{j{Nn}}g{j{{Bl{{j{{Bl{{j{Bl}}}}}}}}}}{j{Bjk}}}{{Dn{Ob}}}AA`{{ABb{c}}}{{ABd{ce}}}On{{ABf{i}}}}{{j{j{Nn}}g{j{{Bl{{j{Bl}}}}}}{j{Bjk}}}{{Dn{Ob}}}AA`{{ABb{c}}}{{ABd{ce}}}On{{ABf{i}}}}3````````````````{{{ABh{ce}}{j{{ABh{ce}}}}}{{ABh{ce}}}AhABj}>>>>>>>======={{{j{{Ol{c}}}}}{{Ol{c}}}{CfAh}}{{{j{ABl}}}ABl}{{{j{ABn}}}ABn}{{{j{AC`}}}AC`}{{{j{{ABh{ce}}}}}{{ABh{ce}}}CfCf}{{{j{c}}{j{Bje}}}Bn{}{}}0000{{{j{{Ol{c}}}}{Fl{c}}}{{ABh{cABl}}}A`}{{{j{{Ol{c}}}}{ABh{cABl}}}{{ABh{cAC`}}}A`}`{{{j{{Ol{c}}}}c}{{ABh{cAC`}}}A`}{{{j{{Ol{c}}}}c}{{ABh{cABn}}}A`}{Cb{{j{c}}}{}}00000{{{j{{ABh{ce}}}}}{{j{{Bl{c}}}}}{}{}}1{Cb{{j{Bjc}}}{}}00000{{{j{Bj{ABh{ce}}}}}{{j{Bj{Bl{c}}}}}{}{}}1{{{j{{Ol{c}}}}{ABh{cAC`}}}{{ABh{cAC`}}}A`}{CbBn}000000{{{j{{Ol{c}}}}}{{ABh{cABl}}}A`}{{{j{{Ol{c}}}}}{{ABh{cAC`}}}A`}{{{j{{Ol{c}}}}}{{ABh{cABn}}}A`}{{{j{{Ol{c}}}}}A@bA`}{{{j{{Ol{c}}}}}CbA`}{{{j{{Ol{c}}}}{ABh{cAC`}}}{{Fl{c}}}A`}{{{ABd{}{{Aj{c}}}}}Bf{}}{{{j{{Ol{c}}}}{j{BjD`}}}Db{OdAh}}{{{j{{ACb{c}}}}{j{BjD`}}}Db{OdAh}}{{{j{ACd}}{j{BjD`}}}Db}{{{j{ABl}}{j{BjD`}}}Db}{{{j{ABn}}{j{BjD`}}}Db}{{{j{AC`}}{j{BjD`}}}Db}{{{j{{ABh{ce}}}}{j{BjD`}}}DbOdOd}{cc{}}000000{{{j{{Ol{c}}}}}cA`}00;{{{j{{ABh{ce}}}}{ACf{Cb}}}{{j{{Bl{c}}}}}{}{}}{{{j{{ABh{ce}}}}Cb}{{j{c}}}{}{}}{{{j{{ABh{ce}}}}ACh}{{j{{Bl{c}}}}}{}{}}{{{j{Bj{ABh{ce}}}}{ACf{Cb}}}{{j{Bj{Bl{c}}}}}{}{}}{{{j{Bj{ABh{ce}}}}Cb}{{j{Bjc}}}{}{}}{{{j{Bj{ABh{ce}}}}ACh}{{j{Bj{Bl{c}}}}}{}{}}{{}Cb}000000{ce{}{}}000000`{{{j{{ABh{ce}}}}}{{`{{ACj{}{{Ed{{j{c}}}}}}}}}{}{}}{{{j{Bj{ABh{ce}}}}}{{`{{ACj{}{{Ed{{j{Bjc}}}}}}}}}{}{}}{{{j{{Ol{c}}}}}A@bA`}`{{{j{{Ol{c}}}}cce}{{Fl{c}}}A`{{Hb{}{{Ed{ACl}}}}Cf}}{{{j{{Ol{c}}}}{Fl{c}}}{{ABh{cABn}}}A`}{{{j{{Ol{c}}}}{ABh{cABn}}}{{ABh{cABl}}}A`}{{{ABh{ce}}c}{{ABh{ce}}}AhABj}{j{{ABd{}{{Aj{c}}}}}{}}{{A@bA@b}{{Ol{c}}}A`}{{Cbc}{{ABh{ce}}}Cf{}}{{{Fl{c}}}{{ABh{cABn}}}Cf}{{{j{{ABh{ce}}}}}Cb{}{}}{{{j{{Ol{c}}}}}{{ACb{c}}}A`}{{{ABd{}{{Aj{c}}}}e}{{Dn{cOb}}}{}{{In{}{{Aj{{Dn{Ob}}}}}}}}{{{j{{ABh{cABn}}}}ACn}{{ABh{cABn}}}Ah}{{{j{{Ol{c}}}}{j{{ABh{cAC`}}}}ACn}{{ABh{cAC`}}}A`}{{{j{{Ol{c}}}}cACn}cA`}{{{j{{ABh{ce}}}}c}{{ABh{ce}}}AhABj}{{{ABh{ce}}{j{{ABh{ce}}}}}{{ABh{ce}}}AhABj}{{{j{c}}}e{}{}}0000{c{{Dn{e}}}{}{}}0000000000000{{{j{c}}}E`{}}000000`{ce{}{}}000000``````````````````{{{AD`{c}}{AD`{c}}}{{AD`{c}}}Ah}{{{j{Bj{AD`{c}}}}c}BnAh}{{{j{Bj{AD`{c}}}}{AD`{c}}}BnAh}{{{j{BjADb}}{j{ADb}}}Bn}{{{j{BjADb}}}Bn}{{{j{ADb}}}Fl}{{{j{c}}}{{j{e}}}{}{}}{{{j{Bjc}}}{{j{Bje}}}{}{}}{{{j{ADb}}{j{e}}}Bfh{{AAf{c}}}}{{{j{{AD`{c}}}}}{{AD`{c}}}Cf}{{{j{c}}{j{Bje}}}Bn{}{}}{{{j{ADd}}{j{e}}{j{{ABh{ABl}}}}AD`}{}h{{AAf{c}}}}{{{j{A@j}}{j{e}}{j{{ABh{ABn}}}}AD`}{}h{{AAf{c}}}}{{{j{AAb}}c{j{Bjg}}i}{{Df{Bn}}}ClOn{{AAd{e}}}{{Hb{}{{Ed{`}}}}Cf}}{{{j{AAb}}{j{c}}e{j{Bji}}k}{{Df{Bn}}}AAfClOn{{AAd{g}}}{{Hb{}{{Ed{`}}}}Cf}}{{}{{AD`{c}}}Ah}{Cb{{j{c}}}{}}{Cb{{j{Bjc}}}{}}{{{j{BjA@j}}A@b}Bn}{CbBn}{{{j{{ADh{}{{ADf{c}}}}}}}c{{ADb{e}}}h}{{{j{{AD`{c}}}}{j{{AD`{c}}}}}BfADj}{{{j{ADb}}{j{e}}}{}h{{AAf{c}}}}{{{j{{AD`{c}}}}{j{BjD`}}}DbOd}{cc{}}{{}Cb}{ce{}{}}{{{j{A@j}}}A@b}{{{AD`{c}}{AD`{c}}}{{AD`{c}}}Ah}{{{j{Bj{AD`{c}}}}{AD`{c}}}BnAh}{{{j{Bj{AD`{c}}}}c}BnAh}{{{j{A@j}}}Ch}{A@bADd}{jAAb}{{}{{ABb{}{{ADl{c}}{ADn{g}}}}}{{AE`{e}{{ADn{g}}}}}AA`{}}{{{j{Bjc}}}{{AD`{e}}}ClAh}{A@bc{}}{{{j{Bjc}}}{{Df{A@j}}}Dh}{{{j{Bjc}}}{{Df{e}}}Dh{}}{{{j{ADb}}}Fl}{{{j{BjADb}}}Bn}{{{j{c}}}e{}{}}{c{{Dn{e}}}{}{}}0{{{j{c}}}E`{}}{{{j{{ABb{}{{ADl{c}}{ADn{g}}}}}}{j{Bjk}}mg}{{Dn{cACd}}}{{AE`{e}{{ADn{g}}}}}AA`{}On{{ABf{i}}}{{Hb{}{{Ed{`}}}}Cf}}{ce{}{}}{{{j{A@j}}{j{Bjc}}}{{Df{Bn}}}Eb}```````{{{j{c}}}{{j{e}}}{}{}}0{{{j{Bjc}}}{{j{Bje}}}{}{}}0{{{j{{AEb{c}}}}}{{AEb{c}}}{Cfh}}{{{j{c}}{j{Bje}}}Bn{}{}}{{{j{{AEb{c}}}}{j{e}}{j{{ABh{ABl}}}}AD`}{}h{{AAf{c}}}}{{{j{{AEb{c}}}}{j{e}}{j{{ABh{ABn}}}}AD`}{}h{{AAf{c}}}}{{{j{e}}{j{{AEb{c}}}}g{j{Bjk}}{j{{ABh{ABl}}}}AD`}{{Df{Bn}}}h{{AAf{c}}}Cl{{On{c}}}{{AAd{ci}}}}{Cb{{j{c}}}{}}0{Cb{{j{Bjc}}}{}}0{{{j{Bj{AEb{c}}}}A@b}Bnh}{CbBn}0{{{j{{AEb{c}}}}}{{AEd{c}}}h}{{{j{{AEb{c}}}}{j{BjD`}}}Db{Odh}}{{{j{{AEf{c}}}}{j{BjD`}}}Db{Odh}}{cc{}}0{{}Cb}0{ce{}{}}0{{{j{{AEb{c}}}}}A@bh}{{{j{{AEb{c}}}}}Chh}{A@b{{AEb{c}}}h}{A@bc{}}{{{j{Bjc}}}{{Df{{AEb{e}}}}}Dhh}{{{j{Bjc}}}{{Df{e}}}Dh{}}{{{j{c}}}e{}{}}{c{{Dn{e}}}{}{}}000{{{j{c}}}E`{}}0{{{AEd{c}}{j{Bjg}}}{{Dn{{AEh{c}}ACd}}}h{{On{c}}}{{ABf{ce}}}}::{{{j{{AEb{c}}}}{j{Bje}}}{{Df{Bn}}}hEb}`{{{j{Bj{AEd{c}}}}}Bnh}{{{j{Bj{AEd{c}}}}{j{{AEd{c}}}}}Bnh}0{{{j{Bj{AEd{c}}}}{j{Bl}}}Bnh}222{{{j{{AEd{c}}}}}Flh}{{{j{c}}}{{j{e}}}{}{}}{{{j{Bjc}}}{{j{Bje}}}{}{}}{{{j{{AEd{c}}}}{j{e}}}Bfh{{AAf{c}}}}{{{j{{AEd{c}}}}}{{AEd{c}}}{Cfh}}{{{j{c}}{j{Bje}}}Bn{}{}}{Cb{{j{c}}}{}}{Cb{{j{Bjc}}}{}}{CbBn}{{{j{{AEd{c}}}}{j{e}}}{}h{{AAf{c}}}}{{{j{{AEd{c}}}}{j{BjD`}}}Db{Odh}}{cc{}}{{}Cb}{ce{}{}}{{{j{{AB`{c}}}}}{{AEd{c}}}h}>{{{j{Bj{AEd{c}}}}}Bnh}{{{j{c}}}e{}{}}{c{{Dn{e}}}{}{}}0{{{j{c}}}E`{}}5``{{{j{c}}}{{j{e}}}{}{}}0{{{j{Bjc}}}{{j{Bje}}}{}{}}0{{{j{{AEj{c}}}}{j{e}}g{j{Bjk}}m}{{Df{Bn}}}h{{AAf{c}}}Cl{{On{c}}}{{AAd{ci}}}{{Hb{}{{Ed{{`{c}}}}}}Cf}}??>>=={{{j{{AEj{c}}}}{j{BjD`}}}Db{Odh}}{{{j{{AEl{c}}}}{j{BjD`}}}Db{Odh}}<<;;::{{{j{{AEb{c}}}}}{{AEj{c}}}h}{{}{{AEl{c}}}h}888877{{{j{{AEl{c}}}}{j{Bjg}}i{AEd{c}}}{{Dn{kACd}}}h{{On{c}}}{{ABf{ce}}}{{Hb{}{{Ed{{`{c{AEd{c}}}}}}}}Cf}{}}==````77776666{{{j{{AEh{c}}}}}{{AEh{c}}}{Cfh}}{{{j{{AEn{c}}}}}{{AEn{c}}}{Cfh}}{{{j{c}}{j{Bje}}}Bn{}{}}0{{{j{{AEh{c}}}}{j{e}}}ch{{AAf{c}}}}{Cb{{j{c}}}{}}000{Cb{{j{Bjc}}}{}}000{CbBn}000{{{AF`{c}}}Bfh}{{{AFb{c}}}Bfh}{{{j{{AEh{c}}}}{j{BjD`}}}Db{Odh}}{{{j{{AEn{c}}}}{j{BjD`}}}Db{Odh}}{{{j{{AF`{c}}}}{j{BjD`}}}Db{Odh}}{{{j{{AFb{c}}}}{j{BjD`}}}Db{Odh}}{cc{}}000`{{}Cb}000{ce{}{}}000{{{j{{AEb{c}}}}}{{AF`{c}}}h}{{{j{{AEb{c}}}}}{{AFb{c}}}h}{{{AF`{c}}e}{{Dn{gOb}}}h{{In{{AEd{c}}}{{Aj{{Dn{{AEh{c}}Ob}}}}}}}{}}{{{AFb{c}}e}{{Dn{gOb}}}h{{In{{AEd{c}}}{{Aj{{Dn{{AEh{c}}Ob}}}}}}}{}}{{{j{c}}}e{}{}}0{c{{Dn{e}}}{}{}}0000000{{{j{c}}}E`{}}000`{{{AEh{c}}}{{AEd{c}}}h}{{{AEh{c}}c}{{Bh{{AEd{c}}{AEn{c}}}}}h}9999```````{{{j{c}}}{{j{e}}}{}{}}00{{{j{Bjc}}}{{j{Bje}}}{}{}}00{{{j{{AFd{c}}}}}{{AFd{c}}}{CfAFf}}{{{j{{AFh{c}}}}}{{AFh{c}}}{CfAFf}}{{{j{c}}{j{Bje}}}Bn{}{}}0{{{j{{AFd{c}}}}{j{e}}{j{{ABh{ABl}}}}AD`}{}AFfAAf}{{{j{{AFd{c}}}}{j{e}}{j{{ABh{ABn}}}}AD`}{}AFfAAf}{{{j{{AFh{c}}}}{j{e}}{j{{ABh{ABn}}}}AD`}{}AFfAAf}{Cb{{j{c}}}{}}00{Cb{{j{Bjc}}}{}}00{{{j{Bj{AFd{c}}}}A@b}BnAFf}{{{j{Bj{AFh{c}}}}A@b}BnAFf}{CbBn}00{{{j{{AFd{c}}}}}{{AFj{c}}}AFf}{{{j{{AFh{c}}}}}{{AFj{c}}}AFf}{{{j{{AFd{c}}}}{j{BjD`}}}Db{OdAFf}}{{{j{{AFh{c}}}}{j{BjD`}}}Db{OdAFf}}{{{j{{AFl{c}}}}{j{BjD`}}}Db{OdAFf}}{cc{}}00{{{j{{AFd{c}}}}A@bFl{Gl{Fl}}}{{AFd{c}}}AFf}{{}Cb}00{ce{}{}}00{{{j{{AFd{c}}}}}A@bAFf}{{{j{{AFh{c}}}}}A@bAFf}{{{j{{AFd{c}}}}}ChAFf}{{{j{{AFh{c}}}}}ChAFf}{A@b{{AFd{c}}}AFf}{A@bc{}}{{{j{Bjc}}}{{Df{{AFd{e}}}}}DhAFf}{{{j{Bjc}}}{{Df{{AFh{e}}}}}DhAFf}{{{j{Bjc}}Cn}{{Df{{AFd{e}}}}}DhAFf}{{{j{Bjc}}Cn}{{Df{{AFh{e}}}}}DhAFf}{{{j{Bjc}}}{{Df{e}}}Dh{}}{{A@bc}{{AFd{e}}}ClAFf}{{{j{c}}}e{}{}}0{c{{Dn{e}}}{}{}}00000{{{j{c}}}E`{}}00{{{j{{AFd{c}}}}}{{AFh{c}}}AFf}{ce{}{}}00{{{j{{AFd{c}}}}{j{Bje}}}{{Df{Bn}}}AFfEb}{{{j{{AFh{c}}}}{j{Bje}}}{{Df{Bn}}}AFfEb}{{{j{{AFd{c}}}}{j{Bje}}Cn}{{Df{Bn}}}AFfEb}{{{j{{AFh{c}}}}{j{Bje}}Cn}{{Df{Bn}}}AFfEb}``{{{j{Bj{AFj{c}}}}{j{{AFj{c}}}}}BnAFf}{{{j{Bj{AFn{c}}}}{AFn{c}}}BnAG`}{{{j{Bj{AFj{c}}}}}BnAFf}{{{j{{AFj{c}}}}}FlAFf}{{{j{c}}}{{j{e}}}{}{}}0{{{j{Bjc}}}{{j{Bje}}}{}{}}0{{{j{{AFj{c}}}}{j{e}}}BfAFfAAf}{{{AFn{c}}{j{e}}{j{{AFh{c}}}}}BfAG`AAf}{{{j{{AFj{c}}}}}{{AFj{c}}}{CfAFf}}{{{j{{AFn{c}}}}}{{AFn{c}}}{CfAFf}}{{{j{c}}{j{Bje}}}Bn{}{}}08{{}{{AFj{c}}}{KjAFf}}{{}{{AFn{c}}}{KjAFf}}{Cb{{j{c}}}{}}0{Cb{{j{Bjc}}}{}}0{CbBn}0{{{j{{AFj{c}}}}{j{e}}}{}AFfAAf}{{{j{{AFj{c}}}}{j{BjD`}}}Db{OdAFf}}{{{j{{AFn{c}}}}{j{BjD`}}}Db{OdAFf}}{cc{}}0{{}Cb}0{ce{}{}}0{{}{{AFj{c}}}AFf}{{}{{AFn{c}}}AG`}{{{j{{AFj{c}}}}}FlAFf}{{{j{Bj{AFj{c}}}}}BnAFf}{{{j{Bj{AFn{c}}}}}BnAG`}{{{j{c}}}e{}{}}0{c{{Dn{e}}}{}{}}000{{{j{c}}}E`{}}088````{{{j{c}}}{{j{e}}}{}{}}000{{{j{Bjc}}}{{j{Bje}}}{}{}}000{{{j{{AGb{c}}}}{j{e}}g{j{Bjk}}m}{{Df{Bn}}}{AFfOd}AAfClOn{{AAd{i}}}{{Hb{}{{Ed{`}}}}Cf}}{{{j{{AGd{c}}}}{j{e}}g{j{Bjk}}m}{{Df{Bn}}}{AFfOd}AAfClOn{{AAd{i}}}{{Hb{}{{Ed{`}}}}Cf}}{Cb{{j{c}}}{}}000{Cb{{j{Bjc}}}{}}000{CbBn}000{{{j{{AGb{c}}}}{j{BjD`}}}Db{OdAFf}}{{{j{{AGf{c}}}}{j{BjD`}}}Db{OdAFf}}{{{j{{AGd{c}}}}{j{BjD`}}}Db{OdAFf}}{{{j{{AGh{c}}}}{j{BjD`}}}Db{OdAFf}}{cc{}}000{{}Cb}000{ce{}{}}000{{{j{{AFd{c}}}}}{{AGb{c}}}{AFfOd}}{{}{{AGf{c}}}{AG`Od}}{{{j{{AFd{c}}}}}{{AGd{c}}}{AFfOd}}{{{j{{AFd{c}}}}}{{AGd{c}}}AFf}{{}{{AGh{c}}}{AG`Od}}{c{{Dn{e}}}{}{}}0000000{{{j{c}}}E`{}}000{{{j{{AGf{c}}}}{j{Bjg}}i{AFn{c}}}{{Dn{kACd}}}{AG`Od}On{{ABf{e}}}{{Hb{}{{Ed{{`{{AFj{c}}}}}}}}Cf}{}}{{{j{{AGh{c}}}}{j{Bjg}}i{AFn{c}}}{{Dn{kACd}}}{AG`Od}On{{ABf{e}}}{{Hb{}{{Ed{{`{{AFj{c}}}}}}}}Cf}{}}9999```{{{j{c}}}{{j{e}}}{}{}}00{{{j{Bjc}}}{{j{Bje}}}{}{}}00{{{j{{AGj{c}}}}}{{AGj{c}}}{CfAG`}}{{{j{{AGl{c}}}}}{{AGl{c}}}{CfAFf}}{{{j{{AGn{c}}}}}{{AGn{c}}}{CfAFf}}{{{j{c}}{j{Bje}}}Bn{}{}}00{Cb{{j{c}}}{}}00{Cb{{j{Bjc}}}{}}00{CbBn}00{{{AGl{c}}}Bf{AG`Od}}{{{AGn{c}}}Bf{AG`Od}}{{{j{{AGj{c}}}}{j{BjD`}}}Db{OdAG`}}{{{j{{AGl{c}}}}{j{BjD`}}}Db{OdAFf}}{{{j{{AGn{c}}}}{j{BjD`}}}Db{OdAFf}}{cc{}}00{{}Cb}00{ce{}{}}00{{{j{{AFh{c}}}}}{{AGl{c}}}{AG`Od}}{{{j{{AFh{c}}}}}{{AGl{c}}}AG`}{{{j{{AFh{c}}}}}{{AGn{c}}}{AG`Od}}0{{{AGl{c}}e}{{Dn{gOb}}}{AG`Od}{{In{}{{Aj{{Dn{Ob}}}}}}}{}}{{{AGn{c}}e}{{Dn{gOb}}}{AG`Od}{{In{}{{Aj{{Dn{Ob}}}}}}}{}}{{{j{c}}}e{}{}}00{c{{Dn{e}}}{}{}}00000{{{j{c}}}E`{}}00888{{{AFn{c}}{j{{AFh{c}}}}}{{AGl{c}}}AG`}`````````````{{{j{{On{}{{AH`{c}}}}}}}{{AHb{eg}}}{}h{}}{{{j{c}}}{{j{e}}}{}{}}00000{{{j{Bjc}}}{{j{Bje}}}{}{}}00000{{{j{{AHd{ceg}}}}}{{AHd{ceg}}}{CfDh}{Cfh}{Cf{On{e}}}}{{{j{{AHf{ceg}}}}}{{AHf{ceg}}}{CfDh}{Cfh}{Cf{On{e}}}}{{{j{{AHh{ceg}}}}}{{AHh{ceg}}}{CfEb}{Cfh}{Cf{On{e}}}}{{{j{{AHj{ceg}}}}}{{AHj{ceg}}}{CfEb}{Cfh}{Cf{On{e}}}}{{{j{{AHb{ce}}}}}{{AHb{ce}}}{Cfh}Cf}{{{j{{AHl{c}}}}}{{AHl{c}}}{Cfh}}{{{j{c}}{j{Bje}}}Bn{}{}}00000{{{j{BjA@`}}c}{{Df{Bn}}}h}{{{j{Bj{AHd{ce{AHl{e}}}}}}e}{{Df{Bn}}}Dhh}{{{j{Bj{AHf{ce{AHl{e}}}}}}e}{{Df{Bn}}}Dhh}{{{j{Bj{AHh{ce{AHl{e}}}}}}e}{{Df{Bn}}}Ebh}{{{j{Bj{AHj{ce{AHl{e}}}}}}e}{{Df{Bn}}}Ebh}{{{j{BjA@`}}}{{Df{Bn}}}}{{{j{Bj{AHd{ce{AHl{e}}}}}}}{{Df{Bn}}}Dhh}{{{j{Bj{AHf{ce{AHl{e}}}}}}}{{Df{Bn}}}Dhh}{{{j{Bj{AHh{ce{AHl{e}}}}}}}{{Df{Bn}}}Ebh}{{{j{Bj{AHj{ce{AHl{e}}}}}}}{{Df{Bn}}}Ebh}{Cb{{j{c}}}{}}0000{{{j{{AHb{ce}}}}}{{j{g}}}h{}{}}1{{{j{{AHl{c}}}}}{{j{e}}}h{}}{Cb{{j{Bjc}}}{}}00000{CbBn}00000{AHncEb}{{{AHh{ce{AHl{e}}}}}cEbh}{{{AHj{ce{AHl{e}}}}}cEbh}{{{j{{AHd{ceg}}}}{j{BjD`}}}Db{OdDh}{Odh}{Od{On{e}}}}{{{j{{AHf{ceg}}}}{j{BjD`}}}Db{OdDh}{Odh}{Od{On{e}}}}{{{j{{AHh{ceg}}}}{j{BjD`}}}Db{OdEb}{Odh}{Od{On{e}}}}{{{j{{AHj{ceg}}}}{j{BjD`}}}Db{OdEb}{Odh}{Od{On{e}}}}{{{j{{AHb{ce}}}}{j{BjD`}}}Db{Odh}Od}{{{j{{AHl{c}}}}{j{BjD`}}}Db{Odh}}{cc{}}00000{{{j{{On{}{{AH`{c}}}}}}}{}{}}{{{j{{AHl{c}}}}}{}h}{cAI`Dh}{cAHnEb}{c{{AHd{ce{AHl{e}}}}}Dhh}{{}Cb}0{c{{AHf{ce{AHl{e}}}}}Dhh}1{c{{AHh{ce{AHl{e}}}}}Ebh}2{c{{AHj{ce{AHl{e}}}}}Ebh}33{ce{}{}}00000{{{j{c}}}{{On{}{{AH`{c}}}}}{}}{{{j{{AIb{Oj}}}}}{{AHl{c}}}h}{{{j{Bjg}}Cb}{{Df{{Fl{c}}}}}h{{On{c}}}{{ABf{ce}}}}{{{j{Bjg}}Cb}{{Df{Fl}}}h{{On{c}}}{{ABf{ce}}}}{{{j{BjABf}}}{{Df{c}}}h}{{{j{Bj{AHd{ce{AHl{e}}}}}}}{{Df{e}}}Dhh}{{{j{Bj{AHf{ce{AHl{e}}}}}}}{{Df{e}}}Dhh}{{{j{BjABf}}}Df}{{{j{Bj{AHd{ce{AHl{e}}}}}}}DfDhh}{{{j{Bj{AHf{ce{AHl{e}}}}}}}DfDhh}{{{j{BjA@`}}}eh{{On{c}}}}{{{j{Bj{AHd{ce{AHl{e}}}}}}}{{AHl{e}}}Dhh}{{{j{Bj{AHf{ce{AHl{e}}}}}}}{{AHl{e}}}Dhh}{{{j{Bj{AHh{ce{AHl{e}}}}}}}{{AHl{e}}}Ebh}{{{j{Bj{AHj{ce{AHl{e}}}}}}}{{AHl{e}}}Ebh}{{{j{BjA@`}}}{{AHb{ce}}}h{}}{{{j{c}}}e{}{}}00000{c{{Dn{e}}}{}{}}00000000000{{{j{c}}}E`{}}00000{ce{}{}}00000{{{j{BjAAd}}c}{{Df{Bn}}}h}{{{j{Bj{AHh{ce{AHl{e}}}}}}e}{{Df{Bn}}}Ebh}{{{j{Bj{AHj{ce{AHl{e}}}}}}e}{{Df{Bn}}}Ebh}{{{j{BjAAd}}}{{Df{Bn}}}}{{{j{Bj{AHh{ce{AHl{e}}}}}}}{{Df{Bn}}}Ebh}{{{j{Bj{AHj{ce{AHl{e}}}}}}}{{Df{Bn}}}Ebh}","D":"D@d","p":[[17,"ScalarExt"],[17,"Base"],[17,"CurveExt"],[10,"CurveAffine",6,1195],[1,"reference"],[5,"Coordinates",1195],[5,"CtOption",1196],[10,"WithSmallOrderMulGroup",1197],[10,"Ord",1198],[17,"AffineExt"],[10,"CurveExt",6,1195],[10,"Field",6,1197],[17,"Output"],[10,"Mul",1199],[1,"str"],[10,"Fn",1200],[5,"Box",1201],[5,"Choice",1196],[1,"bool"],[1,"tuple"],[0,"mut"],[1,"slice"],[1,"unit"],[10,"Send",1202],[1,"usize"],[10,"Sync",1202],[10,"Clone",1203],[1,"u64"],[10,"AsRef",1204],[10,"RngCore",1205],[6,"SerdeFormat",43],[5,"Formatter",1206],[8,"Result",1206],[10,"CurveRead",43],[8,"Result",1207],[10,"Read",1208],[10,"SerdeCurveAffine",43],[10,"SerdePrimeField",43],[6,"Result",1209],[5,"TypeId",1210],[10,"Write",1208],[17,"Item"],[10,"ParallelIterator",72,1211],[10,"ParallelSliceMut",72,1212],[10,"IndexedParallelIterator",72,1211],[5,"ExponentialBlocks",1213],[5,"UniformBlocks",1213],[5,"Chain",1214],[10,"IntoParallelIterator",72,1211],[5,"Chunks",1215],[5,"Cloned",1216],[6,"Ordering",1198],[10,"FromParallelIterator",1211],[5,"Vec",1217],[5,"LinkedList",1218],[5,"Copied",1219],[10,"Consumer",1220],[10,"UnindexedConsumer",1220],[5,"Enumerate",1221],[5,"Filter",1222],[5,"FilterMap",1223],[6,"Option",1224],[5,"FlatMap",1225],[5,"FlatMapIter",1226],[10,"IntoIterator",1227],[5,"Flatten",1228],[5,"FlattenIter",1229],[5,"Scope",72,1230],[5,"Error",1206],[5,"Fold",1231],[5,"FoldChunks",1232],[5,"FoldChunksWith",1233],[5,"FoldWith",1231],[5,"Inspect",1234],[5,"Interleave",1235],[5,"InterleaveShortest",1236],[5,"Intersperse",1237],[17,"Iter"],[10,"FnOnce",1200],[5,"Map",1238],[5,"MapInit",1239],[5,"MapWith",1239],[5,"PanicFuse",1240],[5,"ChunkByMut",1241],[5,"ChunksExactMut",1242],[5,"ChunksMut",1242],[10,"IntoParallelRefIterator",72,1211],[10,"IntoParallelRefMutIterator",72,1211],[5,"RChunksExactMut",1243],[5,"RChunksMut",1243],[5,"SplitInclusiveMut",1212],[5,"SplitMut",1212],[10,"Default",1244],[10,"ParallelExtend",1211],[6,"Either",1245],[5,"Positions",1246],[10,"Product",1247],[5,"Rev",1248],[5,"Skip",1249],[5,"SkipAny",1250],[5,"SkipAnyWhile",1251],[5,"BroadcastContext",1252],[5,"StepBy",1253],[10,"Sum",1247],[5,"Take",1254],[5,"TakeAny",1255],[5,"TakeAnyWhile",1256],[5,"TryFold",1257],[10,"Try",1258],[10,"TryFoldAndReduce",72,1259],[5,"TryFoldWith",1257],[5,"Update",1260],[5,"WhileSome",1261],[5,"MaxLen",1262],[5,"MinLen",1262],[10,"ProducerCallback",1220],[5,"Zip",1263],[5,"ZipEq",1264],[5,"VerifyingKey",216],[5,"ProvingKey",216],[6,"Error",216,1265],[10,"Debug",1206],[5,"PinnedVerificationKey",216],[5,"Error",1207],[1,"u8"],[5,"EvaluationDomain",369,1266],[10,"EncodedChallenge",1040],[10,"Transcript",1040],[1,"u32"],[10,"Error",1267],[5,"String",1268],[5,"CompiledCircuit",1269],[10,"Params",539],[5,"ProverSingle",312],[5,"HashMap",1270],[10,"CommitmentScheme",539],[10,"Prover",539],[10,"TranscriptWrite",1040],[10,"MsmAccel",1271],[5,"Prover",312],[5,"H2cEngine",1272],[5,"PlonkEngine",1272],[5,"BatchVerifier",349,1273],[8,"ParamsVerifierIPA",609],[10,"Verifier",539],[10,"VerificationStrategy",369,1274],[10,"TranscriptRead",1040],[5,"Polynomial",369],[10,"Basis",369],[5,"Coeff",369],[5,"LagrangeCoeff",369],[5,"ExtendedLagrangeCoeff",369],[5,"PinnedEvaluationDomain",369,1266],[6,"Error",369],[5,"RangeFrom",1275],[5,"RangeFull",1275],[10,"Iterator",1276],[1,"i32"],[5,"Rotation",1277],[5,"Blind",539],[10,"MSM",539],[10,"ParamsProver",539],[17,"MSM"],[10,"ParamsVerifier",539],[10,"PartialEq",1198],[17,"Guard"],[17,"MSMAccumulator"],[10,"Guard",369,1274],[5,"ParamsIPA",609],[5,"MSMIPA",654],[5,"IPACommitmentScheme",609],[5,"GuardIPA",716],[5,"ProverIPA",684,1278],[5,"VerifierIPA",684,1279],[5,"Accumulator",716],[5,"AccumulatorStrategy",716],[5,"SingleStrategy",716],[5,"ParamsKZG",793],[10,"Engine",1280],[5,"ParamsVerifierKZG",793],[5,"MSMKZG",866],[5,"KZGCommitmentScheme",793],[5,"DualMSM",866],[10,"MultiMillerLoop",1280],[5,"ProverGWC",915,1281],[5,"ProverSHPLONK",915,1282],[5,"VerifierGWC",915,1283],[5,"VerifierSHPLONK",915,1284],[5,"GuardKZG",980],[5,"AccumulatorStrategy",980],[5,"SingleStrategy",980],[17,"Input"],[5,"ChallengeScalar",1040],[5,"Blake2bRead",1040],[5,"Keccak256Read",1040],[5,"Blake2bWrite",1040],[5,"Keccak256Write",1040],[5,"Challenge255",1040],[10,"TranscriptWriterBuffer",1040],[10,"TranscriptReadBuffer",1040],[1,"array"],[15,"NotEnoughRowsAvailable",309]],"r":[[2,1285],[10,1195],[11,1195],[13,1197],[72,1211],[73,1211],[74,1211],[75,1211],[83,1211],[84,1212],[85,1230],[86,1259],[103,1286],[141,1287],[184,1230],[219,1265],[349,1273],[372,1266],[374,1274],[380,1266],[383,1274],[620,1288],[650,1289],[684,1278],[685,1279],[915,1281],[916,1282],[917,1283],[918,1284]],"b":[[254,"impl-Debug-for-Error"],[255,"impl-Display-for-Error"],[464,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-Polynomial%3CF,+B%3E"],[465,"impl-Index%3Cusize%3E-for-Polynomial%3CF,+B%3E"],[466,"impl-Index%3CRangeFull%3E-for-Polynomial%3CF,+B%3E"],[467,"impl-IndexMut%3CRangeFrom%3Cusize%3E%3E-for-Polynomial%3CF,+B%3E"],[468,"impl-IndexMut%3Cusize%3E-for-Polynomial%3CF,+B%3E"],[469,"impl-IndexMut%3CRangeFull%3E-for-Polynomial%3CF,+B%3E"],[503,"impl-Sub%3CF%3E-for-%26Polynomial%3CF,+B%3E"],[504,"impl-Sub%3C%26Polynomial%3CF,+B%3E%3E-for-Polynomial%3CF,+B%3E"],[558,"impl-AddAssign%3CF%3E-for-Blind%3CF%3E"],[559,"impl-AddAssign-for-Blind%3CF%3E"],[586,"impl-MulAssign-for-Blind%3CF%3E"],[587,"impl-MulAssign%3CF%3E-for-Blind%3CF%3E"],[656,"impl-MSM%3CC%3E-for-MSMIPA%3C\'a,+C%3E"],[657,"impl-MSMIPA%3C\'a,+C%3E"],[959,"impl-Prover%3C\'params,+KZGCommitmentScheme%3CE%3E%3E-for-ProverSHPLONK%3C\'params,+E%3E"],[960,"impl-ProverSHPLONK%3C\'a,+E%3E"],[1018,"impl-VerificationStrategy%3C\'params,+KZGCommitmentScheme%3CE%3E,+V%3E-for-AccumulatorStrategy%3CE%3E"],[1019,"impl-AccumulatorStrategy%3CE%3E"],[1020,"impl-VerificationStrategy%3C\'params,+KZGCommitmentScheme%3CE%3E,+V%3E-for-SingleStrategy%3CE%3E"],[1021,"impl-SingleStrategy%3CE%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAKkCcwAAAAAAAgABACwAAAAwAAAAMgACADYABQA9AAAAQgAEAFcAAABbAAEAaQABAG0AAAB8AAAAhwAAAMoAAQDOAAAA0gAAAOYAFwD/AAUADgEDABwBAAAfAQIAIwELADABAwA7AQMAQwEHAE0BAQBRAQAAVgEHAGABBQBnAQAAaQEAAGwBAgBxAQAAeAEAAIEBGQCgAQ8AsQEGAL8BBgDRAQwA7QEAAPABAAD4ASMALgICADQCAQA3AgEAPQICAEECAABDAgAARQIAAEcCAABKAgIAVwIDAFwCAABlAgUAbgIJAHoCAQB+AgEAgQIAAIMCBwCMAgEAlgILAKMCAACmAgYArwIDALQCBwC+AgEAwgIKANECCwDeAgsA7AIDAPUCAwD9AhEAEgMDAB0DHAA+AwIARAMFAE0DAQBQAw4AYgMAAGUDAABnAwYAbwMDAHQDCgCBAwEAhwMBAIoDCQCYAwcAogMPALYDAwC+AwIAwgMNANEDAwDYAxkA9QMCAPsDAAD9AwAA/wMQAB8EFwA4BAMAPQQXAFYEAABYBAUAZQQAAGkEAQBsBAAAbgQAAHAEAQB5BAIAfQQBAIAEAQCDBAMAiAQdAKcEAQCqBAEA"}],\
["halo2_frontend",{"t":"CCCFFKRKRFFFFREFFKFFNNNNNNNNNNNNNNNNNNMNNNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHMNNMNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNNNNNNNNNNNNNNNNNNNNNNNNNCMNNNNNNNNNNNNNNNNMNMNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNEECCFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNPGKFPKKMNMNMNMMNNNNNNNNNNNMNMNNNNNNNMNNNNNNNNNNNMNNNMNNNNNNNNNNNNNNNPPPGEFFPPGPPGPFPPPPPFPGNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGFPPPFFFFFOONNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNHHNONNNNNNNONNNNNNNNOOOOOONOOOONNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFFNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCCCCCGPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFKKKRFKRFRMMMNNNNNNNNNNNNCMNCMNNNNNNNNNMMNNNMCMNNNNNNMNNNNNNNNNNMMMNNNMMMNNNNNNNNNNNNNNNMFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPFFPFPGFPFPFPKPPFFPPFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFKNNNNNNNNNNNNNNNNNMNNNNNPPPGPPPPPGPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOFNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNN","n":["circuit","dev","plonk","AssignedCell","Cell","Chip","Config","Layouter","Loaded","NamespacedLayouter","Region","RegionIndex","RegionStart","Root","SimpleFloorPlanner","SimpleTableLayouter","Table","TableLayouter","Value","WitnessCalculator","add","add","add","add","add","add","add","add","add","add","and_then","as_mut","as_ref","assert_if_known","assign","assign_advice","assign_advice_from_constant","assign_advice_from_instance","assign_cell","assign_cell","assign_cell","assign_fixed","assign_region","assign_region","assign_table","assign_table","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calc","cell","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cloned","cloned","column","compile_circuit","config","constrain_constant","constrain_equal","constrain_instance","constrain_instance","copied","copied","copy_advice","cube","default","default_and_assigned","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","double","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","enable_selector","eq","error_if_known_and","evaluate","evaluate","floor_planner","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","get_challenge","get_challenge","get_root","get_root","init","init","init","init","init","init","init","init","init","init","instance_value","into","into","into","into","into","into","into","into","into","into","into_field","invert","known","layouter","loaded","map","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","name_column","namespace","neg","new","new","pop_namespace","pop_namespace","push_namespace","push_namespace","region_index","row_offset","square","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","to_field","to_owned","to_owned","to_owned","to_owned","to_owned","transpose_array","transpose_vec","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unknown","unzip","value","value_field","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","zip","V1","V1Pass","single_pass","v1","SimpleFloorPlanner","SingleChipLayouter","assign_region","assign_table","borrow","borrow","borrow_mut","borrow_mut","constrain_instance","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","get_challenge","get_root","init","init","into","into","new","pop_namespace","push_namespace","synthesize","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AssignmentPass","MeasurementPass","V1","V1Pass","assign_region","assign_table","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","constrain_instance","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","get_challenge","get_root","init","init","init","init","into","into","into","into","pop_namespace","push_namespace","strategy","synthesize","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","Column","RegionColumn","RegionLayouter","RegionShape","Selector","SyncDeps","TableLayouter","assign_advice","assign_advice","assign_advice_from_constant","assign_advice_from_constant","assign_advice_from_instance","assign_advice_from_instance","assign_cell","assign_fixed","assign_fixed","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","columns","constrain_constant","constrain_constant","constrain_equal","constrain_equal","deref","deref","deref_mut","deref_mut","drop","drop","enable_selector","enable_selector","eq","fmt","fmt","from","from","from","from","hash","init","init","instance_value","instance_value","into","into","name_column","name_column","new","partial_cmp","region_index","row_count","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Assigned","Assigned","CellNotAssigned","CellValue","CircuitCost","CircuitGates","CircuitLayout","ConstraintNotSatisfied","ConstraintPoisoned","FailureLocation","InRegion","InstanceCellNotAssigned","InstanceValue","Lookup","MockProver","OutsideRegion","Padding","Permutation","Poison","Shuffle","TracingFloorPlanner","Unassigned","VerifyFailure","advice","advice_values","annotate_column","assert_satisfied","assert_satisfied_at_rows","assign_advice","assign_fixed","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","circuit_dot_graph","clone","clone","clone","clone_into","clone_into","clone_into","collect","copy","cost","cost_model","cs","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","emit","enable_selector","enter_region","eq","eq","eq","eq","exit_region","fill_from_row","fixed","fixed_values","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get_challenge","init","init","init","init","init","init","init","init","instance","into","into","into","into","into","into","into","into","mark_equality_cells","metadata","pop_namespace","push_namespace","queries_to_csv","query_instance","render","run","selectors","show_equality_constraints","show_labels","synthesize","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","usable_rows","value","verify","verify_at_rows","view_height","view_width","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","offset","region","row","cell_values","column","column","column","constraint","constraint","gate","gate","gate_offset","gate_offset","location","location","location","location","lookup_index","name","name","offset","region","region","row","shuffle_index","CircuitCost","MarginalProofSize","ProofSize","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","marginal_proof_size","measure","proof_size","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","CommitmentScheme","CostOptions","IPA","KZGGWC","KZGSHPLONK","Lookup","ModelCircuit","Permutation","Poly","Shuffle","advice","advice_columns","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","column_queries","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","eq","eq","fixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_circuit_to_cost_model_options","from_circuit_to_model_circuit","from_str","gate_degree","init","init","init","init","init","init","init","instance","into","into","into","into","into","into","into","into_model_circuit","k","k","lookup","lookups","max_deg","max_degree","partial_cmp","permutation","permutations","point_sets","rotations","serialize","serialize","shuffle","shuffles","size","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Column","Constraint","Gate","Region","VirtualCell","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","column_type","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","index","init","init","init","init","init","into","into","into","into","into","new","partial_cmp","partial_cmp","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","assigned","circuit","error","keygen","lookup","permutation","shuffle","Assigned","Rational","Trivial","Zero","add","add","add","add","add","add","add_assign","add_assign","borrow","borrow_mut","clone","clone_into","cube","denominator","deref","deref_mut","double","drop","eq","evaluate","fmt","from","from","from","from","from","init","into","invert","is_zero_vartime","mul","mul","mul","mul","mul_assign","mul_assign","neg","neg","numerator","square","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","to_owned","try_from","try_into","type_id","vzip","Advice","Assignment","Circuit","ColumnType","Config","Fixed","FloorPlanner","FloorPlanner","Instance","Params","annotate_column","assign_advice","assign_fixed","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","compress_selectors","configure","configure_with_params","constraint_system","copy","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","enable_selector","enter_region","eq","eq","eq","exit_region","expression","fill_from_row","fmt","fmt","fmt","from","from","from","get_challenge","hash","hash","hash","init","init","init","into","into","into","params","pop_namespace","push_namespace","query_cell","query_cell","query_cell","query_cell","query_instance","synthesize","synthesize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","without_witnesses","Constraint","ConstraintSystem","Constraints","Gate","VirtualCell","VirtualCells","advice_column","advice_column_in","advice_column_phase","advice_queries","annotate_lookup_any_column","annotate_lookup_column","blinding_factors","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","challenge_phase","challenge_usable_after","clone","clone","clone","clone_into","clone_into","clone_into","column","complex_selector","compress_selectors","constants","constraint_name","create_gate","default","degree","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","directly_convert_selectors_to_fixed","drop","drop","drop","drop","drop","drop","enable_constant","enable_equality","fixed_column","fixed_queries","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","gates","general_column_annotations","get_any_query_index","init","init","init","init","init","init","instance_column","instance_queries","into","into","into","into","into","into","into_iter","lookup","lookup_any","lookup_table_column","lookups","minimum_rows","name","num_advice_columns","num_challenges","num_fixed_columns","num_instance_columns","num_selectors","permutation","phases","polynomials","queried_cells","queried_selectors","query_advice","query_any","query_challenge","query_fixed","query_instance","query_selector","rotation","selector","set_minimum_degree","shuffle","shuffles","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unblinded_advice_column","unblinded_advice_column_in","vzip","vzip","vzip","vzip","vzip","vzip","with_selector","Advice","AdviceQuery","Challenge","Challenge","Column","Constant","Expression","FirstPhase","Fixed","FixedQuery","Instance","InstanceQuery","Negated","Phase","Product","Scaled","SecondPhase","Selector","Selector","Sum","TableColumn","ThirdPhase","add","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","column_index","column_index","column_index","column_index","column_index","column_index","column_type","column_type","complexity","cur","degree","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","enable","eq","eq","eq","eq","eq","eq","eq","eq","evaluate","evaluate_lazy","expr","expr","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","identifier","index","index","index","index","index","index","index","index","init","init","init","init","init","init","init","init","init","init","init","inner","into","into","into","into","into","into","into","into","into","into","into","is_simple","mul","mul","neg","new","next","partial_cmp","partial_cmp","phase","prev","product","query_cell","query_cells","rot","rotation","rotation","rotation","rotation","rotation","rotation","sealed","square","sub","sum","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sealed","to_sealed","to_sealed","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Phase","SealedPhase","borrow","borrow_mut","clone","clone_into","cmp","deref","deref_mut","drop","eq","fmt","from","hash","init","into","partial_cmp","prev","to_owned","to_sealed","to_sealed","try_from","try_into","type_id","vzip","BoundsFailure","ColumnNotAssigned","ColumnNotInPermutation","Error","NotEnoughColumnsForConstants","NotEnoughRowsAvailable","Other","OverwriteDefault","Synthesis","TableError","TableError","UnevenColumnLengths","UsedColumn","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","fmt","from","from","init","init","into","into","not_enough_rows_available","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","current_k","Argument","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","input_expressions","into","name","new","table_expressions","to_owned","try_from","try_into","type_id","vzip","Argument","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","fmt","from","get_columns","init","into","to_owned","try_from","try_into","type_id","vzip","Argument","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","input_expressions","into","name","new","shuffle_expressions","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"halo2_frontend"],[3,"halo2_frontend::circuit"],[275,"halo2_frontend::circuit::floor_planner"],[279,"halo2_frontend::circuit::floor_planner::single_pass"],[316,"halo2_frontend::circuit::floor_planner::v1"],[381,"halo2_frontend::circuit::layouter"],[449,"halo2_frontend::dev"],[636,"halo2_frontend::dev::FailureLocation"],[639,"halo2_frontend::dev::VerifyFailure"],[661,"halo2_frontend::dev::cost"],[706,"halo2_frontend::dev::cost_model"],[850,"halo2_frontend::dev::metadata"],[965,"halo2_frontend::plonk"],[972,"halo2_frontend::plonk::assigned"],[1029,"halo2_frontend::plonk::circuit"],[1118,"halo2_frontend::plonk::circuit::constraint_system"],[1272,"halo2_frontend::plonk::circuit::expression"],[1537,"halo2_frontend::plonk::circuit::expression::sealed"],[1562,"halo2_frontend::plonk::error"],[1606,"halo2_frontend::plonk::error::Error"],[1607,"halo2_frontend::plonk::lookup"],[1628,"halo2_frontend::plonk::permutation"],[1647,"halo2_frontend::plonk::shuffle"],[1668,"halo2_frontend::circuit::value"],[1669,"ff"],[1670,"core::ops::arith"],[1671,"core::ops::function"],[1672,"core::result"],[1673,"alloc::string"],[1674,"core::convert"],[1675,"halo2_frontend::circuit::table_layouter"],[1676,"std::collections::hash::map"],[1677,"alloc::vec"],[1678,"core::option"],[1679,"core::clone"],[1680,"halo2_middleware::circuit"],[1681,"core::fmt"],[1682,"core::marker"],[1683,"core::borrow"],[1684,"core::iter::traits::collect"],[1685,"core::any"],[1686,"core::cmp"],[1687,"std::collections::hash::set"],[1688,"core::hash"],[1689,"core::iter::traits::iterator"],[1690,"halo2_frontend::dev::failure"],[1691,"halo2_frontend::dev::gates"],[1692,"halo2_frontend::dev::graph::layout"],[1693,"halo2_frontend::dev::tfp"],[1694,"plotters::coord"],[1695,"plotters::drawing::area"],[1696,"plotters_backend"],[1697,"core::ops::range"],[1698,"group::prime"],[1699,"serde::de"],[1700,"serde::ser"],[1701,"core::default"],[1702,"halo2_middleware::poly"],[1703,"halo2_frontend::dev::graph"]],"i":[0,0,0,0,0,0,48,0,48,0,0,0,0,30,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,13,13,13,23,25,27,13,30,31,30,31,25,1,32,40,41,38,17,13,27,31,25,1,32,40,41,38,17,13,27,31,32,17,1,40,41,38,17,1,40,41,38,17,1,1,38,0,48,13,13,30,31,1,1,17,1,1,25,25,1,32,40,40,41,41,38,17,13,27,31,25,1,32,40,41,38,17,13,27,31,1,25,1,32,40,41,38,17,13,27,31,31,13,41,1,1,17,0,25,1,32,40,41,38,17,13,27,31,25,1,1,32,40,40,41,41,38,17,13,13,27,27,31,1,30,31,30,31,25,1,32,40,41,38,17,13,27,31,13,25,1,32,40,41,38,17,13,27,31,1,1,1,0,48,1,1,1,1,1,1,1,1,1,1,1,13,30,1,25,32,30,31,30,31,38,38,1,1,1,1,1,1,1,1,1,1,1,1,1,40,41,38,17,1,1,25,1,32,40,41,38,17,13,27,31,25,1,32,40,41,38,17,13,27,31,25,1,32,40,41,38,17,13,27,31,1,1,17,17,25,1,32,40,41,38,17,13,27,31,1,0,0,0,0,0,0,67,67,67,69,67,69,67,67,69,67,69,67,69,67,69,67,69,67,67,67,69,67,69,67,67,67,69,67,69,67,69,67,69,67,69,0,0,0,0,70,70,71,70,72,73,71,70,72,73,70,71,70,72,73,71,70,72,73,71,70,72,73,71,70,72,73,71,70,72,73,70,70,71,70,72,73,71,70,72,73,70,70,0,71,71,70,72,73,71,70,72,73,71,70,72,73,71,70,72,73,75,0,0,0,75,0,0,55,74,55,74,55,74,23,55,74,74,75,74,75,74,75,74,75,75,74,55,74,55,74,74,75,74,75,74,75,55,74,75,74,75,74,75,75,75,75,74,75,55,74,74,75,55,74,74,75,74,74,74,75,74,75,74,75,74,75,74,75,80,85,88,0,0,0,0,88,88,0,84,88,0,88,0,84,85,88,80,88,0,80,0,79,79,79,79,79,79,79,84,88,86,91,87,80,79,85,84,88,86,91,87,80,79,85,0,84,80,85,84,80,85,86,79,0,0,79,87,84,88,86,91,87,80,79,85,84,88,86,91,87,80,79,85,84,88,86,91,87,80,79,85,88,79,79,84,88,80,85,79,79,79,79,84,84,88,88,86,86,91,87,80,79,85,84,88,86,91,87,80,79,85,79,84,88,86,91,87,80,79,85,79,84,88,86,91,87,80,79,85,87,0,79,79,86,79,87,79,79,87,87,91,84,80,85,84,88,86,84,88,86,91,87,80,79,85,84,88,86,91,87,80,79,85,84,88,86,91,87,80,79,85,79,85,79,79,87,87,84,88,86,91,87,80,79,85,145,145,146,147,148,149,150,147,151,148,149,148,149,147,152,153,150,152,152,153,148,148,149,149,153,0,0,0,98,100,101,98,100,101,98,100,101,98,100,101,98,100,101,98,100,101,98,100,101,98,100,101,98,100,101,98,98,98,98,100,101,98,100,101,98,100,101,98,100,101,0,0,108,108,108,0,0,0,0,0,109,107,108,109,102,103,104,105,107,108,109,102,103,104,105,107,102,103,104,105,102,103,104,105,102,107,108,109,102,103,104,105,107,108,109,102,103,104,105,107,104,107,108,109,102,103,104,105,107,108,102,109,108,109,102,103,104,105,107,108,109,102,103,104,105,107,0,0,102,109,108,109,102,103,104,105,107,109,108,109,102,103,104,105,107,109,109,107,109,107,107,109,102,109,107,107,102,104,107,109,107,107,102,103,104,105,108,109,102,103,104,105,107,108,109,102,103,104,105,107,108,109,102,103,104,105,107,108,109,102,103,104,105,107,0,0,0,0,0,112,116,113,114,115,112,116,113,114,115,112,113,114,115,112,113,114,115,112,116,112,112,116,113,114,115,112,116,113,114,115,112,116,113,114,115,112,116,113,114,115,112,112,116,116,113,113,114,114,115,115,112,112,116,116,116,116,113,113,114,114,115,115,115,115,115,112,112,112,116,113,114,115,112,116,113,114,115,112,112,116,112,113,114,115,112,116,113,114,115,112,116,113,114,115,112,116,113,114,115,112,116,113,114,115,112,116,113,114,115,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,37,0,0,37,0,37,26,26,26,14,28,22,14,28,22,14,28,22,14,28,22,0,37,37,0,26,14,28,22,14,28,22,14,28,22,26,26,14,28,22,26,0,26,14,28,22,14,28,22,26,14,28,22,14,28,22,14,28,22,37,26,26,123,14,28,22,26,92,37,14,28,22,14,28,22,14,28,22,14,28,22,14,28,22,37,0,0,0,0,0,0,44,44,44,44,44,44,44,119,128,130,127,44,129,119,128,130,127,44,129,44,44,119,127,44,119,127,44,119,44,44,44,127,44,44,44,119,128,130,127,44,129,119,128,130,127,44,129,44,119,128,130,127,44,129,44,44,44,44,119,128,130,127,44,129,119,119,128,128,128,130,127,44,129,44,44,44,119,128,130,127,44,129,44,44,119,128,130,127,44,129,130,44,44,44,44,44,127,44,44,44,44,44,44,44,127,127,127,129,129,129,129,129,129,119,44,44,44,44,119,127,44,119,128,130,127,44,129,119,128,130,127,44,129,119,128,130,127,44,129,44,44,119,128,130,127,44,129,130,125,0,0,125,0,125,0,0,125,0,125,0,125,0,125,125,0,0,125,125,0,0,125,15,138,139,140,52,135,136,137,24,59,125,15,138,139,140,52,135,136,137,24,59,125,15,52,135,136,137,24,59,125,15,52,135,136,137,24,59,125,15,24,135,136,137,135,136,137,15,15,125,15,125,15,138,139,140,52,135,136,137,24,59,125,15,138,139,140,52,135,136,137,24,59,125,15,138,139,140,52,135,136,137,24,59,125,52,15,52,135,136,137,24,59,125,125,125,52,59,15,138,139,140,52,135,136,137,24,59,125,15,15,15,15,15,138,139,140,52,135,136,137,24,59,59,125,15,52,24,59,125,15,52,59,15,135,136,137,59,15,138,139,140,52,135,136,137,24,59,125,24,15,138,139,140,52,135,136,137,24,59,125,52,125,125,125,15,15,15,24,59,15,125,15,125,15,135,136,137,135,136,137,0,125,125,125,15,52,135,136,137,24,59,125,138,139,140,15,15,15,15,138,139,140,52,135,136,137,24,59,125,15,138,139,140,52,135,136,137,24,59,125,15,138,139,140,52,135,136,137,24,59,125,15,138,139,140,52,135,136,137,24,59,125,0,0,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,143,133,133,133,133,133,11,144,11,0,11,11,11,144,11,0,11,144,144,11,144,11,144,11,144,11,144,11,144,11,11,144,144,11,144,11,144,11,144,11,11,144,11,144,11,144,11,144,11,144,154,0,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,0,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,0,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134],"f":"````````````````````{{{d{{b{c}}}}{b{c}}}e{}{}}{{{b{{d{c}}}}{b{c}}}e{}{}}{{{b{{f{c}}}}c}eh{}}{{{b{c}}{b{{d{c}}}}}g{{l{d}{{j{}}}}}{}{}}{{{b{{f{c}}}}{b{c}}}eh{}}{{{b{{d{{f{c}}}}}}c}eh{}}{{{b{c}}{d{{b{c}}}}}g{{l{d}{{j{}}}}}{}{}}{{{b{e}}{b{e}}}g{}{{l{}{{j{c}}}}}{}}{{{d{{b{c}}}}{d{{b{c}}}}}e{}{}}{{{b{{d{{f{c}}}}}}{b{c}}}eh{}}{{{b{c}}g}{{b{e}}}{}{}{{n{c}{{j{{b{e}}}}}}}}{{{d{A`{b{c}}}}}{{b{{d{A`c}}}}}{}}{{{d{{b{c}}}}}{{b{{d{c}}}}}{}}{{{d{{b{c}}}}e}Ab{}{{n{{d{c}}}{{j{Ad}}}}}}{{{b{c}}}{{Ah{cAf}}}{}}{{{d{A`{Aj{c}}}}g{An{Al}}B`k}{{Ah{{Bb{ic}}Af}}}h{{Bf{Bd}}}{{Bh{}{{j{e}}}}}{}{{Bj{}{{j{{b{i}}}}}}}}{{{d{A`{Aj{c}}}}g{An{Al}}B`i}{{Ah{{Bb{ic}}Af}}}h{{Bf{Bd}}}{{Bh{}{{j{e}}}}}{}}{{{d{A`{Aj{c}}}}g{An{Bl}}B`{An{Al}}B`}{{Ah{{Bb{cc}}Af}}}h{{Bf{Bd}}}{{Bh{}{{j{e}}}}}}{{{d{A`Bn}}{d{Bh}}C`B`{d{A`Bj}}}{{Ah{AbAf}}}}{{{d{A`{Cb{ce}}}}{d{Bh}}C`B`{d{A`Bj}}}{{Ah{AbAf}}}h{{Cd{c}}}}{{{d{A`{Cf{c}}}}gC`B`k}{{Ah{AbAf}}}h{{Bf{Bd}}}{{Bh{}{{j{e}}}}}{{Bf{{f{c}}}}}{{Bj{}{{j{{b{i}}}}}}}}{{{d{A`{Aj{c}}}}g{An{Ch}}B`k}{{Ah{{Bb{ic}}Af}}}h{{Bf{Bd}}}{{Bh{}{{j{e}}}}}{}{{Bj{}{{j{{b{i}}}}}}}}{{{d{A`{Cl{}{{Cj{c}}}}}}im}{{Ah{kAf}}}{{Cl{e}}}h{{Bf{Bd}}}{{Bh{}{{j{g}}}}}{}{{Bj{{Aj{e}}}{{j{{Ah{kAf}}}}}}}}{{{d{A`{Cn{ce}}}}im}{{Ah{kAf}}}h{{Cl{c}}}{{Bf{Bd}}}{{Bh{}{{j{g}}}}}{}{{Bj{{Aj{c}}}{{j{{Ah{kAf}}}}}}}}{{{d{A`{Cl{}{{Cj{c}}}}}}ik}{{Ah{AbAf}}}{{Cl{e}}}h{{Bf{Bd}}}{{Bh{}{{j{g}}}}}{{Bj{{Cf{e}}}{{j{{Ah{AbAf}}}}}}}}{{{d{A`{Cn{ce}}}}ik}{{Ah{AbAf}}}h{{Cl{c}}}{{Bf{Bd}}}{{Bh{}{{j{g}}}}}{{Bj{{Cf{c}}}{{j{{Ah{AbAf}}}}}}}}{{{d{c}}}{{d{e}}}{}{}}000000000{{{d{A`c}}}{{d{A`e}}}{}{}}000000000{{{d{A`{D`{ce}}}}Db{d{{Dd{B`c}}}}}{{Ah{{Df{{Dh{{Df{c}}}}}}Af}}}h{{Dj{c}}}}{{{d{{Bb{ce}}}}}Dl{}h}{{{d{{b{c}}}}}{{b{c}}}Dn}{{{d{E`}}}E`}{{{d{Eb}}}Eb}{{{d{Dl}}}Dl}{{{d{{Bb{ce}}}}}{{Bb{ce}}}Dn{Dnh}}{{{d{c}}{d{A`e}}}Ab{}{}}0000{{{b{{d{A`c}}}}}{{b{c}}}Dn}{{{b{{d{c}}}}}{{b{c}}}Dn}`{{Ed{d{e}}Ad}{{Ah{{Ej{{Ef{c}}{Eh{c}}}}Af}}}h{{Dj{c}}}}{{{d{{F`{}{{El{c}}{En{e}}}}}}}{{d{c}}}{FbDn}{FbDn}}{{{d{A`{Aj{c}}}}Dle}{{Ah{AbAf}}}h{{Bf{{f{c}}}}}}{{{d{A`{Aj{c}}}}DlDl}{{Ah{AbAf}}}h}{{{d{A`{Cl{}{{Cj{c}}}}}}Dl{An{Bl}}B`}{{Ah{AbAf}}}{{Cl{e}}}h}{{{d{A`{Cn{ce}}}}Dl{An{Bl}}B`}{{Ah{AbAf}}}h{{Cl{c}}}}{{{b{{d{A`c}}}}}{{b{c}}}Fd}{{{b{{d{c}}}}}{{b{c}}}Fd}{{{d{{Bb{ce}}}}i{d{A`{Aj{e}}}}{An{Al}}B`}{{Ah{{Bb{ce}}Af}}}Dnh{{Bf{Bd}}}{{Bh{}{{j{g}}}}}}{{{d{{b{e}}}}}{{b{{f{c}}}}}h{{Ff{{f{c}}}}}}{{}{{b{c}}}{}}`{B`{{d{c}}}{}}00{{{d{E`}}}{{d{c}}}{}}11{{{d{Eb}}}{{d{c}}}{}}22222{B`{{d{A`c}}}{}}0000000005{B`Ab}00000000{{{d{A`{Cn{ce}}}}}Abh{{Cl{c}}}}1{{{d{A`{Aj{c}}}}g{d{Fh}}B`}{{Ah{AbAf}}}h{{Bf{Bd}}}{{Bh{}{{j{e}}}}}}{{{d{Eb}}{d{Eb}}}Ad}{{{d{{b{c}}}}e}{{Ah{AbAf}}}{}{{n{{d{c}}}{{j{Ad}}}}}}{{{b{{f{c}}}}}{{b{c}}}h}{{{Bb{{f{c}}c}}}{{Bb{cc}}}h}`{{{d{{Cb{ce}}}}{d{A`Fj}}}Flh{{Cd{c}}}}{{{d{{b{c}}}}{d{A`Fj}}}FlFb}{{{d{{D`{ce}}}}{d{A`Fj}}}Fl{Fbh}{Fb{Dj{c}}}}{{{d{E`}}{d{A`Fj}}}Fl}{{{d{Eb}}{d{A`Fj}}}Fl}{{{d{Dl}}{d{A`Fj}}}Fl}{{{d{{Bb{ce}}}}{d{A`Fj}}}FlFb{Fbh}}{{{d{{Aj{c}}}}{d{A`Fj}}}Fl{Fbh}}{{{d{{Cf{c}}}}{d{A`Fj}}}Fl{Fbh}}{{{d{{Cn{ce}}}}{d{A`Fj}}}Fl{Fbh}{Fb{Cl{c}}}}{cc{}}0{{{b{c}}}{{b{{f{c}}}}}h}1{B`E`}2{B`Eb}333{{{d{A`Fn}}}{{Aj{c}}}h}44{{{d{A`Bn}}}{{Cf{c}}}h}5{e{{b{g}}}{}{{Gb{}{{G`{{b{c}}}}}}}{{Gd{c}}}}{{{d{{Cl{}{{Cj{c}}}}}}Gf}{{b{e}}}{{Cl{e}}}h}{{{d{{Cn{ce}}}}Gf}{{b{c}}}h{{Cl{c}}}}{{{d{A`{Cl{}{{Cj{c}}}}}}}{{d{A`c}}}{{Cl{e}}}h}{{{d{A`{Cn{ce}}}}}{{d{A`g}}}h{{Cl{c}}}{}}{{}B`}000000000{{{d{A`{Aj{c}}}}{An{Bl}}B`}{{Ah{{b{c}}Af}}}h}{ce{}{}}000000000{{{b{e}}}{{b{{f{c}}}}}h{{Bf{{f{c}}}}}}{{{d{{b{e}}}}}{{b{{f{c}}}}}h{{Ff{{f{c}}}}}}{c{{b{c}}}{}}`{{{d{{F`{}{{El{c}}{En{e}}}}}}}{{d{e}}}{FbDn}{FbDn}}{{{b{c}}g}{{b{e}}}{}{}{{n{c}{{j{e}}}}}}{{{b{{d{{f{c}}}}}}c}eh{}}{{{b{e}}{b{e}}}g{}{{Gh{}{{j{c}}}}}{}}{{{b{{f{c}}}}{b{c}}}eh{}}{{{b{{f{c}}}}c}eh{}}{{{d{{b{c}}}}{d{{b{c}}}}}e{}{}}{{{d{{b{c}}}}{b{c}}}e{}{}}{{{b{{d{{f{c}}}}}}{b{c}}}eh{}}{{{b{c}}{b{{d{c}}}}}g{{Gh{d}{{j{}}}}}{}{}}{{{b{c}}{d{{b{c}}}}}g{{Gh{d}{{j{}}}}}{}{}}{{{b{{d{c}}}}{b{c}}}e{}{}}{{{d{A`{Aj{c}}}}gi}Abh{{Bf{Bd}}}{{Bh{}{{j{e}}}}}{{Bf{{An{Gj}}}}}}{{{d{A`{Cl{}{{Cj{c}}}}}}i}{{Cn{ec}}}{{Cl{e}}}h{{Bf{Bd}}}{{n{}{{j{g}}}}}}{{{b{c}}}eGl{}}{{{d{A`e}}{d{{Gn{C`}}}}}{{Cb{ce}}}h{{Cd{c}}}}{{Ed{d{e}}d{d{{Eh{c}}}}{d{{Gn{{d{{Gn{c}}}}}}}}}{{D`{ce}}}h{{Dj{c}}}}{{{d{A`{Cl{}{{Cj{c}}}}}}{Dh{Bd}}}Ab{{Cl{e}}}h}{{{d{A`{Cn{ce}}}}{Dh{Bd}}}Abh{{Cl{c}}}}{{{d{A`{Cl{}{{Cj{c}}}}}}i}Ab{{Cl{e}}}h{{Bf{Bd}}}{{n{}{{j{g}}}}}}{{{d{A`{Cn{ce}}}}i}Abh{{Cl{c}}}{{Bf{Bd}}}{{n{}{{j{g}}}}}}``{{{d{{b{e}}}}}{{b{{f{c}}}}}h{{Ff{{f{c}}}}}}{{{b{e}}{b{e}}}g{}{{H`{}{{j{c}}}}}{}}?{{{b{{d{{f{c}}}}}}c}eh{}}{{{b{{f{c}}}}{b{c}}}eh{}}{{{b{c}}{b{{d{c}}}}}g{{H`{d}{{j{}}}}}{}{}}{{{d{{b{c}}}}{d{{b{c}}}}}e{}{}}?{{{b{{f{c}}}}c}eh{}}{{{b{c}}{d{{b{c}}}}}g{{H`{d}{{j{}}}}}{}{}}{{{b{{d{{f{c}}}}}}{b{c}}}eh{}}{{{d{{b{c}}}}}{{b{{f{e}}}}}{}h}{{{d{c}}}e{}{}}0000{{{b{{Hb{c}}}}}{{Hb{{b{c}}}}}Fd}{{{b{e}}B`}{{Df{{b{c}}}}}{}{{Gb{}{{G`{c}}}}}}{c{{Ah{e}}}{}{}}0000000000000000000{{{d{c}}}Hd{}}000000000{{}{{b{c}}}{}}{{{b{{Ej{ce}}}}}{{Ej{{b{c}}{b{e}}}}}{}{}}{{{d{{Bb{ce}}}}}{{b{{d{c}}}}}{}h}{{{d{{Bb{ce}}}}}{{b{{f{e}}}}}{}h}{ce{}{}}000000000{{{b{c}}{b{e}}}{{b{{Ej{ce}}}}}{}{}}``````{{{d{A`{Hf{ce}}}}im}{{Ah{kAf}}}h{{Cd{c}}Hh}{{Bf{Bd}}}{{Bh{}{{j{g}}}}}{}{{Bj{{Aj{c}}}{{j{{Ah{kAf}}}}}}}}{{{d{A`{Hf{ce}}}}ik}{{Ah{AbAf}}}h{{Cd{c}}Hh}{{Bf{Bd}}}{{Bh{}{{j{g}}}}}{{Bj{{Cf{c}}}{{j{{Ah{AbAf}}}}}}}}{{{d{c}}}{{d{e}}}{}{}}0{{{d{A`c}}}{{d{A`e}}}{}{}}0{{{d{A`{Hf{ce}}}}Dl{An{Bl}}B`}{{Ah{AbAf}}}h{{Cd{c}}Hh}}{B`{{d{c}}}{}}0{B`{{d{A`c}}}{}}0{B`Ab}0{{{d{{Hf{ce}}}}{d{A`Fj}}}Flh{{Cd{c}}}}{{{d{Hj}}{d{A`Fj}}}Fl}{cc{}}0{{{d{{Hf{ce}}}}Gf}{{b{c}}}h{{Cd{c}}Hh}}{{{d{A`{Hf{ce}}}}}{{d{A`g}}}h{{Cd{c}}Hh}{}}{{}B`}0??{{{d{A`e}}{Df{{An{Ch}}}}}{{Ah{{Hf{ce}}Af}}}h{{Cd{c}}}}{{{d{A`{Hf{ce}}}}{Dh{Bd}}}Abh{{Cd{c}}Hh}}{{{d{A`{Hf{ce}}}}i}Abh{{Cd{c}}Hh}{{Bf{Bd}}}{{n{}{{j{g}}}}}}{{{d{A`e}}{d{g}}{Df{{An{Ch}}}}}{{Ah{AbAf}}}h{{Cd{c}}Hh}{{Dj{c}}}}{c{{Ah{e}}}{}{}}000{{{d{c}}}Hd{}}0{ce{}{}}0````{{{d{A`{Hl{ce}}}}im}{{Ah{kAf}}}h{{Cd{c}}Hh}{{Bf{Bd}}}{{Bh{}{{j{g}}}}}{}{{Bj{{Aj{c}}}{{j{{Ah{kAf}}}}}}}}{{{d{A`{Hl{ce}}}}ik}{{Ah{AbAf}}}h{{Cd{c}}Hh}{{Bf{Bd}}}{{Bh{}{{j{g}}}}}{{Bj{{Cf{c}}}{{j{{Ah{AbAf}}}}}}}}{{{d{c}}}{{d{e}}}{}{}}000{{{d{A`c}}}{{d{A`e}}}{}{}}000{{{d{A`{Hl{ce}}}}Dl{An{Bl}}B`}{{Ah{AbAf}}}h{{Cd{c}}Hh}}{B`{{d{c}}}{}}000{B`{{d{A`c}}}{}}000{B`Ab}000{{{d{Hn}}{d{A`Fj}}}Fl}{{{d{{Hl{ce}}}}{d{A`Fj}}}Fl{Fbh}{Fb{Cd{c}}}}{{{d{I`}}{d{A`Fj}}}Fl}{{{d{{Ib{ce}}}}{d{A`Fj}}}Fl{Fbh}{Fb{Cd{c}}}}{cc{}}000{{{d{{Hl{ce}}}}Gf}{{b{c}}}h{{Cd{c}}Hh}}{{{d{A`{Hl{ce}}}}}{{d{A`g}}}h{{Cd{c}}Hh}{}}{{}B`}000{ce{}{}}000{{{d{A`{Hl{ce}}}}{Dh{Bd}}}Abh{{Cd{c}}Hh}}{{{d{A`{Hl{ce}}}}i}Abh{{Cd{c}}Hh}{{Bf{Bd}}}{{n{}{{j{g}}}}}}`{{{d{A`e}}{d{g}}{Df{{An{Ch}}}}}{{Ah{AbAf}}}h{{Cd{c}}Hh}{{Dj{c}}}}{c{{Ah{e}}}{}{}}0000000{{{d{c}}}Hd{}}0005555```````{{{d{A`Fn}}{d{Bh}}{An{Al}}B`{d{A`Bj}}}{{Ah{DlAf}}}}{{{d{A`Id}}{d{Bh}}{An{Al}}B`{d{A`Bj}}}{{Ah{DlAf}}}}{{{d{A`Fn}}{d{Bh}}{An{Al}}B`{f{c}}}{{Ah{DlAf}}}h}{{{d{A`Id}}{d{Bh}}{An{Al}}B`{f{c}}}{{Ah{DlAf}}}h}{{{d{A`Fn}}{d{Bh}}{An{Bl}}B`{An{Al}}B`}{{Ah{{Ej{Dl{b{c}}}}Af}}}h}{{{d{A`Id}}{d{Bh}}{An{Bl}}B`{An{Al}}B`}{{Ah{{Ej{Dl{b{c}}}}Af}}}h}{{{d{A`Bn}}{d{Bh}}C`B`{d{A`Bj}}}{{Ah{AbAf}}}}{{{d{A`Fn}}{d{Bh}}{An{Ch}}B`{d{A`Bj}}}{{Ah{DlAf}}}}{{{d{A`Id}}{d{Bh}}{An{Ch}}B`{d{A`Bj}}}{{Ah{DlAf}}}}{{{d{c}}}{{d{e}}}{}{}}0{{{d{A`c}}}{{d{A`e}}}{}{}}0{{{d{Id}}}Id}{{{d{If}}}If}{{{d{c}}{d{A`e}}}Ab{}{}}0{{{d{If}}{d{If}}}Ih}{{{d{Id}}}{{d{{Ij{If}}}}}}{{{d{A`Fn}}Dl{f{c}}}{{Ah{AbAf}}}h}{{{d{A`Id}}Dl{f{c}}}{{Ah{AbAf}}}h}{{{d{A`Fn}}DlDl}{{Ah{AbAf}}}}{{{d{A`Id}}DlDl}{{Ah{AbAf}}}}{B`{{d{c}}}{}}0{B`{{d{A`c}}}{}}0{B`Ab}0{{{d{A`Fn}}{d{Bh}}{d{Fh}}B`}{{Ah{AbAf}}}}{{{d{A`Id}}{d{Bh}}{d{Fh}}B`}{{Ah{AbAf}}}}{{{d{If}}{d{If}}}Ad}{{{d{Id}}{d{A`Fj}}}Fl}{{{d{If}}{d{A`Fj}}}Fl}{cc{}}{FhIf}{{{An{Gj}}}If}2{{{d{If}}{d{A`c}}}AbIl}{{}B`}0{{{d{A`Fn}}{An{Bl}}B`}{{Ah{{b{c}}Af}}}h}{{{d{A`Id}}{An{Bl}}B`}{{Ah{{b{c}}Af}}}h}{ce{}{}}0{{{d{A`Fn}}{d{Bh}}{An{Gj}}}Ab}{{{d{A`Id}}{d{Bh}}{An{Gj}}}Ab}{E`Id}{{{d{If}}{d{If}}}{{Dh{Ih}}}}{{{d{Id}}}E`}{{{d{Id}}}B`}{{{d{c}}}e{}{}}0{c{{Ah{e}}}{}{}}000{{{d{c}}}Hd{}}099```````````````````````{{{d{{In{c}}}}}{{d{{Df{{Df{{J`{c}}}}}}}}}{JbJd}}{{{d{{In{c}}}}{An{Al}}}{{d{{Gn{{J`{c}}}}}}}{JbJd}}{{{d{A`{In{c}}}}g{An{Gj}}}Abh{{Bf{Bd}}}{{n{}{{j{e}}}}}}{{{d{{In{c}}}}}Ab{JbJd}}{{{d{{In{c}}}}ee}Ab{JbJd}{Dn{Jf{}{{G`{B`}}}}}}{{{d{A`{In{c}}}}g{An{Al}}B`k}{{Ah{AbAf}}}h{{Bf{Bd}}}{{n{}{{j{e}}}}}{{Bf{{f{c}}}}}{{n{}{{j{{b{i}}}}}}}}{{{d{A`{In{c}}}}g{An{Ch}}B`k}{{Ah{AbAf}}}h{{Bf{Bd}}}{{n{}{{j{e}}}}}{{Bf{{f{c}}}}}{{n{}{{j{{b{i}}}}}}}}{{{d{c}}}{{d{e}}}{}{}}0000000{{{d{A`c}}}{{d{A`e}}}{}{}}0000000{{{d{e}}}Bdh{{Dj{c}}}}{{{d{Jh}}}Jh}{{{d{{J`{c}}}}}{{J`{c}}}{Dnh}}{{{d{{Jj{c}}}}}{{Jj{c}}}{Dnh}}{{{d{c}}{d{A`e}}}Ab{}{}}00{{}Jl}{{{d{A`{In{c}}}}{An{Gj}}B`{An{Gj}}B`}{{Ah{AbAf}}}h}``{{{d{{In{c}}}}}{{d{{Eh{c}}}}}{JbJd}}{{}Jn}{B`{{d{c}}}{}}0000000{B`{{d{A`c}}}{}}0000000{B`Ab}0000000{{{d{K`}}{d{{In{c}}}}}Abh}{{{d{A`{In{c}}}}g{d{Fh}}B`}{{Ah{AbAf}}}h{{Bf{Bd}}}{{n{}{{j{e}}}}}}{{{d{A`{In{c}}}}g}Abh{{Bf{Bd}}}{{n{}{{j{e}}}}}}{{{d{Jh}}{d{Jh}}}Ad}{{{d{K`}}{d{K`}}}Ad}{{{d{{J`{c}}}}{d{{J`{c}}}}}Ad{Kbh}}{{{d{{Jj{c}}}}{d{{Jj{c}}}}}Ad{Kbh}}{{{d{A`{In{c}}}}}Abh}{{{d{A`{In{c}}}}{An{Ch}}B`{b{{f{c}}}}}{{Ah{AbAf}}}h}{{{d{{In{c}}}}}{{d{{Df{{Df{{J`{c}}}}}}}}}{JbJd}}{{{d{{In{c}}}}{An{Ch}}}{{d{{Gn{{J`{c}}}}}}}{JbJd}}{{{d{Jh}}{d{A`Fj}}}Fl}0{{{d{K`}}{d{A`Fj}}}Fl}0{{{d{Jl}}{d{A`Fj}}}Fl}{{{d{Jl}}{d{A`Fj}}}{{Ah{AbKd}}}}{{{d{{Kf{c}}}}{d{A`Fj}}}Fl{FbKh}}{{{d{Jn}}{d{A`Fj}}}Fl}{{{d{{J`{c}}}}{d{A`Fj}}}Fl{Fbh}}{{{d{{In{c}}}}{d{A`Fj}}}Fl{Fbh}}{{{d{{Jj{c}}}}{d{A`Fj}}}Fl{Fbh}}{cc{}}0000000{{{d{{In{c}}}}Gf}{{b{c}}}h}{{}B`}0000000{{{d{{In{c}}}}}{{d{{Df{{Df{{Jj{c}}}}}}}}}{JbJd}}{ce{}{}}0000000{{JnAd}Jn}`{{{d{A`{In{c}}}}{Dh{Bd}}}Abh}{{{d{A`{In{c}}}}g}Abh{{Bf{Bd}}}{{n{}{{j{e}}}}}}{{{d{Jl}}}Bd}{{{d{{In{c}}}}{An{Bl}}B`}{{Ah{{b{c}}Af}}}h}{{JnEd{d{e}}{d{{Kl{gKj}}}}}{{Ah{AbKn}}}h{{Dj{c}}}L`}{{Ed{d{e}}{Df{{Df{c}}}}}{{Ah{{In{c}}Af}}}{JbJd}{{Dj{c}}}}{{{d{{In{c}}}}}{{d{{Df{{Df{Ad}}}}}}}{JbJd}}77{{{d{A`e}}{d{g}}{Df{{An{Ch}}}}}{{Ah{AbAf}}}h{{Cd{c}}Hh}{{Dj{c}}}}{{{d{c}}}e{}{}}00{{{d{c}}}Bd{}}00{c{{Ah{e}}}{}{}}000000000000000{{{d{c}}}Hd{}}0000000{{{d{{In{c}}}}}{{d{{Lb{B`}}}}}{JbJd}}{{{d{{Jj{c}}}}}ch}{{{d{{In{c}}}}}{{Ah{Ab{Df{K`}}}}}{JbJd}}{{{d{{In{c}}}}ee}{{Ah{Ab{Df{K`}}}}}{JbJd}{Dn{Jf{}{{G`{B`}}}}}}{{Jn{Lb{B`}}}Jn}0{ce{}{}}0000000````````````````````````````{{{d{c}}}{{d{e}}}{}{}}00{{{d{A`c}}}{{d{A`e}}}{}{}}00{B`{{d{c}}}{}}00{B`{{d{A`c}}}{}}00{B`Ab}00{{{d{{Ld{ce}}}}{d{A`Fj}}}Fl{FbLf}{FbDj}}{{{d{{Lh{c}}}}{d{A`Fj}}}Fl{FbLf}}{{{d{{Lj{c}}}}{d{A`Fj}}}Fl{FbLf}}{cc{}}00{{}B`}00:::{{{d{{Ld{ce}}}}}{{Lh{c}}}LfDj}{{Ed{d{c}}}{{Ld{ec}}}DjLf}{{{d{{Ld{ce}}}}B`}{{Lj{c}}}LfDj}{c{{Ah{e}}}{}{}}00000{{{d{c}}}Hd{}}00???````````````>>>>>>>======={{{d{Ll}}}Ll}{{{d{Ln}}}Ln}{{{d{M`}}}M`}{{{d{Mb}}}Mb}{{{d{c}}{d{A`e}}}Ab{}{}}000{{{d{Ll}}{d{Ll}}}Ih}`{B`{{d{c}}}{}}000000{B`{{d{A`c}}}{}}000000{c{{Ah{M`}}}Md}{c{{Ah{Mf}}}Md}{B`Ab}000000{{{d{Mh}}{d{Mh}}}Ad}{{{d{Ll}}{d{Ll}}}Ad}`{{{d{Mh}}{d{A`Fj}}}Fl}{{{d{Mj}}{d{A`Fj}}}Fl}{{{d{Ll}}{d{A`Fj}}}Fl}{{{d{Ln}}{d{A`Fj}}}Fl}{{{d{M`}}{d{A`Fj}}}Fl}{{{d{Mb}}{d{A`Fj}}}Fl}{{{d{Mf}}{d{A`Fj}}}Fl}{cc{}}000000{{Ed{d{e}}{Df{{Df{c}}}}}Mj{JdhJb}{{Dj{c}}}}{{Ed{d{e}}{Df{{Df{c}}}}Mh}Mf{JdhJb}{{Dj{c}}}}{{{d{Ml}}}{{Ah{Llc}}}{}}`{{}B`}000000`{ce{}{}}000000{{{d{Mj}}Mh}Mf}``````{{{d{Ll}}{d{Ll}}}{{Dh{Ih}}}}````{{{d{M`}}c}AhMn}{{{d{Mf}}c}AhMn}```{{{d{c}}}e{}{}}000{c{{Ah{e}}}{}{}}0000000000000{{{d{c}}}Hd{}}0000007777777`````{{{d{c}}}{{d{e}}}{}{}}0000{{{d{A`c}}}{{d{A`e}}}{}{}}0000{{{d{N`}}}N`}{{{d{Nb}}}Nb}{{{d{Nd}}}Nd}{{{d{Nf}}}Nf}{{{d{c}}{d{A`e}}}Ab{}{}}000{{{d{N`}}{d{N`}}}Ih}{{{d{Nh}}{d{Nh}}}Ih}`{B`{{d{c}}}{}}0000{B`{{d{A`c}}}{}}0000{B`Ab}0000{{{d{N`}}{d{N`}}}Ad}{{{d{Nh}}{d{Nh}}}Ad}{{{d{Nb}}{d{Nb}}}Ad}{{{d{Nd}}{d{Nd}}}Ad}{{{d{Nf}}{d{Nf}}}Ad}{{{d{N`}}{d{A`Fj}}}{{Ah{AbKd}}}}0{{{d{Nh}}{d{A`Fj}}}Fl}0{{{d{Nb}}{d{A`Fj}}}Fl}0{{{d{Nd}}{d{A`Fj}}}Fl}0{{{d{Nf}}{d{A`Fj}}}Fl}0{{{An{Gj}}}N`}{cc{}}{{{Ej{cN`Nj}}}Nh{{Nl{Ml}}}}{NnNh}{{{Ej{N`Nj}}}Nh}3{{{Ej{B`c}}}Nb{{Nl{Ml}}}}4{{{Ej{NbB`c}}}Nd{{Nl{Ml}}}}5{{{Ej{B`{d{Ml}}}}}Nf}6{{{Ej{B`Bd{Dd{N`Bd}}}}}Nf}{{{Ej{B`{d{Ml}}{Dd{N`Bd}}}}}Nf}{{{Ej{B`Bd}}}Nf}{{{d{N`}}{d{A`c}}}AbIl}`{{}B`}0000{ce{}{}}0000{{GjB`}N`}{{{d{N`}}{d{N`}}}{{Dh{Ih}}}}{{{d{Nh}}{d{Nh}}}{{Dh{Ih}}}}{{{d{c}}}e{}{}}000{{{d{c}}}Bd{}}0000{c{{Ah{e}}}{}{}}000000000{{{d{c}}}Hd{}}000077777```````````{{{d{{f{c}}}}{f{c}}}{{f{c}}}h}{{{d{{f{c}}}}{d{{f{c}}}}}{{f{c}}}h}{{{f{c}}c}{{f{c}}}h}{{{f{c}}{f{c}}}{{f{c}}}h}{{{f{c}}{d{{f{c}}}}}{{f{c}}}h}{{{d{{f{c}}}}c}{{f{c}}}h}{{{d{A`{f{c}}}}{d{{f{c}}}}}Abh}{{{d{A`{f{c}}}}{f{c}}}Abh}{{{d{c}}}{{d{e}}}{}{}}{{{d{A`c}}}{{d{A`e}}}{}{}}{{{d{{f{c}}}}}{{f{c}}}Dn}{{{d{c}}{d{A`e}}}Ab{}{}}{{{d{{f{c}}}}}{{f{c}}}h}{{{d{{f{c}}}}}{{Dh{c}}}h}{B`{{d{c}}}{}}{B`{{d{A`c}}}{}}3{B`Ab}{{{d{{f{c}}}}{d{{f{c}}}}}Adh}{{{f{c}}}ch}{{{d{{f{c}}}}{d{A`Fj}}}FlFb}{{{d{c}}}{{f{c}}}h}{cc{}}{c{{f{c}}}h}{{{Ej{cc}}}{{f{c}}}h};{{}B`}{ce{}{}}={{{d{{f{c}}}}}Adh}{{{d{{f{c}}}}c}{{f{c}}}h}{{{f{c}}{d{{f{c}}}}}{{f{c}}}h}{{{f{c}}{f{c}}}{{f{c}}}h}{{{f{c}}c}{{f{c}}}h}{{{d{A`{f{c}}}}{f{c}}}Abh}{{{d{A`{f{c}}}}{d{{f{c}}}}}Abh}{{{f{c}}}eh{}}{{{d{{f{c}}}}}eh{}}{{{d{{f{c}}}}}ch}{{{d{{f{c}}}}}{{f{c}}}h}{{{d{{f{c}}}}{f{c}}}{{f{c}}}h}{{{d{{f{c}}}}{d{{f{c}}}}}{{f{c}}}h}89:;67{{{d{c}}}e{}{}}{c{{Ah{e}}}{}{}}0{{{d{c}}}Hd{}}{ce{}{}}``````````{{{d{A`Cd}}e{An{Gj}}}Ab{{Bf{Bd}}}{{n{}{{j{c}}}}}}{{{d{A`Cd}}e{An{Al}}B`k}{{Ah{AbAf}}}{{Bf{Bd}}}{{n{}{{j{c}}}}}h{{Bf{{f{g}}}}}{{n{}{{j{{b{i}}}}}}}}{{{d{A`Cd}}e{An{Ch}}B`k}{{Ah{AbAf}}}{{Bf{Bd}}}{{n{}{{j{c}}}}}h{{Bf{{f{g}}}}}{{n{}{{j{{b{i}}}}}}}}{{{d{c}}}{{d{e}}}{}{}}00{{{d{A`c}}}{{d{A`e}}}{}{}}00{{{d{Al}}}Al}{{{d{Ch}}}Ch}{{{d{Bl}}}Bl}{{{d{c}}{d{A`e}}}Ab{}{}}00`{{{d{A`{Eh{c}}}}}eh{}}{{{d{A`{Eh{c}}}}e}gh{}{}}`{{{d{A`Cd}}{An{Gj}}B`{An{Gj}}B`}{{Ah{AbAf}}}}{B`{{d{c}}}{}}00{B`{{d{A`c}}}{}}00{B`Ab}00{{{d{A`Cd}}e{d{Fh}}B`}{{Ah{AbAf}}}{{Bf{Bd}}}{{n{}{{j{c}}}}}}{{{d{A`Cd}}e}Ab{{Bf{Bd}}}{{n{}{{j{c}}}}}}{{{d{Al}}{d{Al}}}Ad}{{{d{Ch}}{d{Ch}}}Ad}{{{d{Bl}}{d{Bl}}}Ad}{{{d{A`Cd}}}Ab}`{{{d{A`Cd}}{An{Ch}}B`{b{{f{c}}}}}{{Ah{AbAf}}}h}{{{d{Al}}{d{A`Fj}}}Fl}{{{d{Ch}}{d{A`Fj}}}Fl}{{{d{Bl}}{d{A`Fj}}}Fl}{cc{}}00{{{d{Cd}}Gf}{{b{c}}}h}{{{d{Al}}{d{A`c}}}AbIl}{{{d{Ch}}{d{A`c}}}AbIl}{{{d{Bl}}{d{A`c}}}AbIl}{{}B`}00{ce{}{}}00{{{d{{Dj{}{{El{c}}{O`{e}}{Ob{g}}}}}}}gDnKhOd}{{{d{A`Cd}}{Dh{Bd}}}Ab}{{{d{A`Cd}}e}Ab{{Bf{Bd}}}{{n{}{{j{c}}}}}}{{{d{Of}}B`Oh}{{Oj{c}}}h}{{{d{Al}}B`Oh}{{Oj{c}}}h}{{{d{Ch}}B`Oh}{{Oj{c}}}h}{{{d{Bl}}B`Oh}{{Oj{c}}}h}{{{d{Cd}}{An{Bl}}B`}{{Ah{{b{c}}Af}}}h}{{{d{A`e}}{d{g}}{Df{{An{Ch}}}}}{{Ah{AbAf}}}h{{Cd{c}}Hh}{{Dj{c}}}}{{{d{{Dj{}{{El{c}}{O`{e}}{Ob{g}}}}}}ck}{{Ah{AbAf}}}DnKhOdh{{Cl{i}}}}{{{d{c}}}e{}{}}00{c{{Ah{e}}}{}{}}00000{{{d{c}}}Hd{}}00==={{{d{{Dj{}{{El{c}}{O`{e}}{Ob{g}}}}}}}{{Dj{}{{El{c}}{O`{e}}{Ob{g}}}}}DnKhOd}``````{{{d{A`{Eh{c}}}}}{{An{Al}}}h}{{{d{A`{Eh{c}}}}e}{{An{Al}}}hOl}{{{d{{Eh{c}}}}}{{Df{Db}}}h}{{{d{{Eh{c}}}}}{{d{{Df{{Ej{{An{Al}}Oh}}}}}}}h}{{{d{A`{Eh{c}}}}ei}Abh{{Bf{{An{Gj}}}}}{{Bf{Bd}}}{{Bh{}{{j{g}}}}}}{{{d{A`{Eh{c}}}}C`g}Abh{{Bf{Bd}}}{{Bh{}{{j{e}}}}}}{{{d{{Eh{c}}}}}B`h}{{{d{c}}}{{d{e}}}{}{}}00000{{{d{A`c}}}{{d{A`e}}}{}{}}000006{{{d{A`{Eh{c}}}}e}GfhOl}{{{d{Nn}}}Nn}{{{d{{On{c}}}}}{{On{c}}}{Dnh}}{{{d{{Eh{c}}}}}{{Eh{c}}}{Dnh}}{{{d{c}}{d{A`e}}}Ab{}{}}00`{{{d{A`{Eh{c}}}}}Fhh}{{{Eh{c}}{Df{{Df{Ad}}}}}{{Ej{{Eh{c}}{Df{{Df{c}}}}}}}h}{{{d{{Eh{c}}}}}{{d{{Df{{An{Ch}}}}}}}h}{{{d{{On{c}}}}B`}{{d{Ml}}}h}{{{d{A`{Eh{c}}}}ek}Abh{{Nl{Ml}}}{{Bf{{A@`{c}}}}}{{Gb{}{{G`{g}}}}}{{n{{d{A`{A@b{c}}}}}{{j{i}}}}}}{{}{{Eh{c}}}h}={B`{{d{c}}}{}}00000{B`{{d{A`c}}}{}}000006{B`Ab}00000{{{d{A`{Eh{c}}}}{An{Ch}}}Abh}{{{d{A`{Eh{c}}}}e}Abh{{Bf{{An{Gj}}}}}}{{{d{A`{Eh{c}}}}}{{An{Ch}}}h}{{{d{{Eh{c}}}}}{{d{{Df{{Ej{{An{Ch}}Oh}}}}}}}h}{{{d{Nn}}{d{A`Fj}}}Fl}{{{d{{A@`{c}}}}{d{A`Fj}}}Fl{Fbh}}{{{d{{A@d{ceg}}}}{d{A`Fj}}}Fl{Fbh}{Fb{Bf{{A@`{c}}}}}{Fb{Gb{}{{G`{e}}}}}}{{{d{{On{c}}}}{d{A`Fj}}}Fl{Fbh}}{{{d{{Eh{c}}}}{d{A`Fj}}}Fl{Fbh}}{{{d{{A@b{c}}}}{d{A`Fj}}}Fl{Fbh}}{cc{}}{{{Ej{cOh}}}Nn{{Bf{{An{Gj}}}}}}1{{{Oj{c}}}{{A@`{c}}}h}{{{Ej{c{Oj{e}}}}}{{A@`{e}}}{{Nl{Ml}}}h}3333{{{d{{Eh{c}}}}}{{d{{Df{{On{c}}}}}}}h}{{{d{{Eh{c}}}}}{{d{{Dd{N`Bd}}}}}h}{{{d{{Eh{c}}}}{An{Gj}}Oh}B`h}{{}B`}00000{{{d{A`{Eh{c}}}}}{{An{Bl}}}h}{{{d{{Eh{c}}}}}{{d{{Df{{Ej{{An{Bl}}Oh}}}}}}}h}{ce{}{}}00000{{{A@d{ceg}}}ih{{Bf{{A@`{c}}}}}{{Gb{}{{G`{e}}}}}{}}{{{d{A`{Eh{c}}}}eg}B`h{{Nl{Ml}}}{{n{{d{A`{A@b{c}}}}}{{j{{Df{{Ej{{Oj{c}}C`}}}}}}}}}}{{{d{A`{Eh{c}}}}eg}B`h{{Nl{Ml}}}{{n{{d{A`{A@b{c}}}}}{{j{{Df{{Ej{{Oj{c}}{Oj{c}}}}}}}}}}}}{{{d{A`{Eh{c}}}}}C`h}{{{d{{Eh{c}}}}}{{d{{Df{{A@f{c}}}}}}}h}{{{d{{Eh{c}}}}}B`h}{{{d{{On{c}}}}}{{d{Ml}}}h}11111{{{d{{Eh{c}}}}}{{d{A@h}}}h}{{{d{{Eh{c}}}}}{{`{{Jf{}{{G`{A@j}}}}}}}h}{{{d{{On{c}}}}}{{d{{Gn{{Oj{c}}}}}}}h}{{{d{{On{c}}}}}{{d{{Gn{Nn}}}}}h}{{{d{{On{c}}}}}{{d{{Gn{Fh}}}}}h}{{{d{A`{A@b{c}}}}{An{Al}}Oh}{{Oj{c}}}h}{{{d{A`{A@b{c}}}}eOh}{{Oj{c}}}h{{Bf{{An{Gj}}}}}}{{{d{A`{A@b{c}}}}Gf}{{Oj{c}}}h}{{{d{A`{A@b{c}}}}{An{Ch}}Oh}{{Oj{c}}}h}{{{d{A`{A@b{c}}}}{An{Bl}}Oh}{{Oj{c}}}h}{{{d{A`{A@b{c}}}}Fh}{{Oj{c}}}h}`{{{d{A`{Eh{c}}}}}Fhh}{{{d{A`{Eh{c}}}}B`}Abh}{{{d{A`{Eh{c}}}}eg}B`h{{Nl{Ml}}}{{n{{d{A`{A@b{c}}}}}{{j{{Df{{Ej{{Oj{c}}{Oj{c}}}}}}}}}}}}{{{d{{Eh{c}}}}}{{d{{Df{{A@l{c}}}}}}}h}{{{d{c}}}e{}{}}00{c{{Ah{e}}}{}{}}00000000000{{{d{c}}}Hd{}}00000{{{d{A`{Eh{c}}}}}{{An{Al}}}h}{{{d{A`{Eh{c}}}}e}{{An{Al}}}hOl}{ce{}{}}00000{{{Oj{c}}g}{{A@d{ceg}}}h{{Bf{{A@`{c}}}}}{{Gb{}{{G`{e}}}}}}``````````````````````{{{Oj{c}}{Oj{c}}}{{Oj{c}}}h}{{{d{c}}}{{d{e}}}{}{}}0000000000{{{d{A`c}}}{{d{A`e}}}{}{}}0000000000{{{d{{An{c}}}}}{{An{c}}}{DnOf}}{{{d{Fh}}}Fh}{{{d{A@n}}}A@n}{{{d{AA`}}}AA`}{{{d{AAb}}}AAb}{{{d{C`}}}C`}{{{d{Gf}}}Gf}{{{d{{Oj{c}}}}}{{Oj{c}}}Dn}{{{d{c}}{d{A`e}}}Ab{}{}}0000000{{{d{{An{c}}}}{d{{An{c}}}}}IhOf}{{{d{C`}}{d{C`}}}Ih}{{{d{A@n}}}B`}{{{d{AA`}}}B`}{{{d{AAb}}}B`}```{{{d{{An{c}}}}}{{d{c}}}Of}`{{{d{{Oj{c}}}}}B`h}{{{d{{An{c}}}}}{{Oj{e}}}Ofh}1{B`{{d{c}}}{}}0000000000{B`{{d{A`c}}}{}}0000000000{B`Ab}0000000000{{{d{Fh}}{d{A`{Aj{c}}}}B`}{{Ah{AbAf}}}h}{{{d{{An{c}}}}{d{{An{c}}}}}Ad{KbOf}}{{{d{Fh}}{d{Fh}}}Ad}{{{d{A@n}}{d{A@n}}}Ad}{{{d{AA`}}{d{AA`}}}Ad}{{{d{AAb}}{d{AAb}}}Ad}{{{d{C`}}{d{C`}}}Ad}{{{d{Gf}}{d{Gf}}}Ad}{{{d{{Oj{c}}}}{d{{Oj{c}}}}}AdKb}{{{d{{Oj{c}}}}{d{g}}{d{i}}{d{k}}{d{m}}{d{o}}{d{Aa}}{d{Ac}}{d{Ae}}{d{Ag}}{d{Ai}}}eh{}{{Bh{c}{{j{e}}}}}{{Bh{Fh}{{j{e}}}}}{{Bh{A@n}{{j{e}}}}}{{Bh{AA`}{{j{e}}}}}{{Bh{AAb}{{j{e}}}}}{{Bh{Gf}{{j{e}}}}}{{Bh{e}{{j{e}}}}}{{Bh{ee}{{j{e}}}}}{{Bh{ee}{{j{e}}}}}{{Bh{ec}{{j{e}}}}}}{{{d{{Oj{c}}}}{d{g}}{d{i}}{d{k}}{d{m}}{d{o}}{d{Aa}}{d{Ac}}{d{Ae}}{d{Ag}}{d{Ai}}{d{e}}}ehKb{{Bh{c}{{j{e}}}}}{{Bh{Fh}{{j{e}}}}}{{Bh{A@n}{{j{e}}}}}{{Bh{AA`}{{j{e}}}}}{{Bh{AAb}{{j{e}}}}}{{Bh{Gf}{{j{e}}}}}{{Bh{e}{{j{e}}}}}{{Bh{ee}{{j{e}}}}}{{Bh{ee}{{j{e}}}}}{{Bh{ec}{{j{e}}}}}}{{{d{Fh}}}{{Oj{c}}}h}{{{d{Gf}}}{{Oj{c}}}h}{{{d{{An{c}}}}{d{A`Fj}}}Fl{FbOf}}{{{d{AAd}}{d{A`Fj}}}Fl}{{{d{AAf}}{d{A`Fj}}}Fl}{{{d{AAh}}{d{A`Fj}}}Fl}{{{d{Fh}}{d{A`Fj}}}Fl}{{{d{A@n}}{d{A`Fj}}}Fl}{{{d{AA`}}{d{A`Fj}}}Fl}{{{d{AAb}}{d{A`Fj}}}Fl}{{{d{C`}}{d{A`Fj}}}Fl}{{{d{Gf}}{d{A`Fj}}}Fl}{{{d{{Oj{c}}}}{d{A`Fj}}}FlFb}{{{An{Ch}}}{{An{Gj}}}}{{{An{Bl}}}{{An{Gj}}}}{{{An{Al}}}{{An{Gj}}}}{N`{{An{Gj}}}}{cc{}}000000000{AAjGf}1{{{d{{An{c}}}}{d{A`e}}}Ab{AAlOf}Il}{{{d{Fh}}{d{A`c}}}AbIl}{{{d{C`}}{d{A`c}}}AbIl}{{{d{Gf}}{d{A`c}}}AbIl}{{{d{{Oj{c}}}}}Bdh}{{{d{{An{c}}}}}B`Of}{{{d{Fh}}}B`}{{{d{Gf}}}B`}`````{{}B`}0000000000{{{d{C`}}}{{An{Ch}}}}{ce{}{}}0000000000{{{d{Fh}}}Ad}{{{Oj{c}}{Oj{c}}}{{Oj{c}}}h}{{{Oj{c}}c}{{Oj{c}}}h}{{{Oj{c}}}eh{}}{{B`c}{{An{c}}}Of}{{{d{{An{c}}}}}{{Oj{e}}}Ofh}{{{d{{An{c}}}}{d{{An{c}}}}}{{Dh{Ih}}}Of}{{{d{C`}}{d{C`}}}{{Dh{Ih}}}}{{{d{Gf}}}Db}3{e{{Oj{c}}}h{{Jf{}{{G`{{Oj{c}}}}}}}}{{{d{{An{c}}}}Oh}{{Oj{e}}}Ofh}{{{d{A`{Oj{c}}}}{d{A`{A@b{c}}}}}Abh}{{{d{{An{c}}}}Nj}{{Oj{e}}}Ofh}{{{d{A@n}}}Oh}{{{d{AA`}}}Oh}{{{d{AAb}}}Oh}````{{{Oj{c}}}{{Oj{c}}}h}?7{{{d{c}}}e{}{}}0000000{AAdA@j}{AAfA@j}{AAhA@j}{{{An{Gj}}}{{Ah{{An{Ch}}c}}}{}}{c{{Ah{e}}}{}{}}{{{An{Gj}}}{{Ah{{An{Bl}}c}}}{}}{{{An{Gj}}}{{Ah{{An{Al}}c}}}{}}222222222222222222222{{{d{c}}}Hd{}}0000000000{ce{}{}}0000000000``{{{d{c}}}{{d{e}}}{}{}}{{{d{A`c}}}{{d{A`e}}}{}{}}{{{d{A@j}}}A@j}{{{d{c}}{d{A`e}}}Ab{}{}}{{{d{A@j}}{d{A@j}}}Ih}{B`{{d{c}}}{}}{B`{{d{A`c}}}{}}{B`Ab}{{{d{A@j}}{d{A@j}}}Ad}{{{d{A@j}}{d{A`Fj}}}Fl}{cc{}}{{{d{A@j}}{d{A`c}}}AbIl}{{}B`}={{{d{A@j}}{d{A@j}}}{{Dh{Ih}}}}{{{d{A@j}}}{{Dh{A@j}}}}{{{d{c}}}e{}{}}{AAnA@j}{A@jA@j}{c{{Ah{e}}}{}{}}0{{{d{c}}}Hd{}}{ce{}{}}`````````````{{{d{c}}}{{d{e}}}{}{}}0{{{d{A`c}}}{{d{A`e}}}{}{}}0{B`{{d{c}}}{}}0{B`{{d{A`c}}}{}}0{B`Ab}0{{{d{Af}}{d{A`Fj}}}Fl}0{{{d{AB`}}{d{A`Fj}}}Fl}0{cc{}}0{{}B`}099{EdAf}{{{d{c}}}Bd{}}0====<<;;``:9{{{d{{A@f{c}}}}}{{A@f{c}}}{Dnh}}{{{d{c}}{d{A`e}}}Ab{}{}}:98{{{d{{A@f{c}}}}{d{A`Fj}}}Flh}65{{{d{{A@f{c}}}}}{{d{{Df{{Oj{c}}}}}}}h}?{{{d{{A@f{c}}}}}{{d{Ml}}}h}{{c{Df{{Ej{{Oj{e}}{Oj{e}}}}}}}{{A@f{e}}}{{Nl{Ml}}}h}2{{{d{c}}}e{}{}}{c{{Ah{e}}}{}{}}0{{{d{c}}}Hd{}}{ce{}{}}`{{{d{c}}}{{d{e}}}{}{}}{{{d{A`c}}}{{d{A`e}}}{}{}}{{{d{A@h}}}A@h};{{}A@h}{B`{{d{c}}}{}}{B`{{d{A`c}}}{}}{B`Ab}{{{d{A@h}}{d{A`Fj}}}Fl}{cc{}}{{{d{A@h}}}{{Df{{An{Gj}}}}}}{{}B`};>==<;`:9{{{d{{A@l{c}}}}}{{A@l{c}}}{Dnh}}{{{d{c}}{d{A`e}}}Ab{}{}}876{{{d{{A@l{c}}}}{d{A`Fj}}}Flh}53{{{d{{A@l{c}}}}}{{d{{Df{{Oj{c}}}}}}}h}?{{{d{{A@l{c}}}}}{{d{Ml}}}h}{{c{Df{{Ej{{Oj{e}}{Oj{e}}}}}}}{{A@l{e}}}{{Nl{Ml}}}h}2{{{d{c}}}e{}{}}{c{{Ah{e}}}{}{}}0{{{d{c}}}Hd{}}{ce{}{}}","D":"DDj","p":[[5,"Value",3,1668],[1,"reference"],[6,"Assigned",972],[10,"Field",1669],[17,"Output"],[10,"Add",1670],[10,"FnOnce",1671],[0,"mut"],[1,"unit"],[1,"bool"],[6,"Error",1562],[6,"Result",1672],[5,"Region",3],[5,"Advice",1029],[5,"Column",1272],[1,"usize"],[5,"AssignedCell",3],[5,"String",1673],[10,"Into",1674],[10,"Fn",1671],[10,"FnMut",1671],[5,"Instance",1029],[10,"TableLayouter",381,1675],[5,"TableColumn",1272],[5,"SimpleTableLayouter",3,1675],[10,"Assignment",1029],[5,"Table",3],[5,"Fixed",1029],[17,"Root"],[10,"Layouter",3],[5,"NamespacedLayouter",3],[5,"WitnessCalculator",3],[1,"u8"],[5,"HashMap",1676],[5,"Vec",1677],[6,"Option",1678],[10,"Circuit",1029],[5,"Cell",3],[10,"Clone",1679],[5,"RegionIndex",3],[5,"RegionStart",3],[1,"u32"],[5,"CompiledCircuit",1680],[5,"ConstraintSystem",1118],[1,"tuple"],[17,"Config"],[17,"Loaded"],[10,"Chip",3],[10,"Debug",1681],[10,"Copy",1682],[10,"Borrow",1683],[5,"Selector",1272],[5,"Formatter",1681],[8,"Result",1681],[10,"RegionLayouter",381],[17,"Item"],[10,"IntoIterator",1684],[10,"FromIterator",1684],[5,"Challenge",1272],[10,"Mul",1670],[6,"Any",1680],[10,"Neg",1670],[1,"slice"],[10,"Sub",1670],[1,"array"],[5,"TypeId",1685],[5,"SingleChipLayouter",279],[10,"SyncDeps",381],[5,"SimpleFloorPlanner",279],[5,"V1Pass",316],[5,"V1",316],[5,"MeasurementPass",316],[5,"AssignmentPass",316],[5,"RegionShape",381],[6,"RegionColumn",381],[6,"Ordering",1686],[5,"HashSet",1687],[10,"Hasher",1688],[5,"MockProver",449],[6,"CellValue",449],[10,"FromUniformBytes",1669],[10,"Ord",1686],[10,"Iterator",1689],[6,"FailureLocation",449,1690],[6,"InstanceValue",449],[5,"CircuitGates",449,1691],[5,"CircuitLayout",449,1692],[6,"VerifyFailure",449,1690],[10,"PartialEq",1686],[5,"Error",1681],[5,"TracingFloorPlanner",449,1693],[10,"FloorPlanner",1029],[5,"Shift",1694],[5,"DrawingArea",1695],[6,"DrawingAreaErrorKind",1695],[10,"DrawingBackend",1696],[5,"Range",1697],[5,"CircuitCost",661],[10,"PrimeGroup",1698],[5,"MarginalProofSize",661],[5,"ProofSize",661],[5,"Poly",706],[5,"Lookup",706],[5,"Permutation",706],[5,"Shuffle",706],[10,"Deserializer",1699],[5,"ModelCircuit",706],[6,"CommitmentScheme",706],[5,"CostOptions",706],[1,"str"],[10,"Serializer",1700],[5,"Column",850],[5,"Gate",850],[5,"Constraint",850],[5,"Region",850],[5,"VirtualCell",850],[1,"i32"],[10,"AsRef",1674],[5,"VirtualCell",1118],[17,"FloorPlanner"],[17,"Params"],[10,"Default",1701],[10,"ColumnType",1029],[5,"Rotation",1702],[6,"Expression",1272],[10,"Phase",1272],[5,"Gate",1118],[5,"Constraint",1118],[5,"VirtualCells",1118],[5,"Constraints",1118],[5,"Argument",1607],[5,"Argument",1628],[5,"Phase",1537],[5,"Argument",1647],[5,"FixedQuery",1272],[5,"AdviceQuery",1272],[5,"InstanceQuery",1272],[5,"FirstPhase",1272],[5,"SecondPhase",1272],[5,"ThirdPhase",1272],[5,"ChallengeMid",1680],[10,"Hash",1688],[10,"SealedPhase",1537],[6,"TableError",1562],[15,"InRegion",636],[15,"OutsideRegion",636],[15,"ConstraintNotSatisfied",639],[15,"CellNotAssigned",639],[15,"InstanceCellNotAssigned",639],[15,"Permutation",639],[15,"ConstraintPoisoned",639],[15,"Lookup",639],[15,"Shuffle",639],[15,"NotEnoughRowsAvailable",1606]],"r":[[14,279],[15,1675],[17,1675],[18,1668],[275,316],[276,316],[387,1675],[453,661],[454,1691],[455,1692],[458,1690],[469,1693],[471,1690],[495,1703]],"b":[[20,"impl-Add%3CValue%3CV%3E%3E-for-%26Value%3CV%3E"],[21,"impl-Add%3CValue%3CV%3E%3E-for-Value%3C%26V%3E"],[22,"impl-Add%3CF%3E-for-Value%3CAssigned%3CF%3E%3E"],[23,"impl-Add%3CValue%3C%26V%3E%3E-for-Value%3CV%3E"],[24,"impl-Add%3CValue%3CF%3E%3E-for-Value%3CAssigned%3CF%3E%3E"],[25,"impl-Add%3CF%3E-for-Value%3C%26Assigned%3CF%3E%3E"],[26,"impl-Add%3C%26Value%3CV%3E%3E-for-Value%3CV%3E"],[27,"impl-Add-for-Value%3CV%3E"],[28,"impl-Add-for-%26Value%3CV%3E"],[29,"impl-Add%3CValue%3CF%3E%3E-for-Value%3C%26Assigned%3CF%3E%3E"],[78,"impl-Value%3C%26mut+V%3E"],[79,"impl-Value%3C%26V%3E"],[87,"impl-Value%3C%26mut+V%3E"],[88,"impl-Value%3C%26V%3E"],[190,"impl-Mul%3CF%3E-for-Value%3C%26Assigned%3CF%3E%3E"],[191,"impl-Mul-for-Value%3CV%3E"],[192,"impl-Mul%3CValue%3CF%3E%3E-for-Value%3CAssigned%3CF%3E%3E"],[193,"impl-Mul%3CF%3E-for-Value%3CAssigned%3CF%3E%3E"],[194,"impl-Mul-for-%26Value%3CV%3E"],[195,"impl-Mul%3CValue%3CV%3E%3E-for-%26Value%3CV%3E"],[196,"impl-Mul%3CValue%3CF%3E%3E-for-Value%3C%26Assigned%3CF%3E%3E"],[197,"impl-Mul%3CValue%3C%26V%3E%3E-for-Value%3CV%3E"],[198,"impl-Mul%3C%26Value%3CV%3E%3E-for-Value%3CV%3E"],[199,"impl-Mul%3CValue%3CV%3E%3E-for-Value%3C%26V%3E"],[212,"impl-Sub-for-Value%3CV%3E"],[213,"impl-Sub%3CValue%3CV%3E%3E-for-%26Value%3CV%3E"],[214,"impl-Sub%3CF%3E-for-Value%3C%26Assigned%3CF%3E%3E"],[215,"impl-Sub%3CValue%3CF%3E%3E-for-Value%3CAssigned%3CF%3E%3E"],[216,"impl-Sub%3CValue%3C%26V%3E%3E-for-Value%3CV%3E"],[217,"impl-Sub-for-%26Value%3CV%3E"],[218,"impl-Sub%3CValue%3CV%3E%3E-for-Value%3C%26V%3E"],[219,"impl-Sub%3CF%3E-for-Value%3CAssigned%3CF%3E%3E"],[220,"impl-Sub%3C%26Value%3CV%3E%3E-for-Value%3CV%3E"],[221,"impl-Sub%3CValue%3CF%3E%3E-for-Value%3C%26Assigned%3CF%3E%3E"],[423,"impl-From%3CSelector%3E-for-RegionColumn"],[424,"impl-From%3CColumn%3CAny%3E%3E-for-RegionColumn"],[543,"impl-Display-for-FailureLocation"],[544,"impl-Debug-for-FailureLocation"],[545,"impl-Debug-for-VerifyFailure"],[546,"impl-Display-for-VerifyFailure"],[547,"impl-Debug-for-CircuitGates"],[548,"impl-Display-for-CircuitGates"],[896,"impl-Debug-for-ColumnMid"],[897,"impl-Display-for-ColumnMid"],[898,"impl-Display-for-VirtualCell"],[899,"impl-Debug-for-VirtualCell"],[900,"impl-Debug-for-Gate"],[901,"impl-Display-for-Gate"],[902,"impl-Display-for-Constraint"],[903,"impl-Debug-for-Constraint"],[904,"impl-Display-for-Region"],[905,"impl-Debug-for-Region"],[908,"impl-From%3C(S,+ColumnMid,+i32)%3E-for-VirtualCell"],[909,"impl-From%3CVirtualCell%3E-for-VirtualCell"],[910,"impl-From%3C(ColumnMid,+i32)%3E-for-VirtualCell"],[916,"impl-From%3C(usize,+%26str)%3E-for-Region"],[918,"impl-From%3C(usize,+String,+HashMap%3CColumnMid,+String%3E)%3E-for-Region"],[919,"impl-From%3C(usize,+%26str,+HashMap%3CColumnMid,+String%3E)%3E-for-Region"],[920,"impl-From%3C(usize,+String)%3E-for-Region"],[976,"impl-Add%3CAssigned%3CF%3E%3E-for-%26Assigned%3CF%3E"],[977,"impl-Add%3C%26Assigned%3CF%3E%3E-for-%26Assigned%3CF%3E"],[978,"impl-Add%3CF%3E-for-Assigned%3CF%3E"],[979,"impl-Add-for-Assigned%3CF%3E"],[980,"impl-Add%3C%26Assigned%3CF%3E%3E-for-Assigned%3CF%3E"],[981,"impl-Add%3CF%3E-for-%26Assigned%3CF%3E"],[982,"impl-AddAssign%3C%26Assigned%3CF%3E%3E-for-Assigned%3CF%3E"],[983,"impl-AddAssign-for-Assigned%3CF%3E"],[997,"impl-From%3C%26F%3E-for-Assigned%3CF%3E"],[999,"impl-From%3CF%3E-for-Assigned%3CF%3E"],[1000,"impl-From%3C(F,+F)%3E-for-Assigned%3CF%3E"],[1001,"impl-From%3C%26Assigned%3CF%3E%3E-for-Assigned%3CF%3E"],[1006,"impl-Mul%3CF%3E-for-%26Assigned%3CF%3E"],[1007,"impl-Mul%3C%26Assigned%3CF%3E%3E-for-Assigned%3CF%3E"],[1008,"impl-Mul-for-Assigned%3CF%3E"],[1009,"impl-Mul%3CF%3E-for-Assigned%3CF%3E"],[1010,"impl-MulAssign-for-Assigned%3CF%3E"],[1011,"impl-MulAssign%3C%26Assigned%3CF%3E%3E-for-Assigned%3CF%3E"],[1012,"impl-Neg-for-Assigned%3CF%3E"],[1013,"impl-Neg-for-%26Assigned%3CF%3E"],[1016,"impl-Sub%3CAssigned%3CF%3E%3E-for-%26Assigned%3CF%3E"],[1017,"impl-Sub%3C%26Assigned%3CF%3E%3E-for-%26Assigned%3CF%3E"],[1018,"impl-Sub%3CF%3E-for-Assigned%3CF%3E"],[1019,"impl-Sub-for-Assigned%3CF%3E"],[1020,"impl-Sub%3C%26Assigned%3CF%3E%3E-for-Assigned%3CF%3E"],[1021,"impl-Sub%3CF%3E-for-%26Assigned%3CF%3E"],[1022,"impl-SubAssign%3C%26Assigned%3CF%3E%3E-for-Assigned%3CF%3E"],[1023,"impl-SubAssign-for-Assigned%3CF%3E"],[1191,"impl-From%3CExpression%3CF%3E%3E-for-Constraint%3CF%3E"],[1192,"impl-From%3C(S,+Expression%3CF%3E)%3E-for-Constraint%3CF%3E"],[1403,"impl-From%3CColumn%3CFixed%3E%3E-for-Column%3CAny%3E"],[1404,"impl-From%3CColumn%3CInstance%3E%3E-for-Column%3CAny%3E"],[1405,"impl-From%3CColumn%3CAdvice%3E%3E-for-Column%3CAny%3E"],[1406,"impl-From%3CColumnMid%3E-for-Column%3CAny%3E"],[1456,"impl-Mul-for-Expression%3CF%3E"],[1457,"impl-Mul%3CF%3E-for-Expression%3CF%3E"],[1490,"impl-TryFrom%3CColumn%3CAny%3E%3E-for-Column%3CFixed%3E"],[1492,"impl-TryFrom%3CColumn%3CAny%3E%3E-for-Column%3CInstance%3E"],[1493,"impl-TryFrom%3CColumn%3CAny%3E%3E-for-Column%3CAdvice%3E"],[1585,"impl-Debug-for-Error"],[1586,"impl-Display-for-Error"],[1587,"impl-Display-for-TableError"],[1588,"impl-Debug-for-TableError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAF8EjgAAAAAAAwAAAA8AAAAVAAkAKAAAACwAAAAuABQARQAJAFcAAABcAAAAXgAVAHUACgCBAAAAhgAJAJIAAACUAAAAlgAAAJoAAACdAAAAoQAAAKMACgC/AAkAywAAAM8AAADRAAAA1QAJAOAABADnAB0ACQEJABQBAwAaAQ4AKwEDADIBCgBBARoAYAEFAGoBEwCGAQAAiAEAAIoBAACNAQkAmQEAAJsBBgCjAQMAqAEBAKsBAgCvAQAAswEAALUBAAC4AQkAxgEAANsBAADeAREA8QEFAPgBAAD8ARgAFgIHACACCgAzAggARwIBAEoCAABQAh4AdQIHAJkCEQCuAgIAtwILAM8CFgDnAhgAAQMGABEDAAATAwYAKQMAAC4DAQAzAx8AWAMTAG0DHgCNAwIAkQMAAJMDAACVAwAAlwMDAJwDBACmAyQAzAMAANEDCwDfAwEA4gMBAOUDAQDoAwMA7wMHAPkDDAATBAwAIgQAACQECAAvBAIAMwQAADUEAgA8BAUASQQCAE8EDgBsBAsAegQGAIYEAACIBAsAlQQFAJ8EBQCmBAAAqAQBALAEBgC/BAAAzgQBANYEAADbBBQA8gQFAA8FKAA/BQAAQwUgAGUFBwBxBQ4AigUAAIwFAwCUBQAAmAULALEFAwC2BQEAugUAAMQFAADGBTsABAYJAA8GAQASBggAKAYNADgGAQA9BgkASQYHAFIGAABYBgQAXgYIAGkGAABrBgQAcQYHAHoGAACABgQA"}],\
["halo2_middleware",{"t":"CCEECCCCCCPGFPFFFPFIPFIPPFPPFPPGONNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNOOOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNOONNNNOONNNNNNNNNNNNNNNNNNNNOONOONOOOONNNOONOOONOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNPGPPPPKNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNMNFINNNNNNNNNNOONOOOONNNNNKKKKRRRRRRRKKFKNNMNNNNNNNNNNNNNHNNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMHNMNNNNNNNNNNNNNNNNMMNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNMNNNNNNNNNNNNNNNNMNNFFNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNFINNNNNNNNNNOONOOOONNNNNCCFFFFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNRRKMMMMMM","n":["circuit","expression","ff","halo2curves","lookup","multicore","permutation","poly","shuffle","zal","Advice","Any","Cell","Challenge","ChallengeMid","ColumnMid","CompiledCircuit","Constant","ConstraintSystemMid","ExpressionMid","Fixed","Gate","GateMid","Instance","Negated","Preprocessing","Product","Query","QueryMid","Sum","Var","VarMid","advice_column_phase","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","challenge_phase","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","column","column_index","column_type","column_type","complexity","cs","degree","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","fixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","gates","general_column_annotations","hash","hash","hash","index","index","index","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","lookups","minimum_degree","name","name","name","new","num_advice_columns","num_challenges","num_fixed_columns","num_instance_columns","partial_cmp","partial_cmp","partial_cmp","permutation","permutation","phase","phase","poly","poly","polynomial","preprocessing","rotation","row","shuffles","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unblinded_advice_columns","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_identifier","Constant","Expression","Negated","Product","Sum","Var","Variable","add","borrow","borrow_mut","clone","clone_into","complexity","complexity","degree","degree","deref","deref_mut","drop","eq","evaluate","fmt","from","identifier","init","into","mul","mul","neg","product","sub","sum","to_owned","try_from","try_into","type_id","vzip","write_identifier","write_identifier","Argument","ArgumentMid","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","input_expressions","input_expressions","into","name","name","table_expressions","table_expressions","to_owned","try_from","try_into","type_id","vzip","IndexedParallelIterator","IntoParallelIterator","IntoParallelRefIterator","IntoParallelRefMutIterator","Item","Item","Item","Item","Iter","Iter","Iter","ParallelIterator","ParallelSliceMut","Scope","TryFoldAndReduce","all","any","as_parallel_slice_mut","borrow","borrow_mut","by_exponential_blocks","by_uniform_blocks","chain","chunks","cloned","cmp","collect","collect_into_vec","collect_vec_list","copied","count","current_num_threads","deref","deref_mut","drive","drive_unindexed","drop","enumerate","eq","filter","filter_map","find_any","find_first","find_last","find_map_any","find_map_first","find_map_last","flat_map","flat_map_iter","flatten","flatten_iter","fmt","fold","fold_chunks","fold_chunks_with","fold_with","for_each","for_each_init","for_each_with","from","ge","gt","init","inspect","interleave","interleave_shortest","intersperse","into","into_par_iter","join","le","len","lt","map","map_init","map_with","max","max_by","max_by_key","min","min_by","min_by_key","ne","opt_len","panic_fuse","par_chunk_by_mut","par_chunks_exact_mut","par_chunks_mut","par_iter","par_iter_mut","par_rchunks_exact_mut","par_rchunks_mut","par_sort","par_sort_by","par_sort_by_cached_key","par_sort_by_key","par_sort_unstable","par_sort_unstable_by","par_sort_unstable_by_key","par_split_inclusive_mut","par_split_mut","partial_cmp","partition","partition_map","position_any","position_first","position_last","positions","product","reduce","reduce_with","rev","scope","skip","skip_any","skip_any_while","spawn","spawn_broadcast","step_by","sum","take","take_any","take_any_while","try_fold","try_fold_and_reduce","try_fold_with","try_for_each","try_for_each_init","try_for_each_with","try_from","try_into","try_reduce","try_reduce_with","type_id","unzip","unzip_into_vecs","update","vzip","while_some","with_max_len","with_min_len","with_producer","zip","zip_eq","ArgumentMid","AssemblyMid","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","columns","copies","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","init","init","into","into","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Rotation","borrow","borrow_mut","clone","clone_into","cmp","cur","deref","deref_mut","drop","eq","fmt","from","hash","init","into","next","partial_cmp","prev","to_owned","try_from","try_into","type_id","vzip","Argument","ArgumentMid","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","input_expressions","input_expressions","into","name","name","shuffle_expressions","shuffle_expressions","to_owned","try_from","try_into","type_id","vzip","impls","traits","H2cEngine","H2cMsmBaseDesc","H2cMsmCoeffsDesc","HasCurve","HasMsmEngine","NoCurve","NoMsmEngine","PlonkEngine","PlonkEngineConfig","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","from","from","from","from","from","from","from","from","from","get_base_descriptor","get_coeffs_descriptor","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","msm","msm_backend","msm_with_cached_base","msm_with_cached_inputs","msm_with_cached_scalars","new","new","set_curve","set_msm","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BaseDescriptor","CoeffsDescriptor","MsmAccel","get_base_descriptor","get_coeffs_descriptor","msm","msm_with_cached_base","msm_with_cached_inputs","msm_with_cached_scalars"],"q":[[0,"halo2_middleware"],[10,"halo2_middleware::circuit"],[247,"halo2_middleware::expression"],[286,"halo2_middleware::lookup"],[310,"halo2_middleware::multicore"],[454,"halo2_middleware::permutation"],[490,"halo2_middleware::poly"],[514,"halo2_middleware::shuffle"],[538,"halo2_middleware::zal"],[540,"halo2_middleware::zal::impls"],[676,"halo2_middleware::zal::traits"],[685,"core::clone"],[686,"ff"],[687,"core::cmp"],[688,"core::fmt"],[689,"core::hash"],[690,"core::option"],[691,"alloc::string"],[692,"core::result"],[693,"core::any"],[694,"std::io::error"],[695,"std::io"],[696,"core::ops::function"],[697,"core::iter::traits::iterator"],[698,"rayon::iter"],[699,"core::marker"],[700,"rayon::slice"],[701,"rayon::iter::blocks"],[702,"rayon::iter::chain"],[703,"rayon::iter::chunks"],[704,"rayon::iter::cloned"],[705,"alloc::vec"],[706,"alloc::collections::linked_list"],[707,"rayon::iter::copied"],[708,"rayon::iter::plumbing"],[709,"rayon::iter::enumerate"],[710,"rayon::iter::filter"],[711,"rayon::iter::filter_map"],[712,"rayon::iter::flat_map"],[713,"rayon::iter::flat_map_iter"],[714,"core::iter::traits::collect"],[715,"rayon::iter::flatten"],[716,"rayon::iter::flatten_iter"],[717,"rayon_core::scope"],[718,"rayon::iter::fold"],[719,"rayon::iter::fold_chunks"],[720,"rayon::iter::fold_chunks_with"],[721,"rayon::iter::inspect"],[722,"rayon::iter::interleave"],[723,"rayon::iter::interleave_shortest"],[724,"rayon::iter::intersperse"],[725,"rayon::iter::map"],[726,"rayon::iter::map_with"],[727,"rayon::iter::panic_fuse"],[728,"rayon::slice::chunk_by"],[729,"rayon::slice::chunks"],[730,"rayon::slice::rchunks"],[731,"core::default"],[732,"either"],[733,"rayon::iter::positions"],[734,"core::iter::traits::accum"],[735,"rayon::iter::rev"],[736,"rayon::iter::skip"],[737,"rayon::iter::skip_any"],[738,"rayon::iter::skip_any_while"],[739,"rayon_core::broadcast"],[740,"rayon::iter::step_by"],[741,"rayon::iter::take"],[742,"rayon::iter::take_any"],[743,"rayon::iter::take_any_while"],[744,"rayon::iter::try_fold"],[745,"rayon::iter::private"],[746,"rayon::iter::update"],[747,"rayon::iter::while_some"],[748,"rayon::iter::len"],[749,"rayon::iter::zip"],[750,"rayon::iter::zip_eq"],[751,"pasta_curves::arithmetic::curves"],[752,"rayon_core"],[753,"rayon_core::join"]],"i":[0,0,0,0,0,0,0,0,0,0,13,0,0,5,0,0,0,133,0,0,13,0,0,13,133,0,133,5,0,133,133,0,10,3,4,5,6,10,11,12,13,14,15,3,4,5,6,10,11,12,13,14,15,10,3,4,5,6,10,11,12,13,14,15,3,4,5,6,10,11,12,13,14,15,13,14,15,15,4,4,14,5,12,5,3,4,5,6,10,11,12,13,14,15,3,4,5,6,10,11,12,13,14,15,3,4,5,6,10,11,12,13,14,15,3,4,5,13,14,15,11,3,4,5,6,10,11,12,13,14,14,15,3,4,5,6,10,11,12,13,14,15,10,10,3,13,14,3,3,14,3,4,5,6,10,11,12,13,14,15,3,4,5,6,10,11,12,13,14,15,10,10,6,134,6,14,10,10,10,10,13,14,15,10,11,3,3,134,6,6,12,4,15,10,3,4,5,6,10,11,12,13,14,15,14,3,4,5,6,10,11,12,13,14,15,3,4,5,6,10,11,12,13,14,15,3,4,5,6,10,11,12,13,14,15,10,3,4,5,6,10,11,12,13,14,15,5,27,0,27,27,27,27,0,27,27,27,27,27,9,27,9,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,9,27,0,0,38,38,38,38,38,38,38,38,38,38,135,38,38,135,38,135,38,38,38,38,38,38,0,0,0,0,48,86,87,39,48,86,87,0,0,0,0,39,39,42,65,65,44,44,39,44,39,44,39,44,39,39,39,0,65,65,44,39,65,44,44,39,39,39,39,39,39,39,39,39,39,39,39,65,39,44,44,39,39,39,39,65,44,44,65,39,44,44,39,65,48,0,44,44,44,39,39,39,39,39,39,39,39,39,44,39,39,42,42,42,86,87,42,42,42,42,42,42,42,42,42,42,42,44,39,39,44,44,44,44,39,39,39,44,0,44,39,39,65,65,44,39,44,39,39,39,109,39,39,39,39,65,65,39,39,65,39,44,39,65,39,44,44,44,44,44,0,0,118,119,118,119,118,119,118,119,119,118,118,119,118,119,118,119,118,119,118,119,118,119,118,119,118,119,118,119,118,119,118,119,118,119,0,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,121,121,121,121,121,121,121,121,121,121,136,121,121,136,121,136,121,121,121,121,121,121,0,0,0,0,0,0,0,0,0,0,0,137,138,123,128,125,124,129,122,130,137,138,123,128,125,124,129,122,130,124,124,128,124,129,122,130,137,138,123,128,125,124,129,122,130,137,138,123,128,125,124,129,122,130,137,138,123,128,125,124,129,122,130,125,137,138,123,128,125,124,129,122,130,128,128,137,138,123,128,125,124,129,122,130,137,138,123,128,125,124,129,122,130,128,125,128,128,128,128,124,124,124,137,138,123,128,125,124,129,122,130,137,138,123,128,125,124,129,122,130,137,138,123,128,125,124,129,122,130,137,138,123,128,125,124,129,122,130,127,127,0,127,127,127,127,127,127],"f":"`````````````````````````````````{{{b{c}}}{{b{e}}}{}{}}000000000{{{b{dc}}}{{b{de}}}{}{}}000000000`{{{b{f}}}f}{{{b{h}}}h}{{{b{j}}}j}{{{b{{l{ce}}}}}{{l{ce}}}{nA`}{nAb}}{{{b{{Ad{c}}}}}{{Ad{c}}}{nA`}}{{{b{{Af{c}}}}}{{Af{c}}}{nA`}}{{{b{{Ah{c}}}}}{{Ah{c}}}{nA`}}{{{b{Aj}}}Aj}{{{b{Al}}}Al}{{{b{An}}}An}{{{b{c}}{b{de}}}B`{}{}}000000000{{{b{Aj}}{b{Aj}}}Bb}{{{b{Al}}{b{Al}}}Bb}{{{b{An}}{b{An}}}Bb}````{{{b{j}}}Bd}`0{Bd{{b{c}}}{}}000000000{Bd{{b{dc}}}{}}000000000{BdB`}000000000{{{b{f}}{b{f}}}Bf}{{{b{h}}{b{h}}}Bf}{{{b{j}}{b{j}}}Bf}{{{b{Aj}}{b{Aj}}}Bf}{{{b{Al}}{b{Al}}}Bf}{{{b{An}}{b{An}}}Bf}`{{{b{f}}{b{dBh}}}Bj}{{{b{h}}{b{dBh}}}Bj}{{{b{j}}{b{dBh}}}Bj}{{{b{{l{ce}}}}{b{dBh}}}Bj{BlA`}{BlAb}}{{{b{{Ad{c}}}}{b{dBh}}}Bj{BlA`}}{{{b{{Af{c}}}}{b{dBh}}}Bj{BlA`}}{{{b{{Ah{c}}}}{b{dBh}}}Bj{BlA`}}{{{b{Aj}}{b{dBh}}}Bj}{{{b{Al}}{b{dBh}}}Bj}0{{{b{An}}{b{dBh}}}Bj}{cc{}}000000000``{{{b{f}}{b{dc}}}B`Bn}{{{b{Aj}}{b{dc}}}B`Bn}{{{b{Al}}{b{dc}}}B`Bn}{{{b{f}}}Bd}``{{}Bd}000000000{ce{}{}}000000000``{{{b{{l{ce}}}}}{{b{C`}}}A`Ab}``{{AjBd}Al}````{{{b{Aj}}{b{Aj}}}{{Cb{Bb}}}}{{{b{Al}}{b{Al}}}{{Cb{Bb}}}}{{{b{An}}{b{An}}}{{Cb{Bb}}}}``{{{b{f}}}Cd}```{{{b{{l{ce}}}}}{{b{{Cf{ce}}}}}A`Ab}````{{{b{c}}}e{}{}}000000000{{{b{c}}}Ch{}}{c{{Cj{e}}}{}{}}0000000000000000000{{{b{c}}}Cl{}}000000000`;;;;;;;;;;{{{b{j}}{b{dc}}}{{Cn{B`}}}D`}```````{{{Cf{ce}}{Cf{ce}}}{{Cf{ce}}}A`Ab}{{{b{c}}}{{b{e}}}{}{}}{{{b{dc}}}{{b{de}}}{}{}}{{{b{{Cf{ce}}}}}{{Cf{ce}}}n{nAb}}{{{b{c}}{b{de}}}B`{}{}}{{{b{Ab}}}Bd}{{{b{{Cf{ce}}}}}BdA`Ab}10{Bd{{b{c}}}{}}{Bd{{b{dc}}}{}}{BdB`}{{{b{{Cf{ce}}}}{b{{Cf{ce}}}}}BfDb{DbAb}}{{{b{{Cf{ce}}}}{b{i}}{b{k}}{b{m}}{b{o}}{b{Aa}}}gA`Ab{}{{Df{c}{{Dd{g}}}}}{{Df{e}{{Dd{g}}}}}{{Df{g}{{Dd{g}}}}}{{Df{gg}{{Dd{g}}}}}{{Df{gg}{{Dd{g}}}}}}{{{b{{Cf{ce}}}}{b{dBh}}}BjBl{BlAb}}{cc{}}{{{b{{Cf{ce}}}}}ChA`Ab}{{}Bd}{ce{}{}}{{{Cf{ce}}c}{{Cf{ce}}}A`Ab}{{{Cf{ce}}{Cf{ce}}}{{Cf{ce}}}A`Ab}{{{Cf{ce}}}gA`Ab{}}{g{{Cf{ce}}}A`Ab{{Dj{}{{Dh{{Cf{ce}}}}}}}}20{{{b{c}}}e{}{}}{c{{Cj{e}}}{}{}}0{{{b{c}}}Cl{}}7{{{b{Ab}}{b{dc}}}{{Cn{B`}}}D`}{{{b{{Cf{ce}}}}{b{dg}}}{{Cn{B`}}}A`AbD`}``{{{b{c}}}{{b{e}}}{}{}}{{{b{dc}}}{{b{de}}}{}{}}{{{b{{Dl{ce}}}}}{{Dl{ce}}}{nA`}{nAb}}{{{b{c}}{b{de}}}B`{}{}}{Bd{{b{c}}}{}}{Bd{{b{dc}}}{}}{BdB`}{{{b{{Dl{ce}}}}{b{dBh}}}Bj{BlA`}{BlAb}}{cc{}}{{}Bd}``{ce{}{}}````?>>=0```````````````{{{Dn{}{{Dh{c}}}}e}BfE`{{Df{c}{{Dd{Bf}}}}EbE`}}0{{{b{dEd}}}{{b{d{Ef{c}}}}}E`}<;{Eh{{Ej{Eh}}}}{{EhBd}{{El{Eh}}}}{{{Dn{}{{Dh{c}}}}e}{{En{{Dn{}{{Dh{c}}}}}}}E`{{F`{}{{Dh{c}}}}}}{{EhBd}{{Fb{Eh}}}}{{{Dn{}{{Dh{c}}}}}{{Fd{{Dn{}{{Dh{c}}}}}}}E`}{{Ehe}Bb{}{{F`{}{{Dh{c}}}}}}{{{Dn{}{{Dh{c}}}}}eE`{{Ff{c}}}}{{Eh{b{d{Fh{c}}}}}B`{}}{{{Dn{}{{Dh{c}}}}}{{Fj{{Fh{c}}}}}E`}{{{Dn{}{{Dh{c}}}}}{{Fl{{Dn{}{{Dh{c}}}}}}}E`}{{{Dn{}{{Dh{c}}}}}BdE`}>{Bd{{b{c}}}{}}{Bd{{b{dc}}}{}}{{Ehe}{}{}{{Fn{c}}}}{{{Dn{}{{Dh{c}}}}e}{}E`{{G`{c}}}}{BdB`}{Eh{{Gb{Eh}}}}{{Ehc}BfF`}{{{Dn{}{{Dh{c}}}}e}{{Gd{{Dn{}{{Dh{c}}}}e}}}E`{{Df{{b{c}}}{{Dd{Bf}}}}EbE`}}{{{Dn{}{{Dh{c}}}}g}{{Gf{{Dn{}{{Dh{c}}}}g}}}E`E`{{Df{c}{{Dd{{Cb{e}}}}}}EbE`}}{{{Dn{}{{Dh{c}}}}e}{{Cb{c}}}E`{{Df{{b{c}}}{{Dd{Bf}}}}EbE`}}00{{{Dn{}{{Dh{c}}}}g}{{Cb{e}}}E`E`{{Df{c}{{Dd{{Cb{e}}}}}}EbE`}}00{{{Dn{}{{Dh{c}}}}g}{{Gh{{Dn{}{{Dh{c}}}}g}}}E`F`{{Df{c}{{Dd{e}}}}EbE`}}{{{Dn{}{{Dh{c}}}}g}{{Gj{{Dn{}{{Dh{c}}}}g}}}E`Gl{{Df{c}{{Dd{e}}}}EbE`}}{{{Dn{}{{Dh{c}}}}}{{Gn{{Dn{}{{Dh{c}}}}}}}E`}{{{Dn{}{{Dh{c}}}}}{{H`{{Dn{}{{Dh{c}}}}}}}E`}{{{b{Hb}}{b{dBh}}}{{Cj{B`Hd}}}}{{{Dn{}{{Dh{c}}}}gi}{{Hf{{Dn{}{{Dh{c}}}}gi}}}E`E`{{Df{}{{Dd{e}}}}EbE`}{{Df{ec}{{Dd{e}}}}EbE`}}{{EhBdei}{{Hh{Ehei}}}E`{{Df{}{{Dd{c}}}}E`Eb}{}{{Df{cg}{{Dd{c}}}}E`Eb}}{{EhBdcg}{{Hj{Ehcg}}}{E`n}{}{{Df{ce}{{Dd{c}}}}E`Eb}}{{{Dn{}{{Dh{c}}}}eg}{{Hl{{Dn{}{{Dh{c}}}}eg}}}E`{E`n}{{Df{ec}{{Dd{e}}}}EbE`}}{{{Dn{}{{Dh{c}}}}e}B`E`{{Df{c}}EbE`}}{{{Dn{}{{Dh{c}}}}gi}B`E`{}{{Df{}{{Dd{e}}}}EbE`}{{Df{{b{de}}c}}EbE`}}{{{Dn{}{{Dh{c}}}}eg}B`E`{E`n}{{Df{{b{de}}c}}EbE`}}{cc{}}{{Ehc}BfF`}0{{}Bd}{{{Dn{}{{Dh{c}}}}e}{{Hn{{Dn{}{{Dh{c}}}}e}}}E`{{Df{{b{c}}}}EbE`}}{{Ehe}{{I`{Eh}}}{}{{F`{}{{Dh{c}}}}}}{{Ehe}{{Ib{Eh}}}{}{{F`{}{{Dh{c}}}}}}{{{Dn{}{{Dh{c}}}}c}{{Id{{Dn{}{{Dh{c}}}}}}}E`}{ce{}{}}{{{F`{}{{If{c}}{Dh{e}}}}}c{{Dn{}{{Dh{e}}}}}E`}{{ei}{{Ih{cg}}}E`{{Ij{}{{Dd{c}}}}E`}E`{{Ij{}{{Dd{g}}}}E`}}8{{{b{Eh}}}Bd}9{{{Dn{}{{Dh{c}}}}g}{{Il{{Dn{}{{Dh{c}}}}g}}}E`E`{{Df{c}{{Dd{e}}}}EbE`}}{{{Dn{}{{Dh{c}}}}gk}{{In{{Dn{}{{Dh{c}}}}gk}}}E`{}{{Df{}{{Dd{e}}}}EbE`}E`{{Df{{b{de}}c}{{Dd{i}}}}EbE`}}{{{Dn{}{{Dh{c}}}}ei}{{J`{{Dn{}{{Dh{c}}}}ei}}}E`{E`n}E`{{Df{{b{de}}c}{{Dd{g}}}}EbE`}}{{{Dn{}{{Dh{c}}}}}{{Cb{c}}}E`}{{{Dn{}{{Dh{c}}}}e}{{Cb{c}}}E`{EbE`{Df{{b{c}}{b{c}}}{{Dd{Bb}}}}}}{{{Dn{}{{Dh{c}}}}g}{{Cb{c}}}E`{JbE`}{EbE`{Df{{b{c}}}{{Dd{e}}}}}}210?{{{b{{Dn{}{{Dh{c}}}}}}}{{Cb{Bd}}}E`}{{{Dn{}{{Dh{c}}}}}{{Jd{{Dn{}{{Dh{c}}}}}}}E`}{{{b{dEd}}e}{{Jf{ce}}}E`{{Df{{b{c}}{b{c}}}{{Dd{Bf}}}}E`Eb}}{{{b{dEd}}Bd}{{Jh{c}}}E`}{{{b{dEd}}Bd}{{Jj{c}}}E`}{{{b{{Jl{}{{If{c}}{Dh{e}}}}}}}c{{Dn{}{{Dh{e}}}}}E`}{{{b{d{Jn{}{{If{c}}{Dh{e}}}}}}}c{{Dn{}{{Dh{e}}}}}E`}{{{b{dEd}}Bd}{{K`{c}}}E`}{{{b{dEd}}Bd}{{Kb{c}}}E`}{{{b{dEd}}}B`}{{{b{dEd}}e}B`E`{{Df{{b{c}}{b{c}}}{{Dd{Bb}}}}Eb}}{{{b{dEd}}g}B`E`{JbE`}{{Df{{b{c}}}{{Dd{e}}}}Eb}}{{{b{dEd}}g}B`E`Jb{{Df{{b{c}}}{{Dd{e}}}}Eb}}320{{{b{dEd}}e}{{Kd{ce}}}E`{{Df{{b{c}}}{{Dd{Bf}}}}EbE`}}{{{b{dEd}}e}{{Kf{ce}}}E`{{Df{{b{c}}}{{Dd{Bf}}}}EbE`}}{{Ehc}{{Cb{Bb}}}F`}{{{Dn{}{{Dh{c}}}}e}{{Ih{gi}}}E`{{Df{{b{c}}}{{Dd{Bf}}}}EbE`}{KhE`{Kj{c}}}{KhE`{Kj{c}}}}{{{Dn{}{{Dh{c}}}}i}{{Ih{km}}}E`E`E`{{Df{c}{{Dd{{Kl{eg}}}}}}EbE`}{KhE`{Kj{e}}}{KhE`{Kj{g}}}}{{Ehe}{{Cb{Bd}}}{}{{Df{c}{{Dd{Bf}}}}EbE`}}00{{Ehe}{{Kn{Ehe}}}{}{{Df{c}{{Dd{Bf}}}}EbE`}}{{{Dn{}{{Dh{c}}}}}eE`{E`{L`{c}}L`}}{{{Dn{}{{Dh{c}}}}eg}cE`{{Df{}{{Dd{c}}}}EbE`}{{Df{cc}{{Dd{c}}}}EbE`}}{{{Dn{}{{Dh{c}}}}e}{{Cb{c}}}E`{{Df{cc}{{Dd{c}}}}EbE`}}{Eh{{Lb{Eh}}}}{ecE`{{Ij{{b{Hb}}}{{Dd{c}}}}E`}}{{EhBd}{{Ld{Eh}}}}{{{Dn{}{{Dh{c}}}}Bd}{{Lf{{Dn{}{{Dh{c}}}}}}}E`}{{{Dn{}{{Dh{c}}}}e}{{Lh{{Dn{}{{Dh{c}}}}e}}}E`{{Df{{b{c}}}{{Dd{Bf}}}}EbE`}}{{{b{Hb}}c}B`{{Ij{{b{Hb}}}}E`}}{{{b{Hb}}c}B`{{Df{{b{Hb}}Lj}}E`Eb}}{{EhBd}{{Ll{Eh}}}}{{{Dn{}{{Dh{c}}}}}eE`{E`{Ln{c}}Ln}}{{EhBd}{{M`{Eh}}}}{{{Dn{}{{Dh{c}}}}Bd}{{Mb{{Dn{}{{Dh{c}}}}}}}E`}{{{Dn{}{{Dh{c}}}}e}{{Md{{Dn{}{{Dh{c}}}}e}}}E`{{Df{{b{c}}}{{Dd{Bf}}}}EbE`}}{{{Dn{}{{Dh{c}}}}gk}{{Mf{{Dn{}{{Dh{c}}}}igk}}}E`{}{{Df{}{{Dd{e}}}}EbE`}{{Mh{}{{Dd{e}}}}E`}{{Df{ec}{{Dd{i}}}}EbE`}}{{Mjei}{{Cj{cg}}}{}{{Df{}{{Dd{c}}}}E`Eb}{}{{Df{c{Cj{cg}}}{{Dd{{Cj{cg}}}}}}E`Eb}}{{{Dn{}{{Dh{c}}}}ei}{{Ml{{Dn{}{{Dh{c}}}}gi}}}E`{nE`}{{Mh{}{{Dd{e}}}}E`}{{Df{ec}{{Dd{g}}}}EbE`}}{{{Dn{}{{Dh{c}}}}g}eE`{{Mh{}{{Dd{B`}}}}E`}{{Df{c}{{Dd{e}}}}EbE`}}{{{Dn{}{{Dh{c}}}}gk}iE`{}{{Df{}{{Dd{e}}}}EbE`}{{Mh{}{{Dd{B`}}}}E`}{{Df{{b{de}}c}{{Dd{i}}}}EbE`}}{{{Dn{}{{Dh{c}}}}ei}gE`{E`n}{{Mh{}{{Dd{B`}}}}E`}{{Df{{b{de}}c}{{Dd{g}}}}EbE`}}{c{{Cj{e}}}{}{}}0{{{Dn{}{{Dh{c}}}}gi}cE`{}{{Df{}{{Dd{e}}}}EbE`}{{Df{ee}{{Dd{c}}}}EbE`}}{{{Dn{}{{Dh{c}}}}g}{{Cb{c}}}E`{}{{Df{ee}{{Dd{c}}}}EbE`}}{{{b{c}}}Cl{}}{{{Dn{}{{Dh{c}}}}}{{Ih{gk}}}E`E`{KhE`{Kj{e}}}E`{KhE`{Kj{i}}}}{{Eh{b{d{Fh{c}}}}{b{d{Fh{e}}}}}B`E`E`}{{{Dn{}{{Dh{c}}}}e}{{Mn{{Dn{}{{Dh{c}}}}e}}}E`{{Df{{b{dc}}}}EbE`}}{ce{}{}}{{{Dn{}{{Dh{c}}}}}{{N`{{Dn{}{{Dh{c}}}}}}}E`}{{EhBd}{{Nb{Eh}}}}{{EhBd}{{Nd{Eh}}}}{{Ehe}{}{}{{Nf{c}}}}{{Ehc}{{Nh{Eh}}}F`}{{Ehc}{{Nj{Eh}}}F`}``{{{b{c}}}{{b{e}}}{}{}}0{{{b{dc}}}{{b{de}}}{}{}}0{{{b{Nl}}}Nl}{{{b{Nn}}}Nn}{{{b{c}}{b{de}}}B`{}{}}0``{Bd{{b{c}}}{}}0{Bd{{b{dc}}}{}}0{BdB`}0{{{b{Nl}}{b{dBh}}}Bj}{{{b{Nn}}{b{dBh}}}Bj}{cc{}}0{{}Bd}0{ce{}{}}0{{{b{c}}}e{}{}}0{c{{Cj{e}}}{}{}}000{{{b{c}}}Cl{}}033`?>{{{b{O`}}}O`}<{{{b{O`}}{b{O`}}}Bb}{{}O`}=<;{{{b{O`}}{b{O`}}}Bf}{{{b{O`}}{b{dBh}}}Bj}:{{{b{O`}}{b{dc}}}B`Bn}:93{{{b{O`}}{b{O`}}}{{Cb{Bb}}}}49887:``{{{b{c}}}{{b{e}}}{}{}}{{{b{dc}}}{{b{de}}}{}{}}{{{b{{Ob{ce}}}}}{{Ob{ce}}}{nA`}{nAb}}{{{b{c}}{b{de}}}B`{}{}}{Bd{{b{c}}}{}}{Bd{{b{dc}}}{}}{BdB`}{{{b{{Ob{ce}}}}{b{dBh}}}Bj{BlA`}{BlAb}}{cc{}}{{}Bd}``{ce{}{}}````{{{b{c}}}e{}{}}{c{{Cj{e}}}{}{}}0{{{b{c}}}Cl{}}3```````````=========<<<<<<<<<{{{Oh{{Od{c}}{Of{ce}}}}}{{Oj{ce}}}Ol{{On{c}}}}{{}{{Oj{cA@`}}}Ol}{{}A@`}{{}{{Oh{ce}}}KhKh}{{}A@b}{{}{{Od{c}}}{KhOl}}{{}A@d}{Bd{{b{c}}}{}}00000000{Bd{{b{dc}}}{}}00000000{BdB`}00000000{{{b{{Oj{ce}}}}{b{dBh}}}Bj{BlOl}{Bl{On{c}}}}{cc{}}00000000{{{b{A@`}}{b{{Ef{c}}}}}eOl{}}{{{b{A@`}}{b{Ef}}}c{}}{{}Bd}00000000{ce{}{}}00000000{{{b{A@`}}{b{Ef}}{b{{Ef{c}}}}}{}Ol}`{{{b{A@`}}{b{Ef}}{b{c}}}{}{}}{{{b{A@`}}{b{c}}{b{e}}}{}{}{}}{{{b{A@`}}{b{c}}{b{{Ef{e}}}}}{}{}Ol}{{}A@`}{{}{{Oh{A@bA@d}}}}{{{Oh{A@bA@d}}}{{Oh{{Od{c}}A@d}}}Ol}{{{Oh{{Od{c}}e}}g}{{Oh{{Od{c}}{Of{cg}}}}}Ol{}{{On{c}}}}{c{{Cj{e}}}{}{}}00000000000000000{{{b{c}}}Cl{}}00000000:::::::::```{{{b{{On{}{{A@f{c}}{A@h{e}}}}}}{b{{Ef{g}}}}}e{}{}Ol}{{{b{{On{}{{A@f{c}}{A@h{e}}}}}}{b{Ef}}}c{}{}}{{{b{{On{}{{A@f{c}}{A@h{e}}}}}}{b{Ef}}{b{{Ef{g}}}}}{}{}{}Ol}{{{b{{On{}{{A@f{c}}{A@h{e}}}}}}{b{Ef}}{b{e}}}{}{}{}}{{{b{{On{}{{A@f{c}}{A@h{e}}}}}}{b{c}}{b{e}}}{}{}{}}{{{b{{On{}{{A@f{c}}{A@h{e}}}}}}{b{c}}{b{{Ef{g}}}}}{}{}{}Ol}","D":"AMd","p":[[1,"reference"],[0,"mut"],[5,"ChallengeMid",10],[5,"QueryMid",10],[6,"VarMid",10],[5,"Gate",10],[10,"Clone",685],[10,"Field",686],[10,"Variable",247],[5,"ConstraintSystemMid",10],[5,"Preprocessing",10],[5,"CompiledCircuit",10],[6,"Any",10],[5,"ColumnMid",10],[5,"Cell",10],[1,"unit"],[6,"Ordering",687],[1,"usize"],[1,"bool"],[5,"Formatter",688],[8,"Result",688],[10,"Debug",688],[10,"Hasher",689],[1,"str"],[6,"Option",690],[1,"u8"],[6,"Expression",247],[5,"String",691],[6,"Result",692],[5,"TypeId",693],[8,"Result",694],[10,"Write",695],[10,"PartialEq",687],[17,"Output"],[10,"Fn",696],[17,"Item"],[10,"Iterator",697],[5,"Argument",286],[10,"ParallelIterator",310,698],[10,"Send",699],[10,"Sync",699],[10,"ParallelSliceMut",310,700],[1,"slice"],[10,"IndexedParallelIterator",310,698],[5,"ExponentialBlocks",701],[5,"UniformBlocks",701],[5,"Chain",702],[10,"IntoParallelIterator",310,698],[5,"Chunks",703],[5,"Cloned",704],[10,"FromParallelIterator",698],[5,"Vec",705],[5,"LinkedList",706],[5,"Copied",707],[10,"Consumer",708],[10,"UnindexedConsumer",708],[5,"Enumerate",709],[5,"Filter",710],[5,"FilterMap",711],[5,"FlatMap",712],[5,"FlatMapIter",713],[10,"IntoIterator",714],[5,"Flatten",715],[5,"FlattenIter",716],[5,"Scope",310,717],[5,"Error",688],[5,"Fold",718],[5,"FoldChunks",719],[5,"FoldChunksWith",720],[5,"FoldWith",718],[5,"Inspect",721],[5,"Interleave",722],[5,"InterleaveShortest",723],[5,"Intersperse",724],[17,"Iter"],[1,"tuple"],[10,"FnOnce",696],[5,"Map",725],[5,"MapInit",726],[5,"MapWith",726],[10,"Ord",687],[5,"PanicFuse",727],[5,"ChunkByMut",728],[5,"ChunksExactMut",729],[5,"ChunksMut",729],[10,"IntoParallelRefIterator",310,698],[10,"IntoParallelRefMutIterator",310,698],[5,"RChunksExactMut",730],[5,"RChunksMut",730],[5,"SplitInclusiveMut",700],[5,"SplitMut",700],[10,"Default",731],[10,"ParallelExtend",698],[6,"Either",732],[5,"Positions",733],[10,"Product",734],[5,"Rev",735],[5,"Skip",736],[5,"SkipAny",737],[5,"SkipAnyWhile",738],[5,"BroadcastContext",739],[5,"StepBy",740],[10,"Sum",734],[5,"Take",741],[5,"TakeAny",742],[5,"TakeAnyWhile",743],[5,"TryFold",744],[10,"Try",745],[10,"TryFoldAndReduce",310],[5,"TryFoldWith",744],[5,"Update",746],[5,"WhileSome",747],[5,"MaxLen",748],[5,"MinLen",748],[10,"ProducerCallback",708],[5,"Zip",749],[5,"ZipEq",750],[5,"AssemblyMid",454],[5,"ArgumentMid",454],[5,"Rotation",490],[5,"Argument",514],[5,"HasCurve",540],[5,"HasMsmEngine",540],[5,"PlonkEngineConfig",540],[5,"PlonkEngine",540],[10,"CurveAffine",751],[10,"MsmAccel",676],[5,"H2cEngine",540],[5,"NoCurve",540],[5,"NoMsmEngine",540],[17,"CoeffsDescriptor"],[17,"BaseDescriptor"],[8,"ExpressionMid",10],[8,"GateMid",10],[8,"ArgumentMid",286],[8,"ArgumentMid",514],[5,"H2cMsmCoeffsDesc",540],[5,"H2cMsmBaseDesc",540]],"r":[[310,698],[311,698],[312,698],[313,698],[321,698],[322,700],[323,717],[341,752],[379,753],[422,717]],"b":[[129,"impl-Display-for-ColumnMid"],[130,"impl-Debug-for-ColumnMid"],[273,"impl-Mul%3CF%3E-for-Expression%3CF,+V%3E"],[274,"impl-Mul-for-Expression%3CF,+V%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAMMBMQAAAAkAFAAAABcAAAAdAAAAIAAAACIAEwA3ABcAUgAyAI8ABACVAAAAlwAJAKsAAQCuAAsAuwACAL8AAADBACoA7QAKAP4ABQAIAQMADQEAABABAAASAQoAHgEAACABCAAqAQIALgEIAEUBAABJAQEAVwEBAFsBAABqAQAAdQEAALgBAQC8AQAAwAEAAMgBCADSAQgA3QEBAOEBCQDsAQQA8gEEAPgBAQD8AQAA/gEEAAQCCAAOAgIAEgJIAGQCCgB4AjUA"}],\
["halo2_proofs",{"t":"PPPGCNNCNNNNCNNNENNCCNCNNNNRRRTKKRKTRRTMMMMMNMMMMMMMNNMMHNNMNNMMFFKRKRFFFRFFFNNNNNNNNNNNNNNNNNNNNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNOMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNMNMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNMNMNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNCNNFFNNNNNNNNNNNNNNNNNNNNNFFFFNNNNNNNNNNNNNNNNNNCNNNNNNNNPFPPGPPPFPPPGNNNNNNNNNNNNNNNHNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOGFPPPFFFFFOONNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNHHNONNNNNNNONNNNNNNNOOOOOONOOOONNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFFNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPPGGKPPPFPKFPPKRPFPFFGGGGFFPPFKRPFPPPPPPPPPPPRKPFPPFFPPPFPFPPFFPNNNNNNNNNNNNONMNNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNMNNMNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONMNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHNNNNOONNNNNNNNNNNNNNNNNONONONONNNNNNNONNNHMNNMNNMNNNNNNNNMNNNNNNONNNNONNNNNNNNNNNNNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHNNNNNNNNNNNNNNNNNNNNNNNNMNNOOFRFKNNNNNNNNNNNCNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNCNCNNNMNNNNNMNNNNNNNNNNNNFTKRRKRRKKRKRKTTRKNNNMMMNNMNNMMNMNNNMNMNMNNNNMNNNMMMMNMMMMMNNNNMNMCCCCFFINNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNCCCCFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFKRKKKKKNNNNNNNNNNNNNMNNMNNNNNNNNNNNNMNNNNNNNMNMMNNNNNNNNMNMNMNMNNNNNNNNNNNNNNNNNNMNMN","n":["Processed","RawBytes","RawBytesUnchecked","SerdeFormat","arithmetic","borrow","borrow_mut","circuit","clone","clone_into","deref","deref_mut","dev","drop","fmt","from","halo2curves","init","into","plonk","poly","to_owned","transcript","try_from","try_into","type_id","vzip","AffineExt","Base","Base","CURVE_ID","CurveAffine","CurveExt","CurveExt","Field","ONE","ScalarExt","ScalarExt","ZERO","a","a","b","b","coordinates","cube","double","endo","from_xy","hash_to_curve","invert","is_on_curve","is_on_curve","is_zero","is_zero_vartime","jacobian_coordinates","new_jacobian","parallelize","pow","pow_vartime","random","sqrt","sqrt_alt","sqrt_ratio","square","AssignedCell","Cell","Chip","Config","Layouter","Loaded","NamespacedLayouter","Region","RegionIndex","Root","SimpleFloorPlanner","Table","Value","add","add","add","add","add","add","add","add","add","add","and_then","as_mut","as_ref","assert_if_known","assign","assign_advice","assign_advice_from_constant","assign_advice_from_instance","assign_cell","assign_fixed","assign_region","assign_region","assign_table","assign_table","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cell","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cloned","cloned","column","config","constrain_constant","constrain_equal","constrain_instance","constrain_instance","copied","copied","copy_advice","cube","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","double","drop","drop","drop","drop","drop","drop","drop","drop","drop","enable_selector","error_if_known_and","evaluate","evaluate","floor_planner","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","get_challenge","get_challenge","get_root","get_root","init","init","init","init","init","init","init","init","instance_value","into","into","into","into","into","into","into","into","into_field","invert","known","loaded","map","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","name_column","namespace","neg","pop_namespace","pop_namespace","push_namespace","push_namespace","region_index","row_offset","square","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","synthesize","to_field","to_owned","to_owned","to_owned","to_owned","transpose_array","transpose_vec","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unknown","unzip","value","value_field","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","zip","V1","V1Pass","assign_region","assign_table","borrow","borrow","borrow_mut","borrow_mut","constrain_instance","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","get_challenge","get_root","init","init","into","into","pop_namespace","push_namespace","single_pass","synthesize","try_from","try_from","try_into","try_into","type_id","type_id","v1","vzip","vzip","SimpleFloorPlanner","SingleChipLayouter","assign_region","assign_table","borrow","borrow_mut","constrain_instance","deref","deref_mut","drop","fmt","from","get_challenge","get_root","init","into","new","pop_namespace","push_namespace","try_from","try_into","type_id","vzip","AssignmentPass","MeasurementPass","V1","V1Pass","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","init","init","into","into","strategy","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","CellNotAssigned","CircuitLayout","ConstraintNotSatisfied","ConstraintPoisoned","FailureLocation","InRegion","InstanceCellNotAssigned","Lookup","MockProver","OutsideRegion","Permutation","Shuffle","VerifyFailure","advice","advice_values","annotate_column","assert_satisfied","assert_satisfied_at_rows","assign_advice","assign_fixed","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","circuit_dot_graph","clone","clone_into","copy","cost_model","cs","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","emit","enable_selector","enter_region","eq","eq","exit_region","fill_from_row","fixed","fixed_values","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","get_challenge","init","init","init","init","instance","into","into","into","into","mark_equality_cells","metadata","pop_namespace","push_namespace","query_instance","render","run","selectors","show_equality_constraints","show_labels","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","usable_rows","verify","verify_at_rows","view_height","view_width","vzip","vzip","vzip","vzip","offset","region","row","cell_values","column","column","column","constraint","constraint","gate","gate","gate_offset","gate_offset","location","location","location","location","lookup_index","name","name","offset","region","region","row","shuffle_index","CommitmentScheme","CostOptions","IPA","KZGGWC","KZGSHPLONK","Lookup","ModelCircuit","Permutation","Poly","Shuffle","advice","advice_columns","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","column_queries","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","eq","eq","fixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_circuit_to_cost_model_options","from_circuit_to_model_circuit","from_str","gate_degree","init","init","init","init","init","init","init","instance","into","into","into","into","into","into","into","into_model_circuit","k","k","lookup","lookups","max_deg","max_degree","partial_cmp","permutation","permutations","point_sets","rotations","serialize","serialize","shuffle","shuffles","size","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Column","Constraint","Gate","Region","VirtualCell","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","column_type","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","index","init","init","init","init","init","into","into","into","into","into","new","partial_cmp","partial_cmp","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","Advice","Advice","Advice","Any","Assigned","Assignment","Backend","BoundsFailure","BoundsFailure","Challenge","Challenge","Circuit","Column","ColumnNotInPermutation","ColumnNotInPermutation","ColumnType","Config","Constant","ConstraintSystem","ConstraintSystemFailure","ConstraintSystemMid","Constraints","Error","ErrorBack","ErrorFront","Expression","FirstPhase","Fixed","Fixed","Fixed","FixedQuery","FloorPlanner","FloorPlanner","Frontend","Instance","Instance","Instance","InstanceTooLarge","InvalidInstances","Negated","NotEnoughColumnsForConstants","NotEnoughRowsAvailable","NotEnoughRowsAvailable","Opening","Other","Other","Params","Phase","Product","ProvingKey","Rational","Scaled","SecondPhase","Selector","Selector","Sum","Synthesis","TableColumn","TableError","ThirdPhase","Transcript","Trivial","VerifyingKey","VirtualCells","Zero","add","add","add","add","add","add","add","add_assign","add_assign","advice_column","advice_column_in","advice_column_phase","advice_column_phase","advice_queries","annotate_column","annotate_lookup_any_column","annotate_lookup_column","assign_advice","assign_fixed","blinding_factors","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","challenge_phase","challenge_phase","challenge_usable_after","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","column_index","column_index","column_type","column_type","complex_selector","complexity","compress_selectors","configure","configure_with_params","constants","copy","create_gate","create_proof","create_proof_with_engine","cube","cur","default","degree","degree","denominator","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","directly_convert_selectors_to_fixed","double","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","enable","enable_constant","enable_equality","enable_selector","enter_region","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","evaluate","evaluate","evaluate_lazy","exit_region","expr","expr","fill_from_row","fixed_column","fixed_commitments","fixed_queries","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","gates","gates","general_column_annotations","general_column_annotations","get_any_query_index","get_challenge","get_domain","get_vk","hash","hash","hash","hash","hash","hash","hash","hash","hash_into","identifier","index","index","index","index","index","index","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","instance_column","instance_queries","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","invert","is_simple","is_zero_vartime","keygen_pk","keygen_pk_custom","keygen_vk","keygen_vk_custom","lookup","lookup_any","lookup_table_column","lookups","lookups","minimum_degree","minimum_rows","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","neg","neg","neg","new","next","not_enough_rows_available","not_enough_rows_available","num_advice_columns","num_advice_columns","num_challenges","num_challenges","num_fixed_columns","num_fixed_columns","num_instance_columns","num_instance_columns","num_selectors","numerator","params","partial_cmp","partial_cmp","partial_cmp","permutation","permutation","phase","phases","pinned","pk_read","pop_namespace","prev","product","push_namespace","query_advice","query_any","query_cell","query_cell","query_cell","query_cell","query_cell","query_cell","query_cells","query_challenge","query_fixed","query_instance","query_instance","query_selector","read","read","rot","rotation","rotation","selector","set_minimum_degree","shuffle","shuffles","shuffles","source","square","square","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sum","synthesize","synthesize","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sealed","to_sealed","to_sealed","to_string","to_string","to_string","transcript_repr","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unblinded_advice_column","unblinded_advice_column_in","unblinded_advice_columns","verify_proof","vk_read","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_selector","without_witnesses","write","write","current_k","current_k","EvaluationDomain","Output","Rotation","VerificationStrategy","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","coeff_from_vec","coeff_to_extended","commitment","constant_extended","constant_lagrange","cur","deref","deref","deref_mut","deref_mut","divide_by_vanishing_poly","drop","drop","empty_coeff","empty_extended","empty_lagrange","eq","extended_k","extended_len","extended_to_coeff","finalize","fmt","fmt","from","from","get_extended_omega","get_omega","get_omega_inv","get_quotient_poly_degree","hash","init","init","into","into","ipa","k","kzg","l_i_range","lagrange_from_vec","lagrange_to_coeff","new","new","next","partial_cmp","pinned","prev","process","rotate_extended","rotate_omega","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Blind","COMMIT_INSTANCE","CommitmentScheme","Curve","Guard","MSM","MSM","MSMAccumulator","Params","ParamsProver","ParamsProver","ParamsVerifier","ParamsVerifier","Prover","QUERY_INSTANCE","QUERY_INSTANCE","Scalar","Verifier","add","add_assign","add_assign","add_msm","append_term","bases","borrow","borrow_mut","check","clone","clone_into","commit","commit_lagrange","create_proof","create_proof_with_engine","default","deref","deref_mut","downsize","drop","empty_msm","eq","eval","fmt","from","init","into","k","mul","mul_assign","mul_assign","n","new","new","new","new","new_params","read","read_params","scalars","scale","to_owned","try_from","try_into","type_id","verify_proof","vzip","write","commitment","msm","multiopen","strategy","IPACommitmentScheme","ParamsIPA","ParamsVerifierIPA","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","commit","commit_lagrange","create_proof_with_engine","deref","deref","deref_mut","deref_mut","downsize","drop","drop","empty_msm","fmt","fmt","from","from","init","init","into","into","k","n","new","new_params","read","read_params","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","verify_proof","vzip","vzip","write","MSMIPA","add_constant_term","add_msm","add_msm","add_to_g_scalars","add_to_u_scalar","add_to_w_scalar","append_term","bases","borrow","borrow_mut","check","clone","clone_into","deref","deref_mut","drop","eval","fmt","from","init","into","new","scalars","scale","to_owned","try_from","try_into","type_id","vzip","ProverIPA","VerifierIPA","borrow","borrow","borrow_mut","borrow_mut","create_proof_with_engine","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","init","init","into","into","new","new","try_from","try_from","try_into","try_into","type_id","type_id","verify_proof","vzip","vzip","Accumulator","AccumulatorStrategy","GuardIPA","SingleStrategy","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compute_g","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","finalize","finalize","fmt","fmt","fmt","fmt","from","from","from","from","g","init","init","init","init","into","into","into","into","new","new","process","process","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","u_packed","use_challenges","use_g","vzip","vzip","vzip","vzip","commitment","msm","multiopen","strategy","KZGCommitmentScheme","ParamsKZG","ParamsVerifierKZG","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","commit","commit_lagrange","commit_lagrange","deref","deref","deref","deref_mut","deref_mut","deref_mut","downsize","downsize","drop","drop","drop","empty_msm","empty_msm","fmt","fmt","fmt","from","from","from","from_parts","init","init","init","into","into","into","k","k","n","n","new","new_params","read","read","read_custom","read_custom","read_params","setup","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verifier_params","vzip","vzip","vzip","write","write","write_custom","write_custom","DualMSM","MSMKZG","add_msm","add_msm","append_term","bases","borrow","borrow","borrow_mut","borrow_mut","check","check","clone","clone","clone_into","clone_into","combine_with_base","default","default","deref","deref","deref_mut","deref_mut","drop","drop","eval","fmt","fmt","from","from","init","init","into","into","new","new","scalars","scale","scale","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ProverGWC","ProverSHPLONK","VerifierGWC","VerifierSHPLONK","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","create_proof_with_engine","create_proof_with_engine","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","new","new","new","new","new","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","verify_proof","verify_proof","vzip","vzip","vzip","vzip","AccumulatorStrategy","GuardKZG","SingleStrategy","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","finalize","finalize","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","new","new","new","new","process","process","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with","Blake2bRead","Blake2bWrite","Challenge255","EncodedChallenge","Input","Transcript","TranscriptRead","TranscriptReadBuffer","TranscriptWrite","TranscriptWriterBuffer","as_challenge_scalar","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","common_point","common_point","common_point","common_scalar","common_scalar","common_scalar","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","finalize","finalize","fmt","fmt","fmt","from","from","from","get_scalar","get_scalar","init","init","init","init","init","init","init","into","into","into","new","new","read_point","read_point","read_scalar","read_scalar","squeeze_challenge","squeeze_challenge","squeeze_challenge","squeeze_challenge_scalar","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write_point","write_point","write_scalar","write_scalar"],"q":[[0,"halo2_proofs"],[27,"halo2_proofs::arithmetic"],[64,"halo2_proofs::circuit"],[293,"halo2_proofs::circuit::floor_planner"],[331,"halo2_proofs::circuit::floor_planner::single_pass"],[354,"halo2_proofs::circuit::floor_planner::v1"],[385,"halo2_proofs::dev"],[495,"halo2_proofs::dev::FailureLocation"],[498,"halo2_proofs::dev::VerifyFailure"],[520,"halo2_proofs::dev::cost_model"],[664,"halo2_proofs::dev::metadata"],[779,"halo2_proofs::plonk"],[1424,"halo2_proofs::plonk::ErrorBack"],[1425,"halo2_proofs::plonk::ErrorFront"],[1426,"halo2_proofs::poly"],[1498,"halo2_proofs::poly::commitment"],[1564,"halo2_proofs::poly::ipa"],[1568,"halo2_proofs::poly::ipa::commitment"],[1613,"halo2_proofs::poly::ipa::msm"],[1643,"halo2_proofs::poly::ipa::multiopen"],[1675,"halo2_proofs::poly::ipa::strategy"],[1748,"halo2_proofs::poly::kzg"],[1752,"halo2_proofs::poly::kzg::commitment"],[1825,"halo2_proofs::poly::kzg::msm"],[1874,"halo2_proofs::poly::kzg::multiopen"],[1939,"halo2_proofs::poly::kzg::strategy"],[1999,"halo2_proofs::transcript"],[2087,"halo2_backend::helpers"],[2088,"core::fmt"],[2089,"core::result"],[2090,"core::any"],[2091,"pasta_curves::arithmetic::curves"],[2092,"subtle"],[2093,"ff"],[2094,"core::cmp"],[2095,"core::ops::arith"],[2096,"core::ops::function"],[2097,"alloc::boxed"],[2098,"core::marker"],[2099,"core::clone"],[2100,"core::convert"],[2101,"rand_core"],[2102,"halo2_frontend::circuit::value"],[2103,"halo2_frontend::plonk::assigned"],[2104,"halo2_frontend::circuit"],[2105,"halo2_frontend::plonk::circuit"],[2106,"halo2_frontend::plonk::circuit::expression"],[2107,"alloc::string"],[2108,"core::borrow"],[2109,"halo2_frontend::circuit::floor_planner::single_pass"],[2110,"halo2_frontend::circuit::layouter"],[2111,"halo2_frontend::circuit::table_layouter"],[2112,"core::iter::traits::collect"],[2113,"halo2_middleware::circuit"],[2114,"core::option"],[2115,"alloc::vec"],[2116,"halo2_frontend::circuit::floor_planner::v1"],[2117,"halo2_frontend::dev"],[2118,"core::iter::traits::iterator"],[2119,"halo2_frontend::dev::failure"],[2120,"halo2_frontend::plonk::circuit::constraint_system"],[2121,"halo2_frontend::dev::graph::layout"],[2122,"plotters::coord"],[2123,"plotters::drawing::area"],[2124,"plotters_backend"],[2125,"core::ops::range"],[2126,"halo2_frontend::dev::cost_model"],[2127,"serde::de"],[2128,"serde::ser"],[2129,"halo2_frontend::dev::metadata"],[2130,"std::collections::hash::map"],[2131,"core::hash"],[2132,"halo2_middleware::poly"],[2133,"halo2_backend::plonk"],[2134,"halo2_proofs::plonk::error"],[2135,"halo2_backend::transcript"],[2136,"halo2_middleware::zal::impls"],[2137,"halo2_middleware::zal::traits"],[2138,"std::io::error"],[2139,"halo2_backend::plonk::circuit"],[2140,"halo2_backend::poly::domain"],[2141,"halo2_backend::poly::commitment"],[2142,"halo2_frontend::plonk::lookup"],[2143,"core::default"],[2144,"halo2_frontend::plonk::permutation"],[2145,"halo2_frontend::plonk::circuit::expression::sealed"],[2146,"std::io"],[2147,"halo2_frontend::plonk::shuffle"],[2148,"core::error"],[2149,"halo2_backend::poly::strategy"],[2150,"halo2_backend::poly"],[2151,"halo2_backend::poly::query"],[2152,"halo2_backend::poly::ipa::commitment"],[2153,"halo2_backend::poly::ipa::msm"],[2154,"halo2_backend::poly::ipa::strategy"],[2155,"halo2_backend::poly::ipa::multiopen::prover"],[2156,"halo2_backend::poly::ipa::multiopen::verifier"],[2157,"halo2_backend::poly::kzg::commitment"],[2158,"pairing"],[2159,"halo2_backend::poly::kzg::msm"],[2160,"halo2_backend::poly::kzg::multiopen::gwc::prover"],[2161,"halo2_backend::poly::kzg::multiopen::shplonk::prover"],[2162,"halo2_backend::poly::kzg::multiopen::gwc::verifier"],[2163,"halo2_backend::poly::kzg::multiopen::shplonk::verifier"],[2164,"halo2_backend::poly::kzg::strategy"],[2165,"halo2_backend::arithmetic"],[2166,"halo2_frontend::circuit::floor_planner"],[2167,"halo2_frontend::dev::graph"],[2168,"halo2_proofs::plonk::prover"],[2169,"halo2_proofs::plonk::keygen"],[2170,"halo2_backend::plonk::verifier"],[2171,"halo2_backend::poly::ipa"],[2172,"halo2_backend::poly::ipa::commitment::prover"],[2173,"halo2_backend::poly::ipa::commitment::verifier"],[2174,"halo2_backend::poly::kzg"]],"i":[3,3,3,0,0,3,3,0,3,3,3,3,0,3,3,3,0,3,3,0,0,3,0,3,3,3,3,19,19,13,19,0,0,13,0,20,19,13,20,19,13,19,13,13,20,20,19,13,19,20,19,13,20,20,19,19,0,20,20,20,20,20,20,20,0,0,0,59,0,59,0,0,0,53,0,0,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,41,41,41,49,41,53,54,53,54,64,36,56,55,44,41,49,54,64,36,56,55,44,41,49,54,44,36,56,55,44,36,56,55,44,36,36,55,59,41,41,53,54,36,36,44,36,36,64,36,56,56,55,44,41,49,54,64,36,56,55,44,41,49,54,36,64,36,56,55,44,41,49,54,54,41,36,36,44,0,64,36,56,55,44,41,49,54,64,36,36,56,56,55,44,41,41,49,49,54,36,53,54,53,54,64,36,56,55,44,41,49,54,41,64,36,56,55,44,41,49,54,36,36,36,59,36,36,36,36,36,36,36,36,36,36,36,41,53,36,53,54,53,54,55,55,36,36,36,36,36,36,36,36,36,36,36,64,36,36,56,55,44,36,36,64,36,56,55,44,41,49,54,64,36,56,55,44,41,49,54,64,36,56,55,44,41,49,54,36,36,44,44,64,36,56,55,44,41,49,54,36,0,0,80,80,81,80,81,80,80,81,80,81,80,81,80,81,80,81,80,80,80,81,80,81,80,80,80,0,81,81,80,81,80,81,80,0,81,80,0,0,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,0,0,0,0,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,0,83,84,83,84,83,84,83,84,92,0,92,92,0,89,92,92,0,89,92,92,0,85,85,85,85,85,85,85,89,92,91,85,89,92,91,85,0,89,89,85,0,85,91,89,92,91,85,89,92,91,85,89,92,91,85,92,85,85,89,92,85,85,85,85,89,89,92,92,91,85,89,92,91,85,85,89,92,91,85,85,89,92,91,85,91,0,85,85,85,91,85,85,91,91,89,89,92,89,92,91,85,89,92,91,85,89,92,91,85,85,85,85,91,91,89,92,91,85,217,217,218,219,220,221,222,219,223,220,221,220,221,219,224,225,222,224,224,225,220,220,221,221,225,0,0,107,107,107,0,0,0,0,0,108,106,107,108,100,101,102,103,106,107,108,100,101,102,103,106,100,101,102,103,100,101,102,103,100,106,107,108,100,101,102,103,106,107,108,100,101,102,103,106,102,106,107,108,100,101,102,103,106,107,100,108,107,108,100,101,102,103,106,107,108,100,101,102,103,106,0,0,100,108,107,108,100,101,102,103,106,108,107,108,100,101,102,103,106,108,108,106,108,106,106,108,100,108,106,106,100,102,106,108,106,106,100,101,102,103,107,108,100,101,102,103,106,107,108,100,101,102,103,106,107,108,100,101,102,103,106,107,108,100,101,102,103,106,0,0,0,0,0,110,114,111,112,113,110,114,111,112,113,110,111,112,113,110,111,112,113,110,114,110,110,114,111,112,113,110,114,111,112,113,110,114,111,112,113,110,114,111,112,113,110,110,114,114,111,111,112,112,113,113,110,110,114,114,114,114,111,111,112,112,113,113,113,113,113,110,110,110,114,111,112,113,110,114,111,112,113,110,110,114,110,111,112,113,110,114,111,112,113,110,114,111,112,113,110,114,111,112,113,110,114,111,112,113,110,114,111,112,113,0,71,119,0,0,0,130,139,40,0,119,0,0,139,40,0,78,119,0,139,0,0,0,0,0,0,0,0,71,119,0,0,78,130,0,71,119,139,139,119,40,139,40,139,139,40,78,0,119,0,38,119,0,0,119,119,40,0,40,0,139,38,0,0,38,38,38,38,38,38,38,119,38,38,90,90,90,123,90,76,90,90,76,76,90,130,123,71,139,124,125,38,140,90,129,43,141,142,143,63,127,50,70,119,42,51,48,40,130,123,71,139,124,125,38,140,90,129,43,141,142,143,63,127,50,70,119,42,51,48,40,90,123,90,123,71,124,125,38,90,43,63,127,50,70,119,42,51,48,123,71,124,125,38,90,43,63,127,50,70,119,42,51,48,71,43,50,127,127,43,43,90,119,90,78,78,90,76,90,0,0,38,43,90,90,119,38,130,123,71,139,124,125,38,140,90,129,43,141,142,143,63,127,50,70,119,42,51,48,40,130,123,71,139,124,125,38,140,90,129,43,141,142,143,63,127,50,70,119,42,51,48,40,90,38,130,123,71,139,124,125,38,140,90,129,43,141,142,143,63,127,50,70,119,42,51,48,40,63,90,90,76,76,71,38,43,63,127,50,70,119,42,51,48,38,119,119,76,63,70,76,90,124,90,130,130,123,71,139,139,124,125,38,140,90,129,43,141,142,143,63,127,50,70,119,42,51,48,40,40,130,130,130,123,123,71,71,71,71,139,139,124,125,38,38,38,38,38,140,90,129,43,43,43,43,43,141,142,143,63,127,50,70,70,119,42,51,48,40,124,125,90,123,90,123,90,76,124,125,71,43,63,50,70,42,51,48,124,119,43,63,70,43,127,70,130,123,71,139,124,125,38,140,90,129,43,141,142,143,63,127,50,70,119,42,51,48,40,50,90,90,130,123,71,139,124,125,38,140,90,129,43,141,142,143,63,127,50,70,119,42,51,48,40,140,38,63,38,0,0,0,0,90,90,90,90,123,123,90,38,38,38,38,119,119,38,38,38,38,119,43,43,139,40,90,123,90,123,90,123,90,123,90,38,78,71,43,50,90,123,70,90,124,0,76,43,119,76,129,129,126,71,43,42,51,48,119,129,129,76,129,129,124,125,43,127,127,90,90,90,90,123,139,38,119,38,38,38,38,38,38,119,38,38,119,156,78,124,125,123,71,124,125,38,90,43,63,127,50,70,119,42,51,48,141,142,143,130,139,40,124,130,123,71,139,124,125,38,140,90,129,43,43,43,43,141,142,143,63,127,50,70,119,42,51,48,40,130,123,71,139,124,125,38,140,90,129,43,141,142,143,63,127,50,70,119,42,51,48,40,130,123,71,139,124,125,38,140,90,129,43,141,142,143,63,127,50,70,119,42,51,48,40,90,90,123,0,0,130,123,71,139,124,125,38,140,90,129,43,141,142,143,63,127,50,70,119,42,51,48,40,140,78,124,125,226,227,0,167,0,0,122,149,122,149,122,149,122,149,122,149,149,0,149,149,122,122,149,122,149,149,122,149,149,149,149,122,149,149,149,167,122,149,122,149,149,149,149,149,122,122,149,122,149,0,149,0,149,149,149,167,149,122,122,149,122,167,149,149,122,149,122,149,122,149,122,149,122,149,0,181,0,165,166,0,181,166,0,0,165,0,165,0,178,166,165,0,175,175,175,176,176,176,175,175,176,175,175,177,152,178,178,175,175,175,152,175,181,175,176,175,175,175,175,152,175,175,175,152,177,178,166,175,165,152,165,176,176,175,175,175,175,166,175,152,0,0,0,0,0,0,0,187,189,187,189,187,187,187,187,0,187,189,187,189,187,187,189,187,187,189,187,189,187,189,187,189,187,187,187,189,187,189,187,187,189,187,189,187,189,0,187,189,187,0,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,0,0,191,192,191,192,191,191,192,191,192,191,192,191,192,191,192,191,192,191,192,191,192,191,192,191,192,191,192,192,191,192,0,0,0,0,190,193,194,195,190,193,194,195,190,193,190,193,190,190,193,194,195,190,193,194,195,190,193,194,195,194,195,190,193,194,195,190,193,194,195,193,190,193,194,195,190,193,194,195,194,195,194,195,190,193,190,193,194,195,190,193,194,195,190,193,194,195,193,190,190,190,193,194,195,0,0,0,0,0,0,0,196,198,200,196,198,200,196,198,196,198,196,196,198,196,198,200,196,198,200,196,198,196,198,200,196,198,196,198,200,196,198,200,196,196,198,200,196,198,200,196,198,196,198,196,200,196,198,196,198,200,196,196,198,196,198,200,196,198,200,196,198,200,196,196,198,200,196,198,196,198,0,0,199,201,199,199,199,201,199,201,199,201,199,201,199,201,199,199,201,199,201,199,201,199,201,199,199,201,199,201,199,201,199,201,199,201,199,199,201,199,201,199,201,199,201,199,201,199,201,0,0,0,0,203,205,204,206,203,205,204,206,203,204,203,205,204,206,203,205,204,206,203,205,204,206,203,205,204,206,203,205,204,206,203,205,204,206,203,205,204,206,203,205,204,204,206,203,205,204,206,203,205,204,206,203,205,204,206,205,206,203,205,204,206,0,0,0,207,208,209,207,208,209,207,208,209,207,208,209,207,208,209,207,208,209,207,208,209,208,209,207,208,209,207,208,209,207,208,209,207,208,209,208,208,209,209,208,209,207,208,209,207,208,209,207,208,209,207,208,209,207,208,209,208,0,0,0,0,131,0,0,0,0,0,131,212,213,214,212,213,214,212,213,214,212,213,214,151,212,213,151,212,213,212,213,214,214,212,213,214,212,213,214,215,213,212,213,214,212,213,214,131,214,216,215,212,212,213,213,214,212,213,214,131,214,168,212,168,212,151,212,213,151,212,213,214,212,213,214,212,213,214,212,213,214,212,213,214,132,213,132,213],"f":"`````{{{b{c}}}{{b{e}}}{}{}}{{{b{dc}}}{{b{de}}}{}{}}`{{{b{f}}}f}{{{b{c}}{b{de}}}h{}{}}{j{{b{c}}}{}}{j{{b{dc}}}{}}`{jh}{{{b{f}}{b{dl}}}{{A`{hn}}}}{cc{}}`{{}j}{ce{}{}}``{{{b{c}}}e{}{}}`{c{{A`{e}}}{}{}}0{{{b{c}}}Ab{}}3````````````{{}c{}}000{{{b{{Aj{}{{Ad{c}}{Af{e}}{Ah{g}}}}}}}{{An{{Al{{Aj{}{{Ad{c}}{Af{e}}{Ah{g}}}}}}}}}{B`Bb}{B`Bb}{{Bf{}{{Bd{}}{Ad{}}}}}}{{{b{Bh}}}Bh}0{{{b{{Bf{}{{Ad{c}}{Af{e}}{Bd{g}}}}}}}{{Bf{}{{Ad{c}}{Af{e}}{Bd{g}}}}}B`B`{{Aj{}{{Ah{}}{Ad{}}{Bj{}}{Bj{}}}}{Bl{c}}{Bl{c}}}}{{cc}{{An{{Aj{}{{Ad{e}}{Af{c}}{Ah{g}}}}}}}{B`Bb}{B`Bb}{{Bf{}{{Bd{}}{Ad{}}}}}}{{{b{Bn}}}{{Cb{C`}}}}{{{b{Bh}}}{{An{Bh}}}}{{{b{{Bf{}{{Ad{c}}{Af{e}}{Bd{g}}}}}}}CdB`B`{{Aj{}{{Ah{}}{Ad{}}{Bj{}}{Bj{}}}}{Bl{c}}{Bl{c}}}}{{{b{{Aj{}{{Ad{c}}{Af{e}}{Ah{g}}}}}}}Cd{B`Bb}{B`Bb}{{Bf{}{{Bd{}}{Ad{}}}}}}{{{b{Bh}}}Cd}{{{b{Bh}}}Cf}{{{b{{Bf{}{{Ad{c}}{Af{e}}{Bd{g}}}}}}}{{Ch{eee}}}B`B`{{Aj{}{{Ah{}}{Ad{}}{Bj{}}{Bj{}}}}{Bl{c}}{Bl{c}}}}{{ccc}{{An{{Bf{}{{Ad{e}}{Af{c}}{Bd{g}}}}}}}B`B`{{Aj{}{{Ah{}}{Ad{}}{Bj{}}{Bj{}}}}{Bl{e}}{Bl{e}}}}{{{b{d{Cj{c}}}}e}hCl{{C`{{b{d{Cj{c}}}}j}}ClCnD`}}{{{b{Bh}}c}Bh{{Dd{{Cj{Db}}}}}}0{cBhDf}9{{{b{Bh}}}{{Ch{CdBh}}}}{{{b{Bh}}{b{Bh}}}{{Ch{CdBh}}}}?`````````````{{{Dh{c}}{Dh{{b{c}}}}}{}{{Dj{b}{{Bj{}}}}}{}}{{{b{{Dh{c}}}}{Dh{c}}}{}{}}{{{Dh{{b{c}}}}{Dh{c}}}{}{}}{{{Dh{c}}{b{{Dh{c}}}}}{}{{Dj{b}{{Bj{}}}}}{}}{{{Dh{{b{{Dl{c}}}}}}c}{}Bh}{{{b{{Dh{c}}}}{b{{Dh{c}}}}}{}{}}{{{Dh{e}}{Dh{e}}}{}{}{{Dj{}{{Bj{c}}}}}}{{{Dh{{b{{Dl{c}}}}}}{Dh{c}}}{}Bh}{{{Dh{{Dl{c}}}}{Dh{c}}}{}Bh}{{{Dh{{Dl{c}}}}c}{}Bh}{{{Dh{c}}g}{{Dh{e}}}{}{}{{Dn{c}{{Bj{{Dh{e}}}}}}}}{{{b{d{Dh{c}}}}}{{Dh{{b{dc}}}}}{}}{{{b{{Dh{c}}}}}{{Dh{{b{c}}}}}{}}{{{b{{Dh{c}}}}e}h{}{{Dn{{b{c}}}{{Bj{Cf}}}}}}{{{Dh{c}}}{{A`{cE`}}}{}}{{{b{d{Eb{c}}}}g{Ef{Ed}}jk}{{A`{{Eh{ic}}E`}}}Bh{{El{Ej}}}{{C`{}{{Bj{e}}}}}{}{{En{}{{Bj{{Dh{i}}}}}}}}{{{b{d{Eb{c}}}}g{Ef{Ed}}ji}{{A`{{Eh{ic}}E`}}}Bh{{El{Ej}}}{{C`{}{{Bj{e}}}}}{}}{{{b{d{Eb{c}}}}g{Ef{F`}}j{Ef{Ed}}j}{{A`{{Eh{cc}}E`}}}Bh{{El{Ej}}}{{C`{}{{Bj{e}}}}}}{{{b{d{Fb{c}}}}gFdjk}{{A`{hE`}}}Bh{{El{Ej}}}{{C`{}{{Bj{e}}}}}{{El{{Dl{c}}}}}{{En{}{{Bj{{Dh{i}}}}}}}}{{{b{d{Eb{c}}}}g{Ef{Ff}}jk}{{A`{{Eh{ic}}E`}}}Bh{{El{Ej}}}{{C`{}{{Bj{e}}}}}{}{{En{}{{Bj{{Dh{i}}}}}}}}{{{b{d{Fj{}{{Fh{c}}}}}}im}{{A`{kE`}}}{{Fj{e}}}Bh{{El{Ej}}}{{C`{}{{Bj{g}}}}}{}{{En{{Eb{e}}}{{Bj{{A`{kE`}}}}}}}}{{{b{d{Fl{ce}}}}im}{{A`{kE`}}}Bh{{Fj{c}}}{{El{Ej}}}{{C`{}{{Bj{g}}}}}{}{{En{{Eb{c}}}{{Bj{{A`{kE`}}}}}}}}{{{b{d{Fj{}{{Fh{c}}}}}}ik}{{A`{hE`}}}{{Fj{e}}}Bh{{El{Ej}}}{{C`{}{{Bj{g}}}}}{{En{{Fb{e}}}{{Bj{{A`{hE`}}}}}}}}{{{b{d{Fl{ce}}}}ik}{{A`{hE`}}}Bh{{Fj{c}}}{{El{Ej}}}{{C`{}{{Bj{g}}}}}{{En{{Fb{c}}}{{Bj{{A`{hE`}}}}}}}}{{{b{c}}}{{b{e}}}{}{}}0000000{{{b{dc}}}{{b{de}}}{}{}}0000000{{{b{{Eh{ce}}}}}Fn{}Bh}{{{b{{Dh{c}}}}}{{Dh{c}}}D`}{{{b{G`}}}G`}{{{b{Fn}}}Fn}{{{b{{Eh{ce}}}}}{{Eh{ce}}}D`{D`Bh}}{{{b{c}}{b{de}}}h{}{}}000{{{Dh{{b{dc}}}}}{{Dh{c}}}D`}{{{Dh{{b{c}}}}}{{Dh{c}}}D`}`{{{b{{Gf{}{{Gb{c}}{Gd{e}}}}}}}{{b{c}}}{GhD`}{GhD`}}{{{b{d{Eb{c}}}}Fne}{{A`{hE`}}}Bh{{El{{Dl{c}}}}}}{{{b{d{Eb{c}}}}FnFn}{{A`{hE`}}}Bh}{{{b{d{Fj{}{{Fh{c}}}}}}Fn{Ef{F`}}j}{{A`{hE`}}}{{Fj{e}}}Bh}{{{b{d{Fl{ce}}}}Fn{Ef{F`}}j}{{A`{hE`}}}Bh{{Fj{c}}}}{{{Dh{{b{dc}}}}}{{Dh{c}}}Gj}{{{Dh{{b{c}}}}}{{Dh{c}}}Gj}{{{b{{Eh{ce}}}}i{b{d{Eb{e}}}}{Ef{Ed}}j}{{A`{{Eh{ce}}E`}}}D`Bh{{El{Ej}}}{{C`{}{{Bj{g}}}}}}{{{b{{Dh{e}}}}}{{Dh{{Dl{c}}}}}Bh{{Gl{{Dl{c}}}}}}{{}{{Dh{c}}}{}}{j{{b{c}}}{}}00{{{b{G`}}}b}11111{j{{b{dc}}}{}}00000004{jh}000000{{{b{d{Fl{ce}}}}}hBh{{Fj{c}}}}1{{{b{d{Eb{c}}}}g{b{Gn}}j}{{A`{hE`}}}Bh{{El{Ej}}}{{C`{}{{Bj{e}}}}}}{{{b{{Dh{c}}}}e}{{A`{hE`}}}{}{{Dn{{b{c}}}{{Bj{Cf}}}}}}{{{Dh{{Dl{c}}}}}{{Dh{c}}}Bh}{{{Eh{{Dl{c}}c}}}{{Eh{cc}}}Bh}`{{{b{H`}}{b{dl}}}{{A`{hn}}}}{{{b{{Dh{c}}}}{b{dl}}}{{A`{hn}}}Gh}{{{b{G`}}{b{dl}}}{{A`{hn}}}}{{{b{Fn}}{b{dl}}}{{A`{hn}}}}{{{b{{Eh{ce}}}}{b{dl}}}{{A`{hn}}}Gh{GhBh}}{{{b{{Eb{c}}}}{b{dl}}}{{A`{hn}}}{GhBh}}{{{b{{Fb{c}}}}{b{dl}}}{{A`{hn}}}{GhBh}}{{{b{{Fl{ce}}}}{b{dl}}}{{A`{hn}}}{GhBh}{Gh{Fj{c}}}}{cc{}}{{{Dh{c}}}{{Dh{{Dl{c}}}}}Bh}1{jG`}222{{{b{dHb}}}{{Eb{c}}}Bh}33{{{b{dHd}}}{{Fb{c}}}Bh}4{e{{Dh{g}}}{}{{Hh{}{{Hf{{Dh{c}}}}}}}{{Hj{c}}}}{{{b{{Fj{}{{Fh{c}}}}}}Hl}{{Dh{e}}}{{Fj{e}}}Bh}{{{b{{Fl{ce}}}}Hl}{{Dh{c}}}Bh{{Fj{c}}}}{{{b{d{Fj{}{{Fh{c}}}}}}}{{b{dc}}}{{Fj{e}}}Bh}{{{b{d{Fl{ce}}}}}{{b{d}}}Bh{{Fj{c}}}}{{}j}0000000{{{b{d{Eb{c}}}}{Ef{F`}}j}{{A`{{Dh{c}}E`}}}Bh}{ce{}{}}0000000{{{Dh{e}}}{{Dh{{Dl{c}}}}}Bh{{El{{Dl{c}}}}}}{{{b{{Dh{e}}}}}{{Dh{{Dl{c}}}}}Bh{{Gl{{Dl{c}}}}}}{c{{Dh{c}}}{}}{{{b{{Gf{}{{Gb{c}}{Gd{e}}}}}}}{{b{e}}}{GhD`}{GhD`}}{{{Dh{c}}g}{{Dh{e}}}{}{}{{Dn{c}{{Bj{e}}}}}}{{{Dh{{b{{Dl{c}}}}}}c}{}Bh}{{{Dh{c}}{Dh{{b{c}}}}}{}{{Bl{b}{{Bj{}}}}}{}}{{{Dh{c}}{b{{Dh{c}}}}}{}{{Bl{b}{{Bj{}}}}}{}}{{{Dh{{b{{Dl{c}}}}}}{Dh{c}}}{}Bh}{{{Dh{{Dl{c}}}}{Dh{c}}}{}Bh}{{{Dh{{Dl{c}}}}c}{}Bh}{{{Dh{{b{c}}}}{Dh{c}}}{}{}}{{{b{{Dh{c}}}}{b{{Dh{c}}}}}{}{}}{{{b{{Dh{c}}}}{Dh{c}}}{}{}}{{{Dh{e}}{Dh{e}}}{}{}{{Bl{}{{Bj{c}}}}}}{{{b{d{Eb{c}}}}gi}hBh{{El{Ej}}}{{C`{}{{Bj{e}}}}}{{El{{Ef{Hn}}}}}}{{{b{d{Fj{}{{Fh{c}}}}}}i}{{Fl{ec}}}{{Fj{e}}}Bh{{El{Ej}}}{{Dn{}{{Bj{g}}}}}}{{{Dh{c}}}{}I`}{{{b{d{Fj{}{{Fh{c}}}}}}{Ib{Ej}}}h{{Fj{e}}}Bh}{{{b{d{Fl{ce}}}}{Ib{Ej}}}hBh{{Fj{c}}}}{{{b{d{Fj{}{{Fh{c}}}}}}i}h{{Fj{e}}}Bh{{El{Ej}}}{{Dn{}{{Bj{g}}}}}}{{{b{d{Fl{ce}}}}i}hBh{{Fj{c}}}{{El{Ej}}}{{Dn{}{{Bj{g}}}}}}``{{{b{{Dh{e}}}}}{{Dh{{Dl{c}}}}}Bh{{Gl{{Dl{c}}}}}};<{{{Dh{c}}{b{{Dh{c}}}}}{}{{Id{b}{{Bj{}}}}}{}}{{{Dh{{b{{Dl{c}}}}}}c}{}Bh}{{{Dh{c}}{Dh{{b{c}}}}}{}{{Id{b}{{Bj{}}}}}{}}{{{Dh{{Dl{c}}}}{Dh{c}}}{}Bh}{{{Dh{e}}{Dh{e}}}{}{}{{Id{}{{Bj{c}}}}}}?>{{{Dh{{b{{Dl{c}}}}}}{Dh{c}}}{}Bh}{{{b{de}}{b{g}}{If{{Ef{Ff}}}}}{{A`{hE`}}}Bh{{Ih{c}}Ij}{{Il{c}}}}{{{b{{Dh{c}}}}}{{Dh{{Dl{e}}}}}{}Bh}{{{b{c}}}e{}{}}000{{{Dh{{In{c}}}}}{{In{{Dh{c}}}}}Gj}{{{Dh{e}}j}{{If{{Dh{c}}}}}{}{{Hh{}{{Hf{c}}}}}}{c{{A`{e}}}{}{}}000000000000000{{{b{c}}}Ab{}}0000000{{}{{Dh{c}}}{}}{{{Dh{{Ch{ce}}}}}{{Ch{{Dh{c}}{Dh{e}}}}}{}{}}{{{b{{Eh{ce}}}}}{{Dh{{b{c}}}}}{}Bh}{{{b{{Eh{ce}}}}}{{Dh{{Dl{e}}}}}{}Bh}{ce{}{}}0000000{{{Dh{c}}{Dh{e}}}{{Dh{{Ch{ce}}}}}{}{}}``{{{b{d{J`{ce}}}}im}{{A`{kE`}}}Bh{{Ih{c}}Ij}{{El{Ej}}}{{C`{}{{Bj{g}}}}}{}{{En{{Eb{c}}}{{Bj{{A`{kE`}}}}}}}}{{{b{d{J`{ce}}}}ik}{{A`{hE`}}}Bh{{Ih{c}}Ij}{{El{Ej}}}{{C`{}{{Bj{g}}}}}{{En{{Fb{c}}}{{Bj{{A`{hE`}}}}}}}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{dc}}}{{b{de}}}{}{}}0{{{b{d{J`{ce}}}}Fn{Ef{F`}}j}{{A`{hE`}}}Bh{{Ih{c}}Ij}}{j{{b{c}}}{}}0{j{{b{dc}}}{}}0{jh}0{{{b{Jb}}{b{dl}}}{{A`{hn}}}}{{{b{{J`{ce}}}}{b{dl}}}{{A`{hn}}}{GhBh}{Gh{Ih{c}}}}{cc{}}0{{{b{{J`{ce}}}}Hl}{{Dh{c}}}Bh{{Ih{c}}Ij}}{{{b{d{J`{ce}}}}}{{b{d}}}Bh{{Ih{c}}Ij}}{{}j}0??{{{b{d{J`{ce}}}}{Ib{Ej}}}hBh{{Ih{c}}Ij}}{{{b{d{J`{ce}}}}i}hBh{{Ih{c}}Ij}{{El{Ej}}}{{Dn{}{{Bj{g}}}}}}`{{{b{de}}{b{g}}{If{{Ef{Ff}}}}}{{A`{hE`}}}Bh{{Ih{c}}Ij}{{Il{c}}}}{c{{A`{e}}}{}{}}000{{{b{c}}}Ab{}}0`{ce{}{}}0``{{{b{d{Jd{ce}}}}im}{{A`{kE`}}}Bh{{Ih{c}}Ij}{{El{Ej}}}{{C`{}{{Bj{g}}}}}{}{{En{{Eb{c}}}{{Bj{{A`{kE`}}}}}}}}{{{b{d{Jd{ce}}}}ik}{{A`{hE`}}}Bh{{Ih{c}}Ij}{{El{Ej}}}{{C`{}{{Bj{g}}}}}{{En{{Fb{c}}}{{Bj{{A`{hE`}}}}}}}}{{{b{c}}}{{b{e}}}{}{}}{{{b{dc}}}{{b{de}}}{}{}}{{{b{d{Jd{ce}}}}Fn{Ef{F`}}j}{{A`{hE`}}}Bh{{Ih{c}}Ij}}{j{{b{c}}}{}}{j{{b{dc}}}{}}{jh}{{{b{{Jd{ce}}}}{b{dl}}}{{A`{hn}}}Bh{{Ih{c}}}}{cc{}}{{{b{{Jd{ce}}}}Hl}{{Dh{c}}}Bh{{Ih{c}}Ij}}{{{b{d{Jd{ce}}}}}{{b{d}}}Bh{{Ih{c}}Ij}}{{}j}={{{b{de}}{If{{Ef{Ff}}}}}{{A`{{Jd{ce}}E`}}}Bh{{Ih{c}}}}{{{b{d{Jd{ce}}}}{Ib{Ej}}}hBh{{Ih{c}}Ij}}{{{b{d{Jd{ce}}}}i}hBh{{Ih{c}}Ij}{{El{Ej}}}{{Dn{}{{Bj{g}}}}}}{c{{A`{e}}}{}{}}0{{{b{c}}}Ab{}}{ce{}{}}````{{{b{c}}}{{b{e}}}{}{}}0{{{b{dc}}}{{b{de}}}{}{}}0??>>=={{{b{Jf}}{b{dl}}}{{A`{hn}}}}{{{b{{Jh{ce}}}}{b{dl}}}{{A`{hn}}}{GhBh}{Gh{Ih{c}}}}==::44`66665544`````````````{{{b{{Jj{c}}}}}{{b{{If{{If{{Jl{c}}}}}}}}}{JnBb}}{{{b{{Jj{c}}}}{Ef{Ed}}}{{b{{Cj{{Jl{c}}}}}}}{JnBb}}{{{b{d{Jj{c}}}}g{Ef{Hn}}}hBh{{El{Ej}}}{{Dn{}{{Bj{e}}}}}}{{{b{{Jj{c}}}}}h{JnBb}}{{{b{{Jj{c}}}}ee}h{JnBb}{D`{K`{}{{Hf{j}}}}}}{{{b{d{Jj{c}}}}g{Ef{Ed}}jk}{{A`{hE`}}}Bh{{El{Ej}}}{{Dn{}{{Bj{e}}}}}{{El{{Dl{c}}}}}{{Dn{}{{Bj{{Dh{i}}}}}}}}{{{b{d{Jj{c}}}}g{Ef{Ff}}jk}{{A`{hE`}}}Bh{{El{Ej}}}{{Dn{}{{Bj{e}}}}}{{El{{Dl{c}}}}}{{Dn{}{{Bj{{Dh{i}}}}}}}}::::9999{{{b{e}}}EjBh{{Il{c}}}}{{{b{Kb}}}Kb}{{{b{c}}{b{de}}}h{}{}}{{{b{d{Jj{c}}}}{Ef{Hn}}j{Ef{Hn}}j}{{A`{hE`}}}Bh}`{{{b{{Jj{c}}}}}{{b{{Kd{c}}}}}{JnBb}}{{}Kf}{j{{b{c}}}{}}000{j{{b{dc}}}{}}000{jh}000{{{b{Kh}}{b{{Jj{c}}}}}hBh}{{{b{d{Jj{c}}}}g{b{Gn}}j}{{A`{hE`}}}Bh{{El{Ej}}}{{Dn{}{{Bj{e}}}}}}{{{b{d{Jj{c}}}}g}hBh{{El{Ej}}}{{Dn{}{{Bj{e}}}}}}{{{b{Kb}}{b{Kb}}}Cf}{{{b{Kh}}{b{Kh}}}Cf}{{{b{d{Jj{c}}}}}hBh}{{{b{d{Jj{c}}}}{Ef{Ff}}j{Dh{{Dl{c}}}}}{{A`{hE`}}}Bh}{{{b{{Jj{c}}}}}{{b{{If{{If{{Jl{c}}}}}}}}}{JnBb}}{{{b{{Jj{c}}}}{Ef{Ff}}}{{b{{Cj{{Jl{c}}}}}}}{JnBb}}{{{b{Kb}}{b{dl}}}{{A`{hn}}}}0{{{b{Kh}}{b{dl}}}{{A`{hn}}}}0{{{b{Kf}}{b{dl}}}{{A`{hn}}}}{{{b{{Jj{c}}}}{b{dl}}}{{A`{hn}}}{GhBh}}{cc{}}000{{{b{{Jj{c}}}}Hl}{{Dh{c}}}Bh}{{}j}000{{{b{{Jj{c}}}}}{{b{{If{{If{{Kj{c}}}}}}}}}{JnBb}}{ce{}{}}000{{KfCf}Kf}`{{{b{d{Jj{c}}}}{Ib{Ej}}}hBh}{{{b{d{Jj{c}}}}g}hBh{{El{Ej}}}{{Dn{}{{Bj{e}}}}}}{{{b{{Jj{c}}}}{Ef{F`}}j}{{A`{{Dh{c}}E`}}}Bh}{{KfKl{b{e}}{b{{L`{gKn}}}}}{{A`{hLb}}}Bh{{Il{c}}}Ld}{{Kl{b{e}}{If{{If{c}}}}}{{A`{{Jj{c}}E`}}}{JnBb}{{Il{c}}}}{{{b{{Jj{c}}}}}{{b{{If{{If{Cf}}}}}}}{JnBb}}66{{{b{c}}}e{}{}}{{{b{c}}}Ej{}}0{c{{A`{e}}}{}{}}0000000{{{b{c}}}Ab{}}000{{{b{{Jj{c}}}}}{{b{{Lf{j}}}}}{JnBb}}{{{b{{Jj{c}}}}}{{A`{h{If{Kh}}}}}{JnBb}}{{{b{{Jj{c}}}}ee}{{A`{h{If{Kh}}}}}{JnBb}{D`{K`{}{{Hf{j}}}}}}{{Kf{Lf{j}}}Kf}0????`````````````````````````````````````{{{b{c}}}{{b{e}}}{}{}}000000{{{b{dc}}}{{b{de}}}{}{}}000000{{{b{Lh}}}Lh}{{{b{Lj}}}Lj}{{{b{Ll}}}Ll}{{{b{Ln}}}Ln}{{{b{c}}{b{de}}}h{}{}}000{{{b{Lh}}{b{Lh}}}M`}`{j{{b{c}}}{}}000000{j{{b{dc}}}{}}000000{c{{A`{Ll}}}Mb}{c{{A`{Md}}}Mb}{jh}000000{{{b{Mf}}{b{Mf}}}Cf}{{{b{Lh}}{b{Lh}}}Cf}`{{{b{Mf}}{b{dl}}}{{A`{hn}}}}{{{b{Mh}}{b{dl}}}{{A`{hn}}}}{{{b{Lh}}{b{dl}}}{{A`{hn}}}}{{{b{Lj}}{b{dl}}}{{A`{hn}}}}{{{b{Ll}}{b{dl}}}{{A`{hn}}}}{{{b{Ln}}{b{dl}}}{{A`{hn}}}}{{{b{Md}}{b{dl}}}{{A`{hn}}}}{cc{}}000000{{Kl{b{e}}{If{{If{c}}}}}Mh{BbBhJn}{{Il{c}}}}{{Kl{b{e}}{If{{If{c}}}}Mf}Md{BbBhJn}{{Il{c}}}}{{{b{Bn}}}{{A`{Lh}}}}`{{}j}000000`{ce{}{}}000000{{{b{Mh}}Mf}Md}``````{{{b{Lh}}{b{Lh}}}{{Ib{M`}}}}````{{{b{Ll}}c}A`Mj}{{{b{Md}}c}A`Mj}```{{{b{c}}}e{}{}}000{c{{A`{e}}}{}{}}0000000000000{{{b{c}}}Ab{}}0000007777777`````{{{b{c}}}{{b{e}}}{}{}}0000{{{b{dc}}}{{b{de}}}{}{}}0000{{{b{Ml}}}Ml}{{{b{Mn}}}Mn}{{{b{N`}}}N`}{{{b{Nb}}}Nb}{{{b{c}}{b{de}}}h{}{}}000{{{b{Ml}}{b{Ml}}}M`}{{{b{Nd}}{b{Nd}}}M`}`{j{{b{c}}}{}}0000{j{{b{dc}}}{}}0000{jh}0000{{{b{Ml}}{b{Ml}}}Cf}{{{b{Nd}}{b{Nd}}}Cf}{{{b{Mn}}{b{Mn}}}Cf}{{{b{N`}}{b{N`}}}Cf}{{{b{Nb}}{b{Nb}}}Cf}{{{b{Ml}}{b{dl}}}{{A`{hn}}}}0{{{b{Nd}}{b{dl}}}{{A`{hn}}}}0{{{b{Mn}}{b{dl}}}{{A`{hn}}}}0{{{b{N`}}{b{dl}}}{{A`{hn}}}}0{{{b{Nb}}{b{dl}}}{{A`{hn}}}}0{{{Ef{Hn}}}Ml}{cc{}}0{{{Ch{MlNf}}}Nd}{{{Ch{cMlNf}}}Nd{{Dd{Bn}}}}{NhNd}3{{{Ch{jc}}}Mn{{Dd{Bn}}}}4{{{Ch{Mnjc}}}N`{{Dd{Bn}}}}5{{{Ch{jEj}}}Nb}{{{Ch{jEj{Nj{MlEj}}}}}Nb}{{{Ch{j{b{Bn}}{Nj{MlEj}}}}}Nb}{{{Ch{j{b{Bn}}}}}Nb}{{{b{Ml}}{b{dc}}}hNl}`{{}j}0000{ce{}{}}0000{{Hnj}Ml}{{{b{Ml}}{b{Ml}}}{{Ib{M`}}}}{{{b{Nd}}{b{Nd}}}{{Ib{M`}}}}{{{b{c}}}e{}{}}000{{{b{c}}}Ej{}}0000{c{{A`{e}}}{}{}}000000000{{{b{c}}}Ab{}}000077777`````````````````````````````````````````````````````````````````{{{b{{Dl{c}}}}c}{{Dl{c}}}Bh}{{{Dl{c}}c}{{Dl{c}}}Bh}{{{b{{Dl{c}}}}{b{{Dl{c}}}}}{{Dl{c}}}Bh}{{{b{{Dl{c}}}}{Dl{c}}}{{Dl{c}}}Bh}{{{Dl{c}}{b{{Dl{c}}}}}{{Dl{c}}}Bh}{{{Dl{c}}{Dl{c}}}{{Dl{c}}}Bh}{{{Nn{c}}{Nn{c}}}{{Nn{c}}}Bh}{{{b{d{Dl{c}}}}{Dl{c}}}hBh}{{{b{d{Dl{c}}}}{b{{Dl{c}}}}}hBh}{{{b{d{Kd{c}}}}}{{Ef{Ed}}}Bh}{{{b{d{Kd{c}}}}e}{{Ef{Ed}}}BhO`}{{{b{{Kd{c}}}}}{{If{Ob}}}Bh}`{{{b{{Kd{c}}}}}{{b{{If{{Ch{{Ef{Ed}}Od}}}}}}}Bh}{{{b{dIh}}e{Ef{Hn}}}h{{El{Ej}}}{{Dn{}{{Bj{c}}}}}}{{{b{d{Kd{c}}}}ei}hBh{{El{{Ef{Hn}}}}}{{El{Ej}}}{{C`{}{{Bj{g}}}}}}{{{b{d{Kd{c}}}}Fdg}hBh{{El{Ej}}}{{C`{}{{Bj{e}}}}}}{{{b{dIh}}e{Ef{Ed}}jk}{{A`{hE`}}}{{El{Ej}}}{{Dn{}{{Bj{c}}}}}Bh{{El{{Dl{g}}}}}{{Dn{}{{Bj{{Dh{i}}}}}}}}{{{b{dIh}}e{Ef{Ff}}jk}{{A`{hE`}}}{{El{Ej}}}{{Dn{}{{Bj{c}}}}}Bh{{El{{Dl{g}}}}}{{Dn{}{{Bj{{Dh{i}}}}}}}}{{{b{{Kd{c}}}}}jBh}{{{b{c}}}{{b{e}}}{}{}}0000000000000000000000{{{b{dc}}}{{b{de}}}{}{}}00000000000000000000009`{{{b{d{Kd{c}}}}e}HlBhO`}{{{b{{Of{c}}}}}{{Of{c}}}{D`Bh}}{{{b{Hn}}}Hn}{{{b{{Oh{c}}}}}{{Oh{c}}}{D`Aj}}{{{b{{Oj{c}}}}}{{Oj{c}}}{D`Aj}}{{{b{{Dl{c}}}}}{{Dl{c}}}D`}{{{b{{Kd{c}}}}}{{Kd{c}}}{D`Bh}}{{{b{{Ef{c}}}}}{{Ef{c}}}{D`Ol}}{{{b{Gn}}}Gn}{{{b{On}}}On}{{{b{Fd}}}Fd}{{{b{Hl}}}Hl}{{{b{{Nn{c}}}}}{{Nn{c}}}D`}{{{b{Ed}}}Ed}{{{b{Ff}}}Ff}{{{b{F`}}}F`}{{{b{c}}{b{de}}}h{}{}}00000000000000{{{b{Hn}}{b{Hn}}}M`}{{{b{{Ef{c}}}}{b{{Ef{c}}}}}M`Ol}{{{b{Fd}}{b{Fd}}}M`}{{{b{On}}}j}`{{{b{{Ef{c}}}}}{{b{c}}}Ol}`{{{b{d{Kd{c}}}}}GnBh}{{{b{{Nn{c}}}}}jBh}{{{Kd{c}}{If{{If{Cf}}}}}{{Ch{{Kd{c}}{If{{If{c}}}}}}}Bh}{{{b{d{Kd{c}}}}}eBh{}}{{{b{d{Kd{c}}}}e}gBh{}{}}{{{b{{Kd{c}}}}}{{b{{If{{Ef{Ff}}}}}}}Bh}{{{b{dIh}}{Ef{Hn}}j{Ef{Hn}}j}{{A`{hE`}}}}{{{b{d{Kd{c}}}}ek}hBh{{Dd{Bn}}}{{El{{A@`{c}}}}}{{Hh{}{{Hf{g}}}}}{{Dn{{b{d{A@b{c}}}}}{{Bj{i}}}}}}{{b{b{Oj}}{b{{Cj{c}}}}{b{{Cj{{b{{Cj{{b{Cj}}}}}}}}}}e{b{di}}}{{A`{hA@d}}}IlDfA@f{{A@h{g}}}}{{{A@j{c}}b{b{Oj}}{b{{Cj{e}}}}{b{{Cj{{b{{Cj{{b{Cj}}}}}}}}}}g{b{dk}}}{{A`{hA@d}}}A@lIlDfA@f{{A@h{i}}}}{{{b{{Dl{c}}}}}{{Dl{c}}}Bh}{{{b{{Ef{c}}}}}{{Nn{e}}}OlBh}{{}{{Kd{c}}}Bh}{{{b{{Kd{c}}}}}jBh}<{{{b{{Dl{c}}}}}{{Ib{c}}}Bh}{j{{b{c}}}{}}0000000000000000000000{j{{b{dc}}}{}}0000000000000000000000>6{jh}0000000000000000000000{{{b{Gn}}{b{d{Eb{c}}}}j}{{A`{hE`}}}Bh}{{{b{d{Kd{c}}}}{Ef{Ff}}}hBh}{{{b{d{Kd{c}}}}e}hBh{{El{{Ef{Hn}}}}}}{{{b{dIh}}e{b{Gn}}j}{{A`{hE`}}}{{El{Ej}}}{{Dn{}{{Bj{c}}}}}}{{{b{dIh}}e}h{{El{Ej}}}{{Dn{}{{Bj{c}}}}}}{{{b{Hn}}{b{Hn}}}Cf}{{{b{{Dl{c}}}}{b{{Dl{c}}}}}CfBh}{{{b{{Ef{c}}}}{b{{Ef{c}}}}}Cf{A@nOl}}{{{b{Gn}}{b{Gn}}}Cf}{{{b{On}}{b{On}}}Cf}{{{b{Fd}}{b{Fd}}}Cf}{{{b{Hl}}{b{Hl}}}Cf}{{{b{{Nn{c}}}}{b{{Nn{c}}}}}CfA@n}{{{b{Ed}}{b{Ed}}}Cf}{{{b{Ff}}{b{Ff}}}Cf}{{{b{F`}}{b{F`}}}Cf}{{{Dl{c}}}cBh}{{{b{{Nn{c}}}}{b{g}}{b{i}}{b{k}}{b{m}}{b{o}}{b{Aa}}{b{Ac}}{b{Ae}}{b{Ag}}{b{Ai}}}eBh{}{{C`{c}{{Bj{e}}}}}{{C`{Gn}{{Bj{e}}}}}{{C`{On}{{Bj{e}}}}}{{C`{AA`}{{Bj{e}}}}}{{C`{AAb}{{Bj{e}}}}}{{C`{Hl}{{Bj{e}}}}}{{C`{e}{{Bj{e}}}}}{{C`{ee}{{Bj{e}}}}}{{C`{ee}{{Bj{e}}}}}{{C`{ec}{{Bj{e}}}}}}{{{b{{Nn{c}}}}{b{g}}{b{i}}{b{k}}{b{m}}{b{o}}{b{Aa}}{b{Ac}}{b{Ae}}{b{Ag}}{b{Ai}}{b{e}}}eBhA@n{{C`{c}{{Bj{e}}}}}{{C`{Gn}{{Bj{e}}}}}{{C`{On}{{Bj{e}}}}}{{C`{AA`}{{Bj{e}}}}}{{C`{AAb}{{Bj{e}}}}}{{C`{Hl}{{Bj{e}}}}}{{C`{e}{{Bj{e}}}}}{{C`{ee}{{Bj{e}}}}}{{C`{ee}{{Bj{e}}}}}{{C`{ec}{{Bj{e}}}}}}{{{b{dIh}}}h}{{{b{Gn}}}{{Nn{c}}}Bh}{{{b{Hl}}}{{Nn{c}}}Bh}{{{b{dIh}}{Ef{Ff}}j{Dh{{Dl{c}}}}}{{A`{hE`}}}Bh}{{{b{d{Kd{c}}}}}{{Ef{Ff}}}Bh}{{{b{{Oh{c}}}}}{{b{{If{c}}}}}Aj}{{{b{{Kd{c}}}}}{{b{{If{{Ch{{Ef{Ff}}Od}}}}}}}Bh}{{{b{A@d}}{b{dl}}}AAd}0{{{b{{Of{c}}}}{b{dl}}}{{A`{hn}}}{GhBh}}{{{b{Hn}}{b{dl}}}{{A`{hn}}}}{{{b{AAf}}{b{dl}}}{{A`{hn}}}}0{{{b{{Oh{c}}}}{b{dl}}}{{A`{hn}}}{GhAj}}{{{b{{Oj{c}}}}{b{dl}}}{{A`{hn}}}{GhAj}}{{{b{{Dl{c}}}}{b{dl}}}{{A`{hn}}}Gh}{{{b{{AAh{ceg}}}}{b{dl}}}{{A`{hn}}}{GhBh}{Gh{El{{A@`{c}}}}}{Gh{Hh{}{{Hf{e}}}}}}{{{b{{Kd{c}}}}{b{dl}}}{{A`{hn}}}{GhBh}}{{{b{{A@b{c}}}}{b{dl}}}{{A`{hn}}}{GhBh}}{{{b{{Ef{c}}}}{b{dl}}}{{A`{hn}}}{GhOl}}{{{b{AAj}}{b{dl}}}{{A`{hn}}}}{{{b{AAl}}{b{dl}}}{{A`{hn}}}}{{{b{AAn}}{b{dl}}}{{A`{hn}}}}{{{b{Gn}}{b{dl}}}{{A`{hn}}}}{{{b{On}}{b{dl}}}{{A`{hn}}}}{{{b{Fd}}{b{dl}}}{{A`{hn}}}}{{{b{Hl}}{b{dl}}}{{A`{hn}}}}{{{b{{Nn{c}}}}{b{dl}}}{{A`{hn}}}Gh}{{{b{Ed}}{b{dl}}}{{A`{hn}}}}{{{b{Ff}}{b{dl}}}{{A`{hn}}}}{{{b{F`}}{b{dl}}}{{A`{hn}}}}{{{b{E`}}{b{dl}}}{{A`{hn}}}}0{AAfA@d}{E`A@d}{cc{}}0{{{Kd{c}}}{{Of{c}}}Bh}{FfHn}{F`Hn}{EdHn}44{AB`AAf}55{c{{Dl{c}}}Bh}{{{b{c}}}{{Dl{c}}}Bh}{{{Ch{cc}}}{{Dl{c}}}Bh}8{{{b{{Dl{c}}}}}{{Dl{c}}}Bh}999{{{Ef{F`}}}{{Ef{Hn}}}}:{{{Ef{Ff}}}{{Ef{Hn}}}}{{{Ef{Ed}}}{{Ef{Hn}}}}{Ml{{Ef{Hn}}}}======={ABbHl}>>>>>{{{b{{Cj{Ob}}}}fABd}{{A`{{Oh{c}}AB`}}}ABf}{{{b{{Cj{Ob}}}}fABd}{{A`{{Oj{c}}AB`}}}ABf}{{{b{{Kd{c}}}}}{{b{{If{{ABh{c}}}}}}}Bh}`{{{b{{Kd{c}}}}}{{b{{Nj{MlEj}}}}}Bh}`{{{b{{Kd{c}}}}{Ef{Hn}}Od}jBh}{{{b{Ih}}Hl}{{Dh{c}}}Bh}{{{b{{Oh{c}}}}}{{b{ABj}}}Aj}{{{b{{Oj{c}}}}}{{b{{Oh{c}}}}}Aj}{{{b{Hn}}{b{dc}}}hNl}{{{b{{Ef{c}}}}{b{de}}}h{ABlOl}Nl}{{{b{Gn}}{b{dc}}}hNl}{{{b{Fd}}{b{dc}}}hNl}{{{b{Hl}}{b{dc}}}hNl}{{{b{Ed}}{b{dc}}}hNl}{{{b{Ff}}{b{dc}}}hNl}{{{b{F`}}{b{dc}}}hNl}{{{b{{Oh{c}}}}{b{dg}}}{{A`{hAB`}}}Aj{{A@f{c}}}{{ABn{ce}}}}{{{b{{Nn{c}}}}}EjBh}{{{b{{Ef{c}}}}}jOl}{{{b{Gn}}}j}{{{b{Hl}}}j}```{{}j}0000000000000000000000{{{b{Fd}}}{{Ef{Ff}}}}{{{b{d{Kd{c}}}}}{{Ef{F`}}}Bh}{{{b{{Kd{c}}}}}{{b{{If{{Ch{{Ef{F`}}Od}}}}}}}Bh}{ce{}{}}0000000000000000000000{{{AAh{ceg}}}{}Bh{{El{{A@`{c}}}}}{{Hh{}{{Hf{e}}}}}}{{{b{{Dl{c}}}}}{{Dl{c}}}Bh}{{{b{Gn}}}Cf}{{{b{{Dl{c}}}}}CfBh}{{{b{e}}{Oh{c}}{b{g}}}{{A`{{Oj{c}}A@d}}}Aj{{AC`{c}}}Il}{{{b{e}}{Oh{c}}{b{g}}Cf}{{A`{{Oj{c}}A@d}}}Aj{{AC`{c}}}Il}{{{b{e}}{b{g}}}{{A`{{Oh{c}}A@d}}}Aj{{AC`{c}}}Il}{{{b{e}}{b{g}}Cf}{{A`{{Oh{c}}A@d}}}Aj{{AC`{c}}}Il}{{{b{d{Kd{c}}}}eg}jBh{{Dd{Bn}}}{{Dn{{b{d{A@b{c}}}}}{{Bj{{If{{Ch{{Nn{c}}Fd}}}}}}}}}}{{{b{d{Kd{c}}}}eg}jBh{{Dd{Bn}}}{{Dn{{b{d{A@b{c}}}}}{{Bj{{If{{Ch{{Nn{c}}{Nn{c}}}}}}}}}}}}{{{b{d{Kd{c}}}}}FdBh}{{{b{{Kd{c}}}}}{{b{{If{{ACb{c}}}}}}}Bh}``{{{b{{Kd{c}}}}}jBh}{{{Dl{c}}c}{{Dl{c}}}Bh}{{{Dl{c}}{b{{Dl{c}}}}}{{Dl{c}}}Bh}{{{Dl{c}}{Dl{c}}}{{Dl{c}}}Bh}{{{b{{Dl{c}}}}c}{{Dl{c}}}Bh}{{{Nn{c}}c}{{Nn{c}}}Bh}{{{Nn{c}}{Nn{c}}}{{Nn{c}}}Bh}{{{b{d{Dl{c}}}}{Dl{c}}}hBh}{{{b{d{Dl{c}}}}{b{{Dl{c}}}}}hBh}{{{b{{Dl{c}}}}}{}Bh}{{{Dl{c}}}{}Bh}{{{Nn{c}}}{}Bh}{{jc}{{Ef{c}}}Ol}{{{b{{Ef{c}}}}}{{Nn{e}}}OlBh}{KlAAf}{KlE`}?`?`?`?`?{{{b{{Dl{c}}}}}cBh}{{{b{{Il{}{{Gb{c}}{ACd{e}}{ACf{g}}}}}}}gD`AChACj}{{{b{Hn}}{b{Hn}}}{{Ib{M`}}}}{{{b{{Ef{c}}}}{b{{Ef{c}}}}}{{Ib{M`}}}Ol}{{{b{Fd}}{b{Fd}}}{{Ib{M`}}}}{{{b{{Kd{c}}}}}{{b{ACl}}}Bh}`{{{b{Hl}}}Ob}{{{b{{Kd{c}}}}}{{`{{K`{}{{Hf{ACn}}}}}}}Bh}{{{b{{Oh{c}}}}}{{AD`{c}}}Aj}{{{b{dc}}fKl{b{e}}Cf}{{ADb{{Oj{g}}}}}ADdIlABf}{{{b{dIh}}{Ib{Ej}}}h}={e{{Nn{c}}}Bh{{K`{}{{Hf{{Nn{c}}}}}}}}{{{b{dIh}}e}h{{El{Ej}}}{{Dn{}{{Bj{c}}}}}}{{{b{d{A@b{c}}}}{Ef{Ed}}Od}{{Nn{c}}}Bh}{{{b{d{A@b{c}}}}eOd}{{Nn{c}}}Bh{{El{{Ef{Hn}}}}}}{{{b{Ol}}jOd}{{Nn{c}}}Bh}{{{b{Hn}}jOd}{{Nn{c}}}Bh}{{{b{{Ef{c}}}}Od}{{Nn{e}}}OlBh}{{{b{Ed}}jOd}{{Nn{c}}}Bh}{{{b{Ff}}jOd}{{Nn{c}}}Bh}{{{b{F`}}jOd}{{Nn{c}}}Bh}{{{b{d{Nn{c}}}}{b{d{A@b{c}}}}}hBh}{{{b{d{A@b{c}}}}Hl}{{Nn{c}}}Bh}{{{b{d{A@b{c}}}}{Ef{Ff}}Od}{{Nn{c}}}Bh}{{{b{Ih}}{Ef{F`}}j}{{A`{{Dh{c}}E`}}}Bh}{{{b{d{A@b{c}}}}{Ef{F`}}Od}{{Nn{c}}}Bh}{{{b{d{A@b{c}}}}Gn}{{Nn{c}}}Bh}{{{b{dc}}fABd}{{A`{{Oh{e}}AB`}}}ADdABf}{{{b{dc}}fABd}{{A`{{Oj{e}}AB`}}}ADdABf}{{{b{{Ef{c}}}}Nf}{{Nn{e}}}OlBh}{{{b{On}}}Od}`{{{b{d{Kd{c}}}}}GnBh}{{{b{d{Kd{c}}}}j}hBh}{{{b{d{Kd{c}}}}eg}jBh{{Dd{Bn}}}{{Dn{{b{d{A@b{c}}}}}{{Bj{{If{{Ch{{Nn{c}}{Nn{c}}}}}}}}}}}}{{{b{{Kd{c}}}}}{{b{{If{{ADf{c}}}}}}}Bh}`{{{b{AAf}}}{{Ib{{b{ADh}}}}}}{{{b{{Dl{c}}}}}{{Dl{c}}}Bh}{{{Nn{c}}}{{Nn{c}}}Bh}{{{b{{Dl{c}}}}{b{{Dl{c}}}}}{{Dl{c}}}Bh}{{{Dl{c}}{Dl{c}}}{{Dl{c}}}Bh}{{{b{{Dl{c}}}}{Dl{c}}}{{Dl{c}}}Bh}{{{Dl{c}}{b{{Dl{c}}}}}{{Dl{c}}}Bh}{{{Dl{c}}c}{{Dl{c}}}Bh}{{{b{{Dl{c}}}}c}{{Dl{c}}}Bh}{{{Nn{c}}{Nn{c}}}{{Nn{c}}}Bh}{{{b{d{Dl{c}}}}{Dl{c}}}hBh}{{{b{d{Dl{c}}}}{b{{Dl{c}}}}}hBh}{e{{Nn{c}}}Bh{{K`{}{{Hf{{Nn{c}}}}}}}}{{{b{de}}{b{g}}{If{{Ef{Ff}}}}}{{A`{hE`}}}Bh{{Ih{c}}Ij}{{Il{c}}}}{{{b{{Il{}{{Gb{c}}{ACd{e}}{ACf{g}}}}}}ck}{{A`{hE`}}}D`AChACjBh{{Fj{i}}}}{{{b{{Oh{c}}}}f}{{If{Ob}}}ABf}{{{b{{Oj{c}}}}f}{{If{Ob}}}ABf}{{{b{c}}}e{}{}}00000000000000{AAjACn}{AAlACn}{AAnACn}{{{b{c}}}Ej{}}00{{{b{{Oh{c}}}}}{}Aj}{c{{A`{e}}}{}{}}000000000{{{Ef{Hn}}}{{A`{{Ef{Ed}}}}}}{{{Ef{Hn}}}{{A`{{Ef{F`}}}}}}{{{Ef{Hn}}}{{A`{{Ef{Ff}}}}}}333333333333333333333333333333333333{{{b{c}}}Ab{}}0000000000000000000000{{{b{d{Kd{c}}}}}{{Ef{Ed}}}Bh}{{{b{d{Kd{c}}}}e}{{Ef{Ed}}}BhO`}`{{b{b{Oh}}g{b{{Cj{{b{{Cj{{b{Cj}}}}}}}}}}{b{dk}}}{{A`{AAf}}}ADj{{ADl{c}}}{{ADn{ce}}}A@f{{AE`{i}}}}{{{b{dc}}fKl{b{e}}Cf}{{ADb{{Oh{g}}}}}ADdIlABf}{ce{}{}}0000000000000000000000{{{Nn{c}}g}{{AAh{ceg}}}Bh{{El{{A@`{c}}}}}{{Hh{}{{Hf{e}}}}}}{{{b{{Il{}{{Gb{c}}{ACd{e}}{ACf{g}}}}}}}{{Il{}{{Gb{c}}{ACd{e}}{ACf{g}}}}}D`AChACj}{{{b{{Oh{c}}}}{b{de}}f}{{A`{hAB`}}}ABfAEb}{{{b{{Oj{c}}}}{b{de}}f}{{A`{hAB`}}}ABfAEb}``````{{{b{c}}}{{b{e}}}{}{}}0{{{b{dc}}}{{b{de}}}{}{}}0{{{b{Od}}}Od}{{{b{{ABj{c}}}}}{{ABj{c}}}{D`Bh}}{{{b{c}}{b{de}}}h{}{}}0{{{b{Od}}{b{Od}}}M`}{{{b{{ABj{c}}}}{If{c}}}{{AEf{cAEd}}}B`}{{{b{{ABj{c}}}}{AEf{cAEd}}}{{AEf{cAEh}}}B`}`{{{b{{ABj{c}}}}c}{{AEf{cAEh}}}B`}{{{b{{ABj{c}}}}c}{{AEf{cAEj}}}B`}{{}Od}{j{{b{c}}}{}}0{j{{b{dc}}}{}}0{{{b{{ABj{c}}}}{AEf{cAEh}}}{{AEf{cAEh}}}B`}{jh}0{{{b{{ABj{c}}}}}{{AEf{cAEd}}}B`}{{{b{{ABj{c}}}}}{{AEf{cAEh}}}B`}{{{b{{ABj{c}}}}}{{AEf{cAEj}}}B`}{{{b{Od}}{b{Od}}}Cf}{{{b{{ABj{c}}}}}KlB`}{{{b{{ABj{c}}}}}jB`}{{{b{{ABj{c}}}}{AEf{cAEh}}}{{If{c}}}B`}{{{ADn{}{{Bj{c}}}}}Cf{}}{{{b{Od}}{b{dl}}}{{A`{hn}}}}{{{b{{ABj{c}}}}{b{dl}}}{{A`{hn}}}{GhBh}}{cc{}}0{{{b{{ABj{c}}}}}cB`}006{{{b{Od}}{b{dc}}}hNl}{{}j}0{ce{}{}}0`:`{{{b{{ABj{c}}}}cce}{{If{c}}}B`{{Hh{}{{Hf{Nf}}}}D`}}{{{b{{ABj{c}}}}{If{c}}}{{AEf{cAEj}}}B`}{{{b{{ABj{c}}}}{AEf{cAEj}}}{{AEf{cAEd}}}B`}{b{{ADn{}{{Bj{c}}}}}{}}{{KlKl}{{ABj{c}}}B`}{{}Od}{{{b{Od}}{b{Od}}}{{Ib{M`}}}}{{{b{{ABj{c}}}}}{{AEl{c}}}B`}2{{{ADn{}{{Bj{c}}}}e}{{A`{cAAf}}}{}{{Dn{}{{Bj{{A`{AAf}}}}}}}}{{{b{{ABj{c}}}}{b{{AEf{cAEh}}}}Od}{{AEf{cAEh}}}B`}{{{b{{ABj{c}}}}cOd}cB`}{{{b{c}}}e{}{}}0{c{{A`{e}}}{}{}}000{{{b{c}}}Ab{}}0>>``````````````````{{{AEn{c}}{AEn{c}}}{{AEn{c}}}Bh}{{{b{d{AEn{c}}}}{AEn{c}}}hBh}{{{b{d{AEn{c}}}}c}hBh}{{{b{dAF`}}{b{AF`}}}h}{{{b{dAF`}}}h}{{{b{AF`}}}If}{{{b{c}}}{{b{e}}}{}{}}{{{b{dc}}}{{b{de}}}{}{}}{{{b{AF`}}{b{e}}}CfAj{{A@l{c}}}}{{{b{{AEn{c}}}}}{{AEn{c}}}D`}{{{b{c}}{b{de}}}h{}{}}{{{b{AFb}}{b{e}}{b{{AEf{AEd}}}}AEn}{}Aj{{A@l{c}}}}{{{b{AC`}}{b{e}}{b{{AEf{AEj}}}}AEn}{}Aj{{A@l{c}}}}{{{b{AFd}}c{b{dg}}i}{{A`{hAB`}}}DfA@f{{A@h{e}}}{{Hh{}{{Hf{AFf}}}}D`}}{{{b{AFd}}{b{c}}e{b{di}}k}{{A`{hAB`}}}A@lDfA@f{{A@h{g}}}{{Hh{}{{Hf{AFf}}}}D`}}{{}{{AEn{c}}}Bh}{j{{b{c}}}{}}{j{{b{dc}}}{}}{{{b{dAC`}}Kl}h}{jh}{{{b{{AFj{}{{AFh{c}}}}}}}c{{AF`{e}}}Aj}{{{b{{AEn{c}}}}{b{{AEn{c}}}}}CfA@n}{{{b{AF`}}{b{e}}}{}Aj{{A@l{c}}}}{{{b{{AEn{c}}}}{b{dl}}}{{A`{hn}}}Gh}{cc{}}{{}j}{ce{}{}}{{{b{AC`}}}Kl}{{{AEn{c}}{AEn{c}}}{{AEn{c}}}Bh}{{{b{d{AEn{c}}}}{AEn{c}}}hBh}{{{b{d{AEn{c}}}}c}hBh}{{{b{AC`}}}Db}{KlAFb}{bAFd}{{}{{ADl{}{{AFl{c}}{AFn{g}}}}}{{AG`{e}{{AFn{g}}}}}ADj{}}{{{b{dc}}}{{AEn{e}}}DfBh}{Klc{}}{{{b{dc}}}{{A`{AC`AB`}}}ADd}{{{b{dc}}}{{A`{eAB`}}}ADd{}}{{{b{AF`}}}If}{{{b{dAF`}}}h}{{{b{c}}}e{}{}}{c{{A`{e}}}{}{}}0{{{b{c}}}Ab{}}{{{b{{ADl{}{{AFl{c}}{AFn{g}}}}}}{b{dk}}mg}{{A`{cAGb}}}{{AG`{e}{{AFn{g}}}}}ADj{}A@f{{AE`{i}}}{{Hh{}{{Hf{AGd}}}}D`}}{ce{}{}}{{{b{AC`}}{b{dc}}}{{A`{hAB`}}}AEb}```````{{{b{c}}}{{b{e}}}{}{}}0{{{b{dc}}}{{b{de}}}{}{}}0{{{b{{AGf{c}}}}}{{AGf{c}}}{D`Aj}}{{{b{c}}{b{de}}}h{}{}}{{{b{{AGf{c}}}}{b{e}}{b{{AEf{AEd}}}}AEn}{}Aj{{A@l{c}}}}{{{b{{AGf{c}}}}{b{e}}{b{{AEf{AEj}}}}AEn}{}Aj{{A@l{c}}}}{{{b{e}}{b{{AGf{c}}}}g{b{dk}}{b{{AEf{AEd}}}}AEn}{{A`{hAB`}}}Aj{{A@l{c}}}Df{{A@f{c}}}{{A@h{ci}}}}{j{{b{c}}}{}}0{j{{b{dc}}}{}}0{{{b{d{AGf{c}}}}Kl}hAj}{jh}0{{{b{{AGf{c}}}}}{{AGh{c}}}Aj}{{{b{{AGf{c}}}}{b{dl}}}{{A`{hn}}}{GhAj}}{{{b{{AGj{c}}}}{b{dl}}}{{A`{hn}}}{GhAj}}{cc{}}0{{}j}0{ce{}{}}0{{{b{{AGf{c}}}}}KlAj}{{{b{{AGf{c}}}}}DbAj}{Kl{{AGf{c}}}Aj}{Kl}{{{b{dc}}}{{A`{{AGf{e}}AB`}}}ADdAj}{{{b{dc}}}{{A`{AB`}}}ADd}{{{b{c}}}e{}{}}{c{{A`{e}}}{}{}}000{{{b{c}}}Ab{}}0{{{AGh{c}}{b{dg}}}{{A`{{AGl{c}}AGb}}}Aj{{A@f{c}}}{{AE`{ce}}}}::{{{b{{AGf{c}}}}{b{de}}}{{A`{hAB`}}}AjAEb}`{{{b{d{AGh{c}}}}}hAj}{{{b{d{AGh{c}}}}{b{{AGh{c}}}}}hAj}0{{{b{d{AGh{c}}}}{b{Cj}}}hAj}222{{{b{{AGh{c}}}}}IfAj}{{{b{c}}}{{b{e}}}{}{}}{{{b{dc}}}{{b{de}}}{}{}}{{{b{{AGh{c}}}}{b{e}}}CfAj{{A@l{c}}}}{{{b{{AGh{c}}}}}{{AGh{c}}}{D`Aj}}{{{b{c}}{b{de}}}h{}{}}{j{{b{c}}}{}}{j{{b{dc}}}{}}{jh}{{{b{{AGh{c}}}}{b{e}}}{}Aj{{A@l{c}}}}{{{b{{AGh{c}}}}{b{dl}}}{{A`{hn}}}{GhAj}}{cc{}}{{}j}{ce{}{}}{{{b{{AGf{c}}}}}{{AGh{c}}}Aj}>{{{b{d{AGh{c}}}}}hAj}{{{b{c}}}e{}{}}{c{{A`{e}}}{}{}}0{{{b{c}}}Ab{}}5``{{{b{c}}}{{b{e}}}{}{}}0{{{b{dc}}}{{b{de}}}{}{}}0{{{b{{AGn{c}}}}{b{e}}g{b{dk}}m}{{A`{hAB`}}}Aj{{A@l{c}}}Df{{A@f{c}}}{{A@h{ci}}}{{Hh{}{{Hf{{AFf{c}}}}}}D`}}??>>=={{{b{{AGn{c}}}}{b{dl}}}{{A`{hn}}}{GhAj}}{{{b{{AH`{c}}}}{b{dl}}}{{A`{hn}}}{GhAj}}<<;;::{{{b{{AGf{c}}}}}{{AGn{c}}}Aj}{{}{{AH`{c}}}Aj}888877{{{b{{AH`{c}}}}{b{dg}}i{AGh{c}}}{{A`{AGb}}}Aj{{A@f{c}}}{{AE`{ce}}}{{Hh{}{{Hf{{AGd{c{AGh{c}}}}}}}}D`}}==````77776666{{{b{{AGl{c}}}}}{{AGl{c}}}{D`Aj}}{{{b{{AHb{c}}}}}{{AHb{c}}}{D`Aj}}{{{b{c}}{b{de}}}h{}{}}0{{{b{{AGl{c}}}}{b{e}}}cAj{{A@l{c}}}}{j{{b{c}}}{}}000{j{{b{dc}}}{}}000{jh}000{{{AHd{c}}}CfAj}{{{AHf{c}}}CfAj}{{{b{{AGl{c}}}}{b{dl}}}{{A`{hn}}}{GhAj}}{{{b{{AHb{c}}}}{b{dl}}}{{A`{hn}}}{GhAj}}{{{b{{AHd{c}}}}{b{dl}}}{{A`{hn}}}{GhAj}}{{{b{{AHf{c}}}}{b{dl}}}{{A`{hn}}}{GhAj}}{cc{}}000`{{}j}000{ce{}{}}000{{{b{{AGf{c}}}}}{{AHd{c}}}Aj}{{{b{{AGf{c}}}}}{{AHf{c}}}Aj}{{{AHd{c}}e}{{A`{AAf}}}Aj{{Dn{{AGh{c}}}{{Bj{{A`{{AGl{c}}AAf}}}}}}}}{{{AHf{c}}e}{{A`{AAf}}}Aj{{Dn{{AGh{c}}}{{Bj{{A`{{AGl{c}}AAf}}}}}}}}{{{b{c}}}e{}{}}0{c{{A`{e}}}{}{}}0000000{{{b{c}}}Ab{}}000`{{{AGl{c}}}{{AGh{c}}}Aj}{{{AGl{c}}c}{{Ch{{AGh{c}}{AHb{c}}}}}Aj}9999```````{{{b{c}}}{{b{e}}}{}{}}00{{{b{dc}}}{{b{de}}}{}{}}00{{{b{{AHh{c}}}}}{{AHh{c}}}{D`AHj}}{{{b{{AHl{c}}}}}{{AHl{c}}}{D`AHj}}{{{b{c}}{b{de}}}h{}{}}0{{{b{{AHh{c}}}}{b{e}}{b{{AEf{AEd}}}}AEn}{}AHjA@l}{{{b{{AHh{c}}}}{b{e}}{b{{AEf{AEj}}}}AEn}{}AHjA@l}{{{b{{AHl{c}}}}{b{e}}{b{{AEf{AEj}}}}AEn}{}AHjA@l}{j{{b{c}}}{}}00{j{{b{dc}}}{}}00{{{b{d{AHh{c}}}}Kl}hAHj}{{{b{d{AHl{c}}}}Kl}hAHj}{jh}00{{{b{{AHh{c}}}}}{{AHn{c}}}AHj}{{{b{{AHl{c}}}}}{{AHn{c}}}AHj}{{{b{{AHh{c}}}}{b{dl}}}{{A`{hn}}}{GhAHj}}{{{b{{AHl{c}}}}{b{dl}}}{{A`{hn}}}{GhAHj}}{{{b{{AI`{c}}}}{b{dl}}}{{A`{hn}}}{GhAHj}}{cc{}}00{{{b{{AHh{c}}}}KlIf{Ib{If}}}{{AHh{c}}}AHj}{{}j}00{ce{}{}}00{{{b{{AHh{c}}}}}KlAHj}{{{b{{AHl{c}}}}}KlAHj}{{{b{{AHh{c}}}}}DbAHj}{{{b{{AHl{c}}}}}DbAHj}{Kl{{AHh{c}}}AHj}{Kl}{{{b{dc}}}{{A`{{AHh{e}}AB`}}}ADdAHj}{{{b{dc}}}{{A`{{AHl{e}}AB`}}}ADdAHj}{{{b{dc}}f}{{A`{{AHh{e}}AB`}}}ADdAHj}{{{b{dc}}f}{{A`{{AHl{e}}AB`}}}ADdAHj}{{{b{dc}}}{{A`{AB`}}}ADd}{{Klc}{{AHh{e}}}DfAHj}{{{b{c}}}e{}{}}0{c{{A`{e}}}{}{}}00000{{{b{c}}}Ab{}}00{{{b{{AHh{c}}}}}{{AHl{c}}}AHj}{ce{}{}}00{{{b{{AHh{c}}}}{b{de}}}{{A`{hAB`}}}AHjAEb}{{{b{{AHl{c}}}}{b{de}}}{{A`{hAB`}}}AHjAEb}{{{b{{AHh{c}}}}{b{de}}f}{{A`{hAB`}}}AHjAEb}{{{b{{AHl{c}}}}{b{de}}f}{{A`{hAB`}}}AHjAEb}``{{{b{d{AHn{c}}}}{b{{AHn{c}}}}}hAHj}{{{b{d{AIb{c}}}}{AIb{c}}}hAId}{{{b{d{AHn{c}}}}}hAHj}{{{b{{AHn{c}}}}}IfAHj}{{{b{c}}}{{b{e}}}{}{}}0{{{b{dc}}}{{b{de}}}{}{}}0{{{b{{AHn{c}}}}{b{e}}}CfAHjA@l}{{{AIb{c}}{b{e}}{b{{AHl{c}}}}}CfAIdA@l}{{{b{{AHn{c}}}}}{{AHn{c}}}{D`AHj}}{{{b{{AIb{c}}}}}{{AIb{c}}}{D`AHj}}{{{b{c}}{b{de}}}h{}{}}08{{}{{AHn{c}}}{ACjAHj}}{{}{{AIb{c}}}{ACjAHj}}{j{{b{c}}}{}}0{j{{b{dc}}}{}}0{jh}0{{{b{{AHn{c}}}}{b{e}}}{}AHjA@l}{{{b{{AHn{c}}}}{b{dl}}}{{A`{hn}}}{GhAHj}}{{{b{{AIb{c}}}}{b{dl}}}{{A`{hn}}}{GhAHj}}{cc{}}0{{}j}0{ce{}{}}0{{}{{AHn{c}}}AHj}{{}{{AIb{c}}}AId}{{{b{{AHn{c}}}}}IfAHj}{{{b{d{AHn{c}}}}}hAHj}{{{b{d{AIb{c}}}}}hAId}{{{b{c}}}e{}{}}0{c{{A`{e}}}{}{}}000{{{b{c}}}Ab{}}088````{{{b{c}}}{{b{e}}}{}{}}000{{{b{dc}}}{{b{de}}}{}{}}000{{{b{{AIf{c}}}}{b{e}}g{b{dk}}m}{{A`{hAB`}}}{AHjGh}A@lDfA@f{{A@h{i}}}{{Hh{}{{Hf{AFf}}}}D`}}{{{b{{AIh{c}}}}{b{e}}g{b{dk}}m}{{A`{hAB`}}}{AHjGh}A@lDfA@f{{A@h{i}}}{{Hh{}{{Hf{AFf}}}}D`}}{j{{b{c}}}{}}000{j{{b{dc}}}{}}000{jh}000{{{b{{AIf{c}}}}{b{dl}}}{{A`{hn}}}{GhAHj}}{{{b{{AIj{c}}}}{b{dl}}}{{A`{hn}}}{GhAHj}}{{{b{{AIh{c}}}}{b{dl}}}{{A`{hn}}}{GhAHj}}{{{b{{AIl{c}}}}{b{dl}}}{{A`{hn}}}{GhAHj}}{cc{}}000{{}j}000{ce{}{}}000{{{b{{AHh{c}}}}}{{AIf{c}}}{AHjGh}}{{}{{AIj{c}}}{AIdGh}}{{{b{{AHh{c}}}}}{{AIh{c}}}AHj}{{{b{{AHh{c}}}}}{{AIh{c}}}{AHjGh}}{{}{{AIl{c}}}{AIdGh}}{c{{A`{e}}}{}{}}0000000{{{b{c}}}Ab{}}000{{{b{{AIj{c}}}}{b{dg}}i{AIb{c}}}{{A`{AGb}}}{AIdGh}A@f{{AE`{e}}}{{Hh{}{{Hf{{AGd{{AHn{c}}}}}}}}D`}}{{{b{{AIl{c}}}}{b{dg}}i{AIb{c}}}{{A`{AGb}}}{AIdGh}A@f{{AE`{e}}}{{Hh{}{{Hf{{AGd{{AHn{c}}}}}}}}D`}}9999```{{{b{c}}}{{b{e}}}{}{}}00{{{b{dc}}}{{b{de}}}{}{}}00{{{b{{AIn{c}}}}}{{AIn{c}}}{D`AId}}{{{b{{AJ`{c}}}}}{{AJ`{c}}}{D`AHj}}{{{b{{AJb{c}}}}}{{AJb{c}}}{D`AHj}}{{{b{c}}{b{de}}}h{}{}}00{j{{b{c}}}{}}00{j{{b{dc}}}{}}00{jh}00{{{AJ`{c}}}Cf{AIdGh}}{{{AJb{c}}}Cf{AIdGh}}{{{b{{AIn{c}}}}{b{dl}}}{{A`{hn}}}{GhAId}}{{{b{{AJ`{c}}}}{b{dl}}}{{A`{hn}}}{GhAHj}}{{{b{{AJb{c}}}}{b{dl}}}{{A`{hn}}}{GhAHj}}{cc{}}00{{}j}00{ce{}{}}00{{{b{{AHl{c}}}}}{{AJ`{c}}}AId}{{{b{{AHl{c}}}}}{{AJ`{c}}}{AIdGh}}{{{b{{AHl{c}}}}}{{AJb{c}}}{AIdGh}}0{{{AJ`{c}}e}{{A`{AAf}}}{AIdGh}{{Dn{}{{Bj{{A`{AAf}}}}}}}}{{{AJb{c}}e}{{A`{AAf}}}{AIdGh}{{Dn{}{{Bj{{A`{AAf}}}}}}}}{{{b{c}}}e{}{}}00{c{{A`{e}}}{}{}}00000{{{b{c}}}Ab{}}00888{{{AIb{c}}{b{{AHl{c}}}}}{{AJ`{c}}}AId}``````````{{{b{{A@f{}{{AJd{c}}}}}}}{{AJf{eg}}}{}Aj{}}{{{b{c}}}{{b{e}}}{}{}}00{{{b{dc}}}{{b{de}}}{}{}}00{{{b{{AJh{ceg}}}}}{{AJh{ceg}}}{D`ADd}{D`Aj}{D`{A@f{e}}}}{{{b{{AJj{ceg}}}}}{{AJj{ceg}}}{D`AEb}{D`Aj}{D`{A@f{e}}}}{{{b{{AJl{c}}}}}{{AJl{c}}}{D`Aj}}{{{b{c}}{b{de}}}h{}{}}00{{{b{dABn}}c}{{A`{hAB`}}}Aj}{{{b{d{AJh{ce{AJl{e}}}}}}e}{{A`{hAB`}}}ADdAj}{{{b{d{AJj{ce{AJl{e}}}}}}e}{{A`{hAB`}}}AEbAj}{{{b{dABn}}}{{A`{hAB`}}}}{{{b{d{AJh{ce{AJl{e}}}}}}}{{A`{hAB`}}}ADdAj}{{{b{d{AJj{ce{AJl{e}}}}}}}{{A`{hAB`}}}AEbAj}{j{{b{c}}}{}}0{{{b{{AJl{c}}}}}bAj}1{j{{b{dc}}}{}}00{jh}00{AJncAEb}{{{AJj{ce{AJl{e}}}}}cAEbAj}{{{b{{AJh{ceg}}}}{b{dl}}}{{A`{hn}}}{GhADd}{GhAj}{Gh{A@f{e}}}}{{{b{{AJj{ceg}}}}{b{dl}}}{{A`{hn}}}{GhAEb}{GhAj}{Gh{A@f{e}}}}{{{b{{AJl{c}}}}{b{dl}}}{{A`{hn}}}{GhAj}}{cc{}}00{{{b{{A@f{}{{AJd{c}}}}}}}{}{}}{{{b{{AJl{c}}}}}{}Aj}{cAK`ADd}{cAJnAEb}{{}j}{c{{AJh{ce{AJl{e}}}}}ADdAj}1{c{{AJj{ce{AJl{e}}}}}AEbAj}2{ce{}{}}00{{{b{c}}}{{A@f{}{{AJd{c}}}}}{}}{{{b{{In{Ob}}}}}{{AJl{c}}}Aj}{{{b{dAE`}}}{{A`{cAB`}}}Aj}{{{b{d{AJh{ce{AJl{e}}}}}}}{{A`{eAB`}}}ADdAj}{{{b{dAE`}}}{{A`{AB`}}}}{{{b{d{AJh{ce{AJl{e}}}}}}}{{A`{AB`}}}ADdAj}{{{b{dABn}}}eAj{{A@f{c}}}}{{{b{d{AJh{ce{AJl{e}}}}}}}{{AJl{e}}}ADdAj}{{{b{d{AJj{ce{AJl{e}}}}}}}{{AJl{e}}}AEbAj}{{{b{dABn}}}{{AJf{ce}}}Aj{}}{{{b{c}}}e{}{}}00{c{{A`{e}}}{}{}}00000{{{b{c}}}Ab{}}00==={{{b{dA@h}}c}{{A`{hAB`}}}Aj}{{{b{d{AJj{ce{AJl{e}}}}}}e}{{A`{hAB`}}}AEbAj}{{{b{dA@h}}}{{A`{hAB`}}}}{{{b{d{AJj{ce{AJl{e}}}}}}}{{A`{hAB`}}}AEbAj}","D":"ENl","p":[[1,"reference"],[0,"mut"],[6,"SerdeFormat",0,2087],[1,"unit"],[1,"usize"],[5,"Formatter",2088],[5,"Error",2088],[6,"Result",2089],[5,"TypeId",2090],[17,"ScalarExt"],[17,"Base"],[17,"CurveExt"],[10,"CurveAffine",27,2091],[5,"Coordinates",2091],[5,"CtOption",2092],[10,"WithSmallOrderMulGroup",2093],[10,"Ord",2094],[17,"AffineExt"],[10,"CurveExt",27,2091],[10,"Field",27,2093],[17,"Output"],[10,"Mul",2095],[1,"str"],[10,"Fn",2096],[5,"Box",2097],[5,"Choice",2092],[1,"bool"],[1,"tuple"],[1,"slice"],[10,"Send",2098],[10,"Sync",2098],[10,"Clone",2099],[1,"u64"],[10,"AsRef",2100],[10,"RngCore",2101],[5,"Value",64,2102],[10,"Add",2095],[6,"Assigned",779,2103],[10,"FnOnce",2096],[6,"ErrorFront",779],[5,"Region",64,2104],[5,"Advice",779,2105],[5,"Column",779,2106],[5,"AssignedCell",64,2104],[5,"String",2107],[10,"Into",2100],[10,"FnMut",2096],[5,"Instance",779,2105],[5,"Table",64,2104],[5,"TableColumn",779,2106],[5,"Fixed",779,2105],[17,"Root"],[10,"Layouter",64,2104],[5,"NamespacedLayouter",64,2104],[5,"Cell",64,2104],[5,"RegionIndex",64,2104],[17,"Config"],[17,"Loaded"],[10,"Chip",64,2104],[10,"Debug",2088],[10,"Copy",2098],[10,"Borrow",2108],[5,"Selector",779,2106],[5,"SimpleFloorPlanner",64,2109],[10,"RegionLayouter",2110],[10,"TableLayouter",2111],[17,"Item"],[10,"IntoIterator",2112],[10,"FromIterator",2112],[5,"Challenge",779,2106],[6,"Any",779,2113],[10,"Neg",2095],[6,"Option",2114],[10,"Sub",2095],[5,"Vec",2115],[10,"Assignment",779,2105],[10,"SyncDeps",2110],[10,"Circuit",779,2105],[1,"array"],[5,"V1Pass",293,2116],[5,"V1",293,2116],[5,"SingleChipLayouter",331,2109],[5,"MeasurementPass",354,2116],[5,"AssignmentPass",354,2116],[5,"MockProver",385,2117],[6,"CellValue",2117],[10,"FromUniformBytes",2093],[10,"Iterator",2118],[6,"FailureLocation",385,2119],[5,"ConstraintSystem",779,2120],[5,"CircuitLayout",385,2121],[6,"VerifyFailure",385,2119],[6,"InstanceValue",2117],[1,"u32"],[5,"Shift",2122],[5,"DrawingArea",2123],[6,"DrawingAreaErrorKind",2123],[10,"DrawingBackend",2124],[5,"Range",2125],[5,"Poly",520,2126],[5,"Lookup",520,2126],[5,"Permutation",520,2126],[5,"Shuffle",520,2126],[6,"Ordering",2094],[10,"Deserializer",2127],[5,"ModelCircuit",520,2126],[6,"CommitmentScheme",520,2126],[5,"CostOptions",520,2126],[10,"Serializer",2128],[5,"Column",664],[5,"Gate",664,2129],[5,"Constraint",664,2129],[5,"Region",664,2129],[5,"VirtualCell",664,2129],[1,"i32"],[5,"VirtualCell",2120],[5,"HashMap",2130],[10,"Hasher",2131],[6,"Expression",779,2106],[10,"Phase",779,2106],[1,"u8"],[5,"Rotation",1426,2132],[5,"ConstraintSystemMid",779,2113],[5,"VerifyingKey",779,2133],[5,"ProvingKey",779,2133],[10,"ColumnType",779,2105],[5,"FixedQuery",779,2106],[5,"Constraint",2120],[5,"VirtualCells",779,2120],[6,"Error",779,2134],[10,"EncodedChallenge",1999,2135],[10,"TranscriptWrite",1999,2135],[5,"PlonkEngine",2136],[10,"MsmAccel",2137],[10,"PartialEq",2094],[5,"AdviceQuery",2106],[5,"InstanceQuery",2106],[8,"Result",2088],[6,"ErrorBack",779],[5,"Constraints",779,2120],[5,"FirstPhase",779,2106],[5,"SecondPhase",779,2106],[5,"ThirdPhase",779,2106],[5,"Error",2138],[5,"ChallengeMid",2113],[5,"ConstraintSystemBack",2139],[10,"SerdeCurveAffine",2087],[5,"Gate",2120],[5,"EvaluationDomain",1426,2140],[10,"Hash",2131],[10,"Transcript",1999,2135],[10,"Params",1498,2141],[5,"Argument",2142],[17,"FloorPlanner"],[17,"Params"],[10,"FloorPlanner",779,2105],[10,"Default",2143],[5,"Argument",2144],[5,"Phase",2145],[5,"PinnedVerificationKey",2133],[8,"Result",2138],[10,"Read",2146],[5,"Argument",2147],[10,"Error",2148],[10,"CommitmentScheme",1498,2141],[10,"Verifier",1498,2141],[10,"VerificationStrategy",1426,2149],[10,"TranscriptRead",1999,2135],[10,"Write",2146],[5,"Coeff",2150],[5,"Polynomial",2150],[5,"ExtendedLagrangeCoeff",2150],[5,"LagrangeCoeff",2150],[5,"PinnedEvaluationDomain",2140],[5,"Blind",1498,2141],[10,"MSM",1498,2141],[10,"ParamsProver",1498,2141],[10,"Prover",1498,2141],[5,"ProverQuery",2151],[17,"MSM"],[10,"ParamsVerifier",1498,2141],[17,"Guard"],[17,"MSMAccumulator"],[10,"Guard",2149],[6,"Error",2150],[5,"VerifierQuery",2151],[5,"ParamsIPA",1568,2152],[5,"MSMIPA",1613,2153],[5,"IPACommitmentScheme",1568,2152],[5,"GuardIPA",1675,2154],[5,"ProverIPA",1643,2155],[5,"VerifierIPA",1643,2156],[5,"Accumulator",1675,2154],[5,"AccumulatorStrategy",1675,2154],[5,"SingleStrategy",1675,2154],[5,"ParamsKZG",1752,2157],[10,"Engine",2158],[5,"ParamsVerifierKZG",1752,2157],[5,"MSMKZG",1825,2159],[5,"KZGCommitmentScheme",1752,2157],[5,"DualMSM",1825,2159],[10,"MultiMillerLoop",2158],[5,"ProverGWC",1874,2160],[5,"ProverSHPLONK",1874,2161],[5,"VerifierGWC",1874,2162],[5,"VerifierSHPLONK",1874,2163],[5,"GuardKZG",1939,2164],[5,"AccumulatorStrategy",1939,2164],[5,"SingleStrategy",1939,2164],[17,"Input"],[5,"ChallengeScalar",2135],[5,"Blake2bRead",1999,2135],[5,"Blake2bWrite",1999,2135],[5,"Challenge255",1999,2135],[10,"TranscriptWriterBuffer",1999,2135],[10,"TranscriptReadBuffer",1999,2135],[15,"InRegion",495],[15,"OutsideRegion",495],[15,"ConstraintNotSatisfied",498],[15,"CellNotAssigned",498],[15,"InstanceCellNotAssigned",498],[15,"Permutation",498],[15,"ConstraintPoisoned",498],[15,"Lookup",498],[15,"Shuffle",498],[15,"NotEnoughRowsAvailable",1424],[15,"NotEnoughRowsAvailable",1425]],"r":[[3,2087],[31,2091],[32,2091],[34,2093],[56,2165],[64,2104],[65,2104],[66,2104],[68,2104],[70,2104],[71,2104],[72,2104],[74,2109],[75,2104],[76,2102],[170,2104],[293,2116],[294,2116],[320,2166],[328,2166],[331,2109],[332,2109],[354,2116],[355,2116],[356,2116],[357,2116],[376,2116],[386,2121],[389,2119],[393,2117],[397,2119],[413,2167],[417,2117],[462,2117],[520,2126],[521,2126],[525,2126],[526,2126],[527,2126],[528,2126],[529,2126],[596,2126],[597,2126],[665,2129],[666,2129],[667,2129],[668,2129],[779,2105],[782,2113],[783,2103],[784,2105],[788,2106],[790,2105],[791,2106],[794,2105],[797,2120],[799,2113],[800,2120],[801,2134],[804,2106],[805,2106],[806,2105],[809,2106],[810,2105],[813,2105],[826,2106],[828,2133],[831,2106],[832,2106],[836,2106],[838,2106],[841,2133],[842,2120],[958,2168],[959,2168],[1207,2169],[1208,2169],[1209,2169],[1210,2169],[1395,2170],[1426,2140],[1428,2132],[1429,2149],[1441,2150],[1473,2150],[1475,2150],[1498,2141],[1500,2141],[1503,2141],[1506,2141],[1507,2141],[1509,2141],[1511,2141],[1515,2141],[1564,2171],[1565,2171],[1566,2171],[1567,2171],[1568,2152],[1569,2152],[1570,2152],[1579,2172],[1609,2173],[1613,2153],[1643,2155],[1644,2156],[1675,2154],[1676,2154],[1677,2154],[1678,2154],[1748,2174],[1749,2174],[1750,2174],[1751,2174],[1752,2157],[1753,2157],[1754,2157],[1825,2159],[1826,2159],[1874,2160],[1875,2161],[1876,2162],[1877,2163],[1939,2164],[1940,2164],[1941,2164],[1999,2135],[2000,2135],[2001,2135],[2002,2135],[2004,2135],[2005,2135],[2006,2135],[2007,2135],[2008,2135]],"b":[[77,"impl-Add%3CValue%3C%26V%3E%3E-for-Value%3CV%3E"],[78,"impl-Add%3CValue%3CV%3E%3E-for-%26Value%3CV%3E"],[79,"impl-Add%3CValue%3CV%3E%3E-for-Value%3C%26V%3E"],[80,"impl-Add%3C%26Value%3CV%3E%3E-for-Value%3CV%3E"],[81,"impl-Add%3CF%3E-for-Value%3C%26Assigned%3CF%3E%3E"],[82,"impl-Add-for-%26Value%3CV%3E"],[83,"impl-Add-for-Value%3CV%3E"],[84,"impl-Add%3CValue%3CF%3E%3E-for-Value%3C%26Assigned%3CF%3E%3E"],[85,"impl-Add%3CValue%3CF%3E%3E-for-Value%3CAssigned%3CF%3E%3E"],[86,"impl-Add%3CF%3E-for-Value%3CAssigned%3CF%3E%3E"],[126,"impl-Value%3C%26mut+V%3E"],[127,"impl-Value%3C%26V%3E"],[134,"impl-Value%3C%26mut+V%3E"],[135,"impl-Value%3C%26V%3E"],[218,"impl-Mul%3CF%3E-for-Value%3C%26Assigned%3CF%3E%3E"],[219,"impl-Mul%3CValue%3C%26V%3E%3E-for-Value%3CV%3E"],[220,"impl-Mul%3C%26Value%3CV%3E%3E-for-Value%3CV%3E"],[221,"impl-Mul%3CValue%3CF%3E%3E-for-Value%3C%26Assigned%3CF%3E%3E"],[222,"impl-Mul%3CValue%3CF%3E%3E-for-Value%3CAssigned%3CF%3E%3E"],[223,"impl-Mul%3CF%3E-for-Value%3CAssigned%3CF%3E%3E"],[224,"impl-Mul%3CValue%3CV%3E%3E-for-Value%3C%26V%3E"],[225,"impl-Mul-for-%26Value%3CV%3E"],[226,"impl-Mul%3CValue%3CV%3E%3E-for-%26Value%3CV%3E"],[227,"impl-Mul-for-Value%3CV%3E"],[238,"impl-Sub%3CValue%3CV%3E%3E-for-Value%3C%26V%3E"],[239,"impl-Sub%3CF%3E-for-Value%3CAssigned%3CF%3E%3E"],[240,"impl-Sub%3C%26Value%3CV%3E%3E-for-Value%3CV%3E"],[241,"impl-Sub%3CF%3E-for-Value%3C%26Assigned%3CF%3E%3E"],[242,"impl-Sub%3CValue%3C%26V%3E%3E-for-Value%3CV%3E"],[243,"impl-Sub%3CValue%3CF%3E%3E-for-Value%3CAssigned%3CF%3E%3E"],[244,"impl-Sub-for-Value%3CV%3E"],[245,"impl-Sub-for-%26Value%3CV%3E"],[246,"impl-Sub%3CValue%3CV%3E%3E-for-%26Value%3CV%3E"],[247,"impl-Sub%3CValue%3CF%3E%3E-for-Value%3C%26Assigned%3CF%3E%3E"],[441,"impl-Debug-for-FailureLocation"],[442,"impl-Display-for-FailureLocation"],[443,"impl-Display-for-VerifyFailure"],[444,"impl-Debug-for-VerifyFailure"],[710,"impl-Display-for-ColumnMid"],[711,"impl-Debug-for-ColumnMid"],[712,"impl-Display-for-VirtualCell"],[713,"impl-Debug-for-VirtualCell"],[714,"impl-Display-for-Gate"],[715,"impl-Debug-for-Gate"],[716,"impl-Display-for-Constraint"],[717,"impl-Debug-for-Constraint"],[718,"impl-Display-for-Region"],[719,"impl-Debug-for-Region"],[723,"impl-From%3C(ColumnMid,+i32)%3E-for-VirtualCell"],[724,"impl-From%3C(S,+ColumnMid,+i32)%3E-for-VirtualCell"],[725,"impl-From%3CVirtualCell%3E-for-VirtualCell"],[731,"impl-From%3C(usize,+String)%3E-for-Region"],[732,"impl-From%3C(usize,+String,+HashMap%3CColumnMid,+String%3E)%3E-for-Region"],[733,"impl-From%3C(usize,+%26str,+HashMap%3CColumnMid,+String%3E)%3E-for-Region"],[734,"impl-From%3C(usize,+%26str)%3E-for-Region"],[844,"impl-Add%3CF%3E-for-%26Assigned%3CF%3E"],[845,"impl-Add%3CF%3E-for-Assigned%3CF%3E"],[846,"impl-Add%3C%26Assigned%3CF%3E%3E-for-%26Assigned%3CF%3E"],[847,"impl-Add%3CAssigned%3CF%3E%3E-for-%26Assigned%3CF%3E"],[848,"impl-Add%3C%26Assigned%3CF%3E%3E-for-Assigned%3CF%3E"],[849,"impl-Add-for-Assigned%3CF%3E"],[851,"impl-AddAssign-for-Assigned%3CF%3E"],[852,"impl-AddAssign%3C%26Assigned%3CF%3E%3E-for-Assigned%3CF%3E"],[1063,"impl-Debug-for-Error"],[1064,"impl-Display-for-Error"],[1067,"impl-Display-for-Error"],[1068,"impl-Debug-for-Error"],[1087,"impl-Display-for-Error"],[1088,"impl-Debug-for-Error"],[1089,"impl-From%3CError%3E-for-Error"],[1090,"impl-From%3CError%3E-for-Error"],[1094,"impl-From%3CFixed%3E-for-Any"],[1095,"impl-From%3CInstance%3E-for-Any"],[1096,"impl-From%3CAdvice%3E-for-Any"],[1102,"impl-From%3CF%3E-for-Assigned%3CF%3E"],[1103,"impl-From%3C%26F%3E-for-Assigned%3CF%3E"],[1104,"impl-From%3C(F,+F)%3E-for-Assigned%3CF%3E"],[1106,"impl-From%3C%26Assigned%3CF%3E%3E-for-Assigned%3CF%3E"],[1110,"impl-From%3CColumn%3CInstance%3E%3E-for-Column%3CAny%3E"],[1112,"impl-From%3CColumn%3CFixed%3E%3E-for-Column%3CAny%3E"],[1113,"impl-From%3CColumn%3CAdvice%3E%3E-for-Column%3CAny%3E"],[1114,"impl-From%3CColumnMid%3E-for-Column%3CAny%3E"],[1218,"impl-Mul%3CF%3E-for-Assigned%3CF%3E"],[1219,"impl-Mul%3C%26Assigned%3CF%3E%3E-for-Assigned%3CF%3E"],[1220,"impl-Mul-for-Assigned%3CF%3E"],[1221,"impl-Mul%3CF%3E-for-%26Assigned%3CF%3E"],[1222,"impl-Mul%3CF%3E-for-Expression%3CF%3E"],[1223,"impl-Mul-for-Expression%3CF%3E"],[1224,"impl-MulAssign-for-Assigned%3CF%3E"],[1225,"impl-MulAssign%3C%26Assigned%3CF%3E%3E-for-Assigned%3CF%3E"],[1226,"impl-Neg-for-%26Assigned%3CF%3E"],[1227,"impl-Neg-for-Assigned%3CF%3E"],[1284,"impl-Sub%3C%26Assigned%3CF%3E%3E-for-%26Assigned%3CF%3E"],[1285,"impl-Sub-for-Assigned%3CF%3E"],[1286,"impl-Sub%3CAssigned%3CF%3E%3E-for-%26Assigned%3CF%3E"],[1287,"impl-Sub%3C%26Assigned%3CF%3E%3E-for-Assigned%3CF%3E"],[1288,"impl-Sub%3CF%3E-for-Assigned%3CF%3E"],[1289,"impl-Sub%3CF%3E-for-%26Assigned%3CF%3E"],[1291,"impl-SubAssign-for-Assigned%3CF%3E"],[1292,"impl-SubAssign%3C%26Assigned%3CF%3E%3E-for-Assigned%3CF%3E"],[1330,"impl-TryFrom%3CColumn%3CAny%3E%3E-for-Column%3CAdvice%3E"],[1331,"impl-TryFrom%3CColumn%3CAny%3E%3E-for-Column%3CInstance%3E"],[1332,"impl-TryFrom%3CColumn%3CAny%3E%3E-for-Column%3CFixed%3E"],[1517,"impl-AddAssign-for-Blind%3CF%3E"],[1518,"impl-AddAssign%3CF%3E-for-Blind%3CF%3E"],[1545,"impl-MulAssign-for-Blind%3CF%3E"],[1546,"impl-MulAssign%3CF%3E-for-Blind%3CF%3E"],[1615,"impl-MSM%3CC%3E-for-MSMIPA%3C\'a,+C%3E"],[1616,"impl-MSMIPA%3C\'a,+C%3E"],[1918,"impl-ProverSHPLONK%3C\'a,+E%3E"],[1919,"impl-Prover%3C\'params,+KZGCommitmentScheme%3CE%3E%3E-for-ProverSHPLONK%3C\'params,+E%3E"],[1977,"impl-AccumulatorStrategy%3CE%3E"],[1978,"impl-VerificationStrategy%3C\'params,+KZGCommitmentScheme%3CE%3E,+V%3E-for-AccumulatorStrategy%3CE%3E"],[1979,"impl-VerificationStrategy%3C\'params,+KZGCommitmentScheme%3CE%3E,+V%3E-for-SingleStrategy%3CE%3E"],[1980,"impl-SingleStrategy%3CE%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADEFsgAGAAEACQADAA4AAQARAAEAFgAAABgAAwBOAAkAYwAAAGUAEAB3AAcAhgAAAIsAEQCeAAgArAAHALUAAAC3AAAAuwAAAL4AAADCAAAAxAAIANsACQDnAAAA6QAAAOsAAADvAAoA+wADAAEBFwAdAQcAKAEOADkBAwA/AQwATgEIAFgBAgBdAQUAZwELAHUBAQB5AQgAkQEAAJQBCQCfAQIApAEMALIBBQC6AQUAxAEEANABAgDYAQ4A7AEDABUCFgAtAhgARwIGAFcCAABZAgYAbwIAAHQCAQB5Ah8AngITALMCHgDUAgIA2AIAANoCAADcAgQA4gIEAOwCHwBNAwgAYQMtAJIDIAC2AwAAwwMAAMcDLQD3AxYAEwQKACgEGwBGBAMATAQAAE8EAgBTBAAAVwQAAFkEAgBjBAAAbAQAAG4EAQBzBAcAgAQAAIIEFwC0BAAAwAQBAMMECwDTBAAA1QQAANcEAADZBAAA3QQCAOEEAADoBAAA7QQAAO8EAgABBQEABQUJABMFFAApBUcAdgUWAJcFCACmBQMAqwUBALAFAAC1BQEAvQUCAMsFAADRBQkA7QUCAPMFAQD2BQEA/AUCAAAGAAACBgAABAYAAAYGAAAJBgIAFgYDABsGAAAkBgUALQYJADkGAQA9BgEAQAYAAEIGBwBLBgEAVQYLAGIGAABlBgYAbgYDAHMGBwB9BgEAgQYKAJAGCwCdBgsAqwYDALQGAwC8BhEA0QYDANwGHAD9BgIAAwcFAAwHAQAPBw4AIQcAACQHAAAmBwYALgcDADMHCgBABwEARgcBAEkHCQBXBwcAYQcPAHUHAwB9BwEAgAcOAJAHAwCXBxkAtAcCALsHAQC+BxAA2wcLAOgHAQDrBwsA+AcDAAAIAAADCAAABQgAAAcIAAAMCAAADggAABAIAAASCAEAFQgOACUIAAAnCAAA"}],\
["p3_frontend",{"t":"PKFPFPPGPPPFFPFPPFGFPGPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNOHHNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNONNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Add","AirBuilderWithPublicValues","CompileParams","Constant","FWrap","FirstRow","LastRow","Location","Location","Mul","Neg","PreprocessingInfo","Public","Public","Query","Query","Sub","SymbolicAirBuilder","SymbolicExpression","SymbolicVariable","Transition","Var","Variable","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","as_base_slice","as_base_slice","as_canonical_biguint","as_canonical_u64","as_slice","as_slice_mut","assert_zero","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_witness","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","column","compile_circuit_cs","compile_preprocessing","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","disable_zk","div","double","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_base","from_base","from_base_fn","from_base_fn","from_base_slice","from_base_slice","from_bool","from_bool","from_canonical_u16","from_canonical_u16","from_canonical_u32","from_canonical_u32","from_canonical_u64","from_canonical_u64","from_canonical_u8","from_canonical_u8","from_canonical_usize","from_canonical_usize","from_f","from_f","from_fn","from_slice","from_slice_mut","from_wrapped_u32","from_wrapped_u32","from_wrapped_u64","from_wrapped_u64","generator","generator","get_public_inputs","hash","index","init","init","init","init","init","init","init","init","init","init","interleave","into","into","into","into","into","into","into","into","into","into","is_first_row","is_last_row","is_next","is_one","is_transition_window","is_zero","is_zero","main","mul","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","neg","neg","neg_one","neg_one","new_public","new_query","one","one","order","partial_cmp","product","product","product","public_values","public_values","serialize","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sum","sum","sum","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","trace_to_wit","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_inverse","two","two","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","zero","zero"],"q":[[0,"p3_frontend"],[305,"p3_frontend::fwrap"],[306,"ff"],[307,"p3_frontend::symbolic_expression"],[308,"p3_frontend::symbolic_variable"],[309,"p3_field::field"],[310,"num_bigint::biguint"],[311,"core::hash"],[312,"core::cmp"],[313,"p3_frontend::symbolic_builder"],[314,"core::convert"],[315,"halo2_middleware::circuit"],[316,"alloc::vec"],[317,"core::option"],[318,"core::clone"],[319,"p3_air::air"],[320,"core::default"],[321,"core::result"],[322,"serde::de"],[323,"core::fmt"],[324,"core::ops::function"],[325,"core::iter::traits::iterator"],[326,"p3_frontend::air"],[327,"serde::ser"],[328,"alloc::string"],[329,"p3_matrix::dense"],[330,"core::any"]],"i":[3,0,0,3,0,22,22,0,3,3,3,0,0,23,0,23,3,0,0,0,22,0,3,1,3,3,3,4,4,4,1,3,3,1,3,1,1,1,1,15,15,1,22,3,4,23,24,25,26,27,15,1,22,3,4,23,24,25,26,27,0,1,22,3,4,23,24,25,26,27,1,22,3,4,23,24,25,26,27,1,24,0,0,1,3,27,15,1,22,3,4,23,24,25,26,27,15,1,22,3,4,23,24,25,26,27,1,27,1,3,15,1,22,3,4,23,24,25,26,27,1,1,1,22,22,3,3,4,4,23,24,25,26,27,15,1,22,3,3,3,4,23,24,25,26,27,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,1,1,1,3,1,3,1,3,0,1,25,15,1,22,3,4,23,24,25,26,27,1,15,1,22,3,4,23,24,25,26,27,15,15,24,3,15,1,3,15,1,3,3,3,4,4,4,1,3,3,1,3,1,3,4,4,1,3,1,1,1,3,3,50,15,1,1,3,3,3,4,4,4,1,3,3,1,3,3,1,22,3,4,23,24,25,26,27,1,22,3,4,0,15,1,22,3,4,23,24,25,26,27,15,1,22,3,4,23,24,25,26,27,1,1,3,15,1,22,3,4,23,24,25,26,27,15,1,22,3,4,23,24,25,26,27,1,3],"f":"```````````````````````{{{b{c}}{b{c}}}{{b{c}}}d}{{{f{c}}{h{c}}}ej{}}{{{f{c}}c}{{f{c}}}j}{{{f{c}}{f{c}}}{{f{c}}}j}{{{h{c}}{h{c}}}ej{}}{{{h{c}}c}ej{}}{{{h{c}}{f{c}}}ej{}}{{{n{l{b{c}}}}{b{c}}}A`d}{{{n{l{f{c}}}}c}A`j}{{{n{l{f{c}}}}{f{c}}}A`j}{{{n{c}}}{{n{{Ab{e}}}}}{}{}}0{{{n{{b{c}}}}}Ad{AfAhAj}}{{{n{{b{c}}}}}Al{AfAhAj}}{{{n{c}}}{{n{Ab}}}{}}{{{n{lc}}}{{n{lAb}}}{}}{{{n{l{An{c}}}}g}A`j{}{{B`{e}}}}{{{n{c}}}{{n{e}}}{}{}}000000000{{{n{lc}}}{{n{le}}}{}{}}000000000{{{n{{Bb{c}}}}Bd{n{{Ab{{Bh{{Bf{c}}}}}}}}{n{{Ab{{Bf{c}}}}}}}A`d}{{{n{{b{c}}}}}{{b{c}}}{Bjd}}{{{n{Bl}}}Bl}{{{n{{f{c}}}}}{{f{c}}}{Bjj}}{{{n{{h{c}}}}}{{h{c}}}{Bjj}}{{{n{Bn}}}Bn}{{{n{C`}}}C`}{{{n{Cb}}}Cb}{{{n{Cd}}}Cd}{{{n{Cf}}}Cf}{{{n{c}}{n{le}}}A`{}{}}00000000{{{n{{b{c}}}}{n{{b{c}}}}}Ch{Ajd}}`{{{n{e}}{n{Cf}}Cj}{{Cn{{Cl{c}}Cd}}}{AfAh}{{D`{{An{{b{c}}}}}}}}{{BdCj{n{Cd}}{n{e}}}{{Db{c}}}{AfAh}{{D`{{An{{b{c}}}}}}}}{{}{{b{c}}}{Ddd}}{{}{{f{c}}}j}{{}Cf}{Cj{{n{c}}}{}}000000000{Cj{{n{lc}}}{}}000000000{c{{Df{{b{e}}}}}DhAf}`{{{b{c}}{b{c}}}{{b{c}}}d}{{{n{{f{c}}}}}{{f{c}}}j}{CjA`}000000000{{{n{{b{c}}}}{n{{b{c}}}}}Dj{Dld}}{{{n{{b{c}}}}{n{lDn}}}E`d}{{{n{{b{c}}}}{n{lDn}}}E`{Ebd}}{{{n{Bl}}{n{lDn}}}E`}0{{{n{{f{c}}}}{n{lDn}}}E`{Ebj}}{{{n{{f{c}}}}{n{lDn}}}E`j}{{{n{{h{c}}}}{n{lDn}}}E`j}{{{n{{h{c}}}}{n{lDn}}}E`{Ebj}}{{{n{Bn}}{n{lDn}}}E`}{{{n{C`}}{n{lDn}}}E`}{{{n{Cb}}{n{lDn}}}E`}{{{n{Cd}}{n{lDn}}}E`}{{{n{Cf}}{n{lDn}}}E`}{cc{}}00{c{{f{c}}}j}1{{{h{c}}}{{f{c}}}j}22222222{ec{}{{Ef{Cj}{{Ed{c}}}}}}0{{{n{{Ab{c}}}}}c{}}0{Dj{{b{c}}}{AfAh}}{Dj{{f{c}}}j}{Eh{{b{c}}}{AfAh}}{Eh{{f{c}}}j}{Bd{{b{c}}}{AfAh}}{Bd{{f{c}}}j}{Al{{b{c}}}{AfAh}}{Al{{f{c}}}j}{Ej{{b{c}}}{AfAh}}{Ej{{f{c}}}j}{Cj{{b{c}}}{AfAh}}{Cj{{f{c}}}j}{c{{b{e}}}{}{AfAh}}{c{{f{e}}}{}j}{ce{{Ef{Cj}{{Ed{}}}}}{}}{{{n{Ab}}}{{n{c}}}{}}{{{n{lAb}}}{{n{lc}}}{}}<;:9{{}{{b{c}}}{AfAh}}{{}{{f{c}}}j}{{{n{Cd}}Cj{n{{Ab{{Bh{{Bf{c}}}}}}}}}{{Bf{{Bf{c}}}}}d}{{{n{{b{c}}}}{n{le}}}A`{Ahd}El}`{{}Cj}000000000{{{n{c}}eCj}{{Cn{ee}}}{}{}}{ce{}{}}000000000{{{n{{An{c}}}}}ej{}}0`{{{n{{f{c}}}}}Djj}{{{n{{An{c}}}}Cj}ej{}}{{{n{{b{c}}}}}Dj{AfAh}}23{{{b{c}}{b{c}}}{{b{c}}}d}{{{f{c}}{f{c}}}{{f{c}}}j}{{{f{c}}c}{{f{c}}}j}{{{f{c}}{h{c}}}ej{}}{{{h{c}}{h{c}}}ej{}}{{{h{c}}c}ej{}}{{{h{c}}{f{c}}}ej{}}{{{n{l{b{c}}}}{b{c}}}A`d}{{{n{l{f{c}}}}{f{c}}}A`j}{{{n{l{f{c}}}}c}A`j}{{{b{c}}}ed{}}{{{f{c}}}{{f{c}}}j}{{}{{b{c}}}{AfAh}}{{}{{f{c}}}j}{Cj{{h{c}}}j}{{DjCj}{{h{c}}}j}32{{}Ad}{{{n{{b{c}}}}{n{{b{c}}}}}{{Bh{Ch}}}{End}}{e{{b{c}}}d{{Fb{}{{F`{{b{c}}}}}}}}{e{{f{c}}}j{{Fb{}{{F`{{f{c}}}}}}}}{e{{f{c}}}j{{Fb{}{{F`{c}}}}}}{{{n{Fd}}}{{n{{Ab{c}}}}}{}}{{{n{{An{c}}}}}{{n{{Ab{e}}}}}j{}}{{{n{{b{c}}}}e}DfAfFf}{{{b{c}}{b{c}}}{{b{c}}}d}{{{f{c}}c}{{f{c}}}j}{{{f{c}}{h{c}}}ej{}}{{{f{c}}{f{c}}}{{f{c}}}j}{{{h{c}}{f{c}}}ej{}}{{{h{c}}c}ej{}}{{{h{c}}{h{c}}}ej{}}{{{n{l{b{c}}}}{b{c}}}A`d}{{{n{l{f{c}}}}c}A`j}{{{n{l{f{c}}}}{f{c}}}A`j}?>={{{n{c}}}e{}{}}00000000{{{n{c}}}Fh{}}000{{Bd{Fj{{b{c}}}}}{{Bf{{Bh{{Bf{c}}}}}}}d}{c{{Df{e}}}{}{}}0000000000000000000{{{n{{b{c}}}}}{{Bh{{b{c}}}}}{AfAh}}{{}{{b{c}}}{AfAh}}{{}{{f{c}}}j}{{{n{c}}}Fl{}}000000000{ce{}{}}00000000032","D":"C`","p":[[5,"FWrap",0,305],[10,"Field",306],[6,"SymbolicExpression",0,307],[5,"SymbolicVariable",0,308],[10,"Field",309],[0,"mut"],[1,"reference"],[1,"unit"],[1,"slice"],[5,"BigUint",310],[10,"PrimeField",306],[10,"Hash",311],[10,"Ord",312],[1,"u64"],[5,"SymbolicAirBuilder",0,313],[10,"Into",314],[5,"CompiledCircuit",315],[1,"u32"],[5,"Vec",316],[6,"Option",317],[10,"Clone",318],[6,"Location",0,307],[6,"Var",0,308],[5,"Query",0,308],[5,"Public",0,308],[5,"PreprocessingInfo",0],[5,"CompileParams",0],[6,"Ordering",312],[1,"usize"],[5,"ConstraintSystemMid",315],[1,"tuple"],[10,"Air",319],[5,"Preprocessing",315],[10,"Default",320],[6,"Result",321],[10,"Deserializer",322],[1,"bool"],[10,"PartialEq",312],[5,"Formatter",323],[8,"Result",323],[10,"Debug",323],[17,"Output"],[10,"FnMut",324],[1,"u16"],[1,"u8"],[10,"Hasher",311],[10,"PartialOrd",312],[17,"Item"],[10,"Iterator",325],[10,"AirBuilderWithPublicValues",0,326],[10,"Serializer",327],[5,"String",328],[5,"RowMajorMatrix",329],[5,"TypeId",330]],"r":[[1,326],[4,305],[7,307],[12,308],[14,308],[17,313],[18,307],[19,308],[21,308]],"b":[[24,"impl-Add%3CSymbolicVariable%3CF%3E%3E-for-SymbolicExpression%3CF%3E"],[25,"impl-Add%3CF%3E-for-SymbolicExpression%3CF%3E"],[26,"impl-Add-for-SymbolicExpression%3CF%3E"],[27,"impl-Add-for-SymbolicVariable%3CF%3E"],[28,"impl-Add%3CF%3E-for-SymbolicVariable%3CF%3E"],[29,"impl-Add%3CSymbolicExpression%3CF%3E%3E-for-SymbolicVariable%3CF%3E"],[31,"impl-AddAssign%3CF%3E-for-SymbolicExpression%3CF%3E"],[32,"impl-AddAssign-for-SymbolicExpression%3CF%3E"],[121,"impl-Display-for-FWrap%3CF%3E"],[122,"impl-Debug-for-FWrap%3CF%3E"],[123,"impl-Display-for-Location"],[124,"impl-Debug-for-Location"],[125,"impl-Debug-for-SymbolicExpression%3CF%3E"],[126,"impl-Display-for-SymbolicExpression%3CF%3E"],[127,"impl-Display-for-SymbolicVariable%3CF%3E"],[128,"impl-Debug-for-SymbolicVariable%3CF%3E"],[137,"impl-From%3CF%3E-for-SymbolicExpression%3CF%3E"],[139,"impl-From%3CSymbolicVariable%3CF%3E%3E-for-SymbolicExpression%3CF%3E"],[208,"impl-Mul-for-SymbolicExpression%3CF%3E"],[209,"impl-Mul%3CF%3E-for-SymbolicExpression%3CF%3E"],[210,"impl-Mul%3CSymbolicVariable%3CF%3E%3E-for-SymbolicExpression%3CF%3E"],[211,"impl-Mul-for-SymbolicVariable%3CF%3E"],[212,"impl-Mul%3CF%3E-for-SymbolicVariable%3CF%3E"],[213,"impl-Mul%3CSymbolicExpression%3CF%3E%3E-for-SymbolicVariable%3CF%3E"],[215,"impl-MulAssign-for-SymbolicExpression%3CF%3E"],[216,"impl-MulAssign%3CF%3E-for-SymbolicExpression%3CF%3E"],[228,"impl-Product-for-SymbolicExpression%3CF%3E"],[229,"impl-Product%3CF%3E-for-SymbolicExpression%3CF%3E"],[234,"impl-Sub%3CF%3E-for-SymbolicExpression%3CF%3E"],[235,"impl-Sub%3CSymbolicVariable%3CF%3E%3E-for-SymbolicExpression%3CF%3E"],[236,"impl-Sub-for-SymbolicExpression%3CF%3E"],[237,"impl-Sub%3CSymbolicExpression%3CF%3E%3E-for-SymbolicVariable%3CF%3E"],[238,"impl-Sub%3CF%3E-for-SymbolicVariable%3CF%3E"],[239,"impl-Sub-for-SymbolicVariable%3CF%3E"],[241,"impl-SubAssign%3CF%3E-for-SymbolicExpression%3CF%3E"],[242,"impl-SubAssign-for-SymbolicExpression%3CF%3E"],[244,"impl-Sum-for-SymbolicExpression%3CF%3E"],[245,"impl-Sum%3CF%3E-for-SymbolicExpression%3CF%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABkBBgABABAAFQBxAIoAAACMAAAAkwAqAMgAaQA="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
